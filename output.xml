<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170525 08:11:29.828" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test get total of clients">
<kw name="Get the total of clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:30.456" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:30.458" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:30.458" starttime="20170525 08:11:30.455"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:30.460" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:30.461" starttime="20170525 08:11:30.459"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:30.474" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:30.475" starttime="20170525 08:11:30.461"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.268" starttime="20170525 08:11:30.476"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:33.269" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:33.269" starttime="20170525 08:11:33.269"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${total_clients}</var>
</assign>
<msg timestamp="20170525 08:11:33.271" level="INFO">${total_clients} = 17</msg>
<status status="PASS" endtime="20170525 08:11:33.272" starttime="20170525 08:11:33.270"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe total number of clients in database is: ${total_clients}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.273" starttime="20170525 08:11:33.272"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.273" starttime="20170525 08:11:33.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.274" starttime="20170525 08:11:33.274"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.275" starttime="20170525 08:11:30.454"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.275" critical="yes" starttime="20170525 08:11:30.451"></status>
</test>
<test id="s1-s1-s1-t2" name="Test create a new client">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170525 08:11:33.277" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170525 08:11:33.277" starttime="20170525 08:11:33.277"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170525 08:11:33.278" level="INFO">${name} = zprxejlzqa</msg>
<status status="PASS" endtime="20170525 08:11:33.278" starttime="20170525 08:11:33.278"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170525 08:11:33.279" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170525 08:11:33.279" starttime="20170525 08:11:33.279"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170525 08:11:33.280" level="INFO">${email} = zprxejlzqa@email.com</msg>
<status status="PASS" endtime="20170525 08:11:33.280" starttime="20170525 08:11:33.280"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170525 08:11:33.281" level="INFO">${socialSecurityNumber} = 456925613</msg>
<status status="PASS" endtime="20170525 08:11:33.281" starttime="20170525 08:11:33.280"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170525 08:11:33.282" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170525 08:11:33.282" starttime="20170525 08:11:33.281"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170525 08:11:33.284" level="INFO">${dictionary} = {u'id': u'100', u'name': u'zprxejlzqa', u'createDate': u'1473633063279', u'email': u'zprxejlzqa@email.com', u'gender': u'F', u'socialSecurityNumber': u'456925613'}</msg>
<status status="PASS" endtime="20170525 08:11:33.286" starttime="20170525 08:11:33.282"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170525 08:11:33.287" level="INFO">${client_json} = {"id": "100", "name": "zprxejlzqa", "createDate": "1473633063279", "email": "zprxejlzqa@email.com", "gender": "F", "socialSecurityNumber": "456925613"}</msg>
<status status="PASS" endtime="20170525 08:11:33.288" starttime="20170525 08:11:33.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.289" starttime="20170525 08:11:33.288"></status>
</kw>
<msg timestamp="20170525 08:11:33.289" level="INFO">${request_body} = {"id": "100", "name": "zprxejlzqa", "createDate": "1473633063279", "email": "zprxejlzqa@email.com", "gender": "F", "socialSecurityNumber": "456925613"}</msg>
<status status="PASS" endtime="20170525 08:11:33.289" starttime="20170525 08:11:33.276"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.290" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:33.290" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:33.290" starttime="20170525 08:11:33.290"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.291" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:33.292" starttime="20170525 08:11:33.291"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.293" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:33.293" starttime="20170525 08:11:33.292"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.294" level="INFO">Request body set to "{"id": "100", "name": "zprxejlzqa", "createDate": "1473633063279", "email": "zprxejlzqa@email.com", "gender": "F", "socialSecurityNumber": "456925613"}".</msg>
<status status="PASS" endtime="20170525 08:11:33.294" starttime="20170525 08:11:33.293"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.295" starttime="20170525 08:11:33.295"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.704" starttime="20170525 08:11:33.296"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:33.705" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:33.705" starttime="20170525 08:11:33.704"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.706" starttime="20170525 08:11:33.705"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.707" starttime="20170525 08:11:33.706"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.708" starttime="20170525 08:11:33.276"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.708" critical="yes" starttime="20170525 08:11:33.275"></status>
</test>
<test id="s1-s1-s1-t3" name="Test get all clients">
<kw name="Get all clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.710" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:33.710" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:33.711" starttime="20170525 08:11:33.710"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.844" starttime="20170525 08:11:33.711"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:33.845" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:33.845" starttime="20170525 08:11:33.844"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170525 08:11:33.846" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170525 08:11:33.847" starttime="20170525 08:11:33.845"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.848" starttime="20170525 08:11:33.847"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nShowing all clients in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.849" starttime="20170525 08:11:33.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.850" starttime="20170525 08:11:33.849"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.850" starttime="20170525 08:11:33.709"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.850" critical="yes" starttime="20170525 08:11:33.708"></status>
</test>
<test id="s1-s1-s1-t4" name="Test get specific client from id">
<kw name="Get specific client from id" library="client_operations">
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_to_get}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.854" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:33.854" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:33.854" starttime="20170525 08:11:33.853"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.870" starttime="20170525 08:11:33.855"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:33.871" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:33.872" starttime="20170525 08:11:33.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.873" starttime="20170525 08:11:33.872"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:33.875" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170525 08:11:33.875" starttime="20170525 08:11:33.874"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.889" starttime="20170525 08:11:33.876"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:33.890" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:33.890" starttime="20170525 08:11:33.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.891" starttime="20170525 08:11:33.890"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:33.892" level="INFO">${body_second_request} = 18</msg>
<status status="PASS" endtime="20170525 08:11:33.892" starttime="20170525 08:11:33.891"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:33.893" level="INFO">${last_index} = 17</msg>
<status status="PASS" endtime="20170525 08:11:33.893" starttime="20170525 08:11:33.892"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:33.894" level="INFO">${json_id} = 40</msg>
<status status="PASS" endtime="20170525 08:11:33.894" starttime="20170525 08:11:33.893"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.895" starttime="20170525 08:11:33.895"></status>
</kw>
<msg timestamp="20170525 08:11:33.896" level="INFO">${id_to_get} = 40</msg>
<status status="PASS" endtime="20170525 08:11:33.896" starttime="20170525 08:11:33.853"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.897" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:33.898" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:33.898" starttime="20170525 08:11:33.897"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.899" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:33.899" starttime="20170525 08:11:33.899"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.900" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:33.901" starttime="20170525 08:11:33.900"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_client_endpoint}${id_to_get}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.910" starttime="20170525 08:11:33.901"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:33.911" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:33.912" starttime="20170525 08:11:33.911"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170525 08:11:33.913" level="INFO">${response_body} = {"id":40,"name":"zprxejlzqa","createDate":1473633063279,"email":"zprxejlzqa@email.com","gender":"F","socialSecurityNumber":"456925613"}</msg>
<status status="PASS" endtime="20170525 08:11:33.913" starttime="20170525 08:11:33.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.915" starttime="20170525 08:11:33.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe last added client in the database is:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.916" starttime="20170525 08:11:33.916"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.917" starttime="20170525 08:11:33.852"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.917" critical="yes" starttime="20170525 08:11:33.851"></status>
</test>
<test id="s1-s1-s1-t5" name="Test create and delete client">
<kw name="Delete client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170525 08:11:33.928" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170525 08:11:33.928" starttime="20170525 08:11:33.927"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170525 08:11:33.929" level="INFO">${name} = uvzapgjidy</msg>
<status status="PASS" endtime="20170525 08:11:33.929" starttime="20170525 08:11:33.928"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170525 08:11:33.930" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170525 08:11:33.930" starttime="20170525 08:11:33.929"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170525 08:11:33.931" level="INFO">${email} = uvzapgjidy@email.com</msg>
<status status="PASS" endtime="20170525 08:11:33.931" starttime="20170525 08:11:33.930"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170525 08:11:33.932" level="INFO">${socialSecurityNumber} = 240269107</msg>
<status status="PASS" endtime="20170525 08:11:33.932" starttime="20170525 08:11:33.931"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170525 08:11:33.933" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170525 08:11:33.933" starttime="20170525 08:11:33.932"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170525 08:11:33.934" level="INFO">${dictionary} = {u'id': u'100', u'name': u'uvzapgjidy', u'createDate': u'1473633063279', u'email': u'uvzapgjidy@email.com', u'gender': u'M', u'socialSecurityNumber': u'240269107'}</msg>
<status status="PASS" endtime="20170525 08:11:33.935" starttime="20170525 08:11:33.933"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170525 08:11:33.938" level="INFO">${client_json} = {"id": "100", "name": "uvzapgjidy", "createDate": "1473633063279", "email": "uvzapgjidy@email.com", "gender": "M", "socialSecurityNumber": "240269107"}</msg>
<status status="PASS" endtime="20170525 08:11:33.938" starttime="20170525 08:11:33.937"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.939" starttime="20170525 08:11:33.939"></status>
</kw>
<msg timestamp="20170525 08:11:33.940" level="INFO">${request_body} = {"id": "100", "name": "uvzapgjidy", "createDate": "1473633063279", "email": "uvzapgjidy@email.com", "gender": "M", "socialSecurityNumber": "240269107"}</msg>
<status status="PASS" endtime="20170525 08:11:33.940" starttime="20170525 08:11:33.926"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.941" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:33.941" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:33.941" starttime="20170525 08:11:33.940"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.942" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:33.942" starttime="20170525 08:11:33.942"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.943" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:33.944" starttime="20170525 08:11:33.943"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.945" level="INFO">Request body set to "{"id": "100", "name": "uvzapgjidy", "createDate": "1473633063279", "email": "uvzapgjidy@email.com", "gender": "M", "socialSecurityNumber": "240269107"}".</msg>
<status status="PASS" endtime="20170525 08:11:33.945" starttime="20170525 08:11:33.944"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.946" starttime="20170525 08:11:33.945"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.968" starttime="20170525 08:11:33.946"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:33.971" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:33.971" starttime="20170525 08:11:33.970"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.972" starttime="20170525 08:11:33.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.973" starttime="20170525 08:11:33.972"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:33.973" starttime="20170525 08:11:33.926"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:33.975" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:33.975" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:33.975" starttime="20170525 08:11:33.974"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.991" starttime="20170525 08:11:33.975"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:33.992" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:33.992" starttime="20170525 08:11:33.991"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:33.994" starttime="20170525 08:11:33.993"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:33.995" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170525 08:11:33.995" starttime="20170525 08:11:33.994"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.007" starttime="20170525 08:11:33.995"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.015" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.015" starttime="20170525 08:11:34.014"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.017" starttime="20170525 08:11:34.016"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.018" level="INFO">${body_second_request} = 19</msg>
<status status="PASS" endtime="20170525 08:11:34.018" starttime="20170525 08:11:34.017"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.019" level="INFO">${last_index} = 18</msg>
<status status="PASS" endtime="20170525 08:11:34.020" starttime="20170525 08:11:34.019"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.057" level="INFO">${json_id} = 41</msg>
<status status="PASS" endtime="20170525 08:11:34.057" starttime="20170525 08:11:34.020"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.058" starttime="20170525 08:11:34.058"></status>
</kw>
<msg timestamp="20170525 08:11:34.059" level="INFO">${id_of_created_client} = 41</msg>
<status status="PASS" endtime="20170525 08:11:34.059" starttime="20170525 08:11:33.973"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.060" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.060" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.060" starttime="20170525 08:11:34.059"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.061" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.061" starttime="20170525 08:11:34.060"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.061" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.061" starttime="20170525 08:11:34.061"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.080" starttime="20170525 08:11:34.062"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.082" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.083" starttime="20170525 08:11:34.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.084" starttime="20170525 08:11:34.084"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.086" starttime="20170525 08:11:34.085"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nClient with id: ${id_of_created_client} was succesfully deleted!</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.087" starttime="20170525 08:11:34.087"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.088" starttime="20170525 08:11:33.919"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.089" critical="yes" starttime="20170525 08:11:33.918"></status>
</test>
<test id="s1-s1-s1-t6" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170525 08:11:34.094" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170525 08:11:34.094" starttime="20170525 08:11:34.093"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170525 08:11:34.096" level="INFO">${name} = nruhfrclrq</msg>
<status status="PASS" endtime="20170525 08:11:34.096" starttime="20170525 08:11:34.095"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170525 08:11:34.097" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170525 08:11:34.097" starttime="20170525 08:11:34.096"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170525 08:11:34.099" level="INFO">${email} = nruhfrclrq@email.com</msg>
<status status="PASS" endtime="20170525 08:11:34.099" starttime="20170525 08:11:34.098"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170525 08:11:34.100" level="INFO">${socialSecurityNumber} = 946884143</msg>
<status status="PASS" endtime="20170525 08:11:34.101" starttime="20170525 08:11:34.100"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170525 08:11:34.102" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170525 08:11:34.102" starttime="20170525 08:11:34.101"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170525 08:11:34.104" level="INFO">${dictionary} = {u'id': u'100', u'name': u'nruhfrclrq', u'createDate': u'1473633063279', u'email': u'nruhfrclrq@email.com', u'gender': u'M', u'socialSecurityNumber': u'946884143'}</msg>
<status status="PASS" endtime="20170525 08:11:34.105" starttime="20170525 08:11:34.103"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170525 08:11:34.106" level="INFO">${client_json} = {"id": "100", "name": "nruhfrclrq", "createDate": "1473633063279", "email": "nruhfrclrq@email.com", "gender": "M", "socialSecurityNumber": "946884143"}</msg>
<status status="PASS" endtime="20170525 08:11:34.107" starttime="20170525 08:11:34.106"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.108" starttime="20170525 08:11:34.107"></status>
</kw>
<msg timestamp="20170525 08:11:34.109" level="INFO">${request_body} = {"id": "100", "name": "nruhfrclrq", "createDate": "1473633063279", "email": "nruhfrclrq@email.com", "gender": "M", "socialSecurityNumber": "946884143"}</msg>
<status status="PASS" endtime="20170525 08:11:34.109" starttime="20170525 08:11:34.092"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.110" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.111" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.111" starttime="20170525 08:11:34.110"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.113" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.114" starttime="20170525 08:11:34.112"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.115" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.115" starttime="20170525 08:11:34.114"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.117" level="INFO">Request body set to "{"id": "100", "name": "nruhfrclrq", "createDate": "1473633063279", "email": "nruhfrclrq@email.com", "gender": "M", "socialSecurityNumber": "946884143"}".</msg>
<status status="PASS" endtime="20170525 08:11:34.117" starttime="20170525 08:11:34.116"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.118" starttime="20170525 08:11:34.117"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.138" starttime="20170525 08:11:34.118"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.142" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.142" starttime="20170525 08:11:34.138"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.143" starttime="20170525 08:11:34.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.147" starttime="20170525 08:11:34.146"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.148" starttime="20170525 08:11:34.092"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.150" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.150" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.151" starttime="20170525 08:11:34.149"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.169" starttime="20170525 08:11:34.152"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.174" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.174" starttime="20170525 08:11:34.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.175" starttime="20170525 08:11:34.175"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.177" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170525 08:11:34.177" starttime="20170525 08:11:34.176"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.185" starttime="20170525 08:11:34.178"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.188" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.188" starttime="20170525 08:11:34.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.189" starttime="20170525 08:11:34.189"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.190" level="INFO">${body_second_request} = 19</msg>
<status status="PASS" endtime="20170525 08:11:34.191" starttime="20170525 08:11:34.190"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.195" level="INFO">${last_index} = 18</msg>
<status status="PASS" endtime="20170525 08:11:34.195" starttime="20170525 08:11:34.191"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.196" level="INFO">${json_id} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.197" starttime="20170525 08:11:34.196"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.198" starttime="20170525 08:11:34.197"></status>
</kw>
<msg timestamp="20170525 08:11:34.198" level="INFO">${id_of_created_client} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.198" starttime="20170525 08:11:34.148"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.200" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.200" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.200" starttime="20170525 08:11:34.200"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.214" starttime="20170525 08:11:34.201"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.215" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.215" starttime="20170525 08:11:34.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.216" starttime="20170525 08:11:34.215"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.217" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170525 08:11:34.217" starttime="20170525 08:11:34.216"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.231" starttime="20170525 08:11:34.218"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.232" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.232" starttime="20170525 08:11:34.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.233" starttime="20170525 08:11:34.233"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.240" level="INFO">${body_second_request} = 19</msg>
<status status="PASS" endtime="20170525 08:11:34.241" starttime="20170525 08:11:34.236"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.249" level="INFO">${last_index} = 18</msg>
<status status="PASS" endtime="20170525 08:11:34.249" starttime="20170525 08:11:34.248"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.250" level="INFO">${json_id} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.250" starttime="20170525 08:11:34.249"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.265" starttime="20170525 08:11:34.264"></status>
</kw>
<msg timestamp="20170525 08:11:34.266" level="INFO">${id} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.266" starttime="20170525 08:11:34.199"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170525 08:11:34.267" level="INFO">${name} = yfidfplmgf</msg>
<status status="PASS" endtime="20170525 08:11:34.268" starttime="20170525 08:11:34.267"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170525 08:11:34.269" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170525 08:11:34.269" starttime="20170525 08:11:34.268"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170525 08:11:34.272" level="INFO">${email} = yfidfplmgf@email.com</msg>
<status status="PASS" endtime="20170525 08:11:34.272" starttime="20170525 08:11:34.271"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170525 08:11:34.274" level="INFO">${socialSecurityNumber} = 795784949</msg>
<status status="PASS" endtime="20170525 08:11:34.274" starttime="20170525 08:11:34.273"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170525 08:11:34.275" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170525 08:11:34.275" starttime="20170525 08:11:34.274"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170525 08:11:34.277" level="INFO">${dictionary} = {u'id': '42', u'name': u'yfidfplmgf', u'createDate': u'1473633063279', u'email': u'yfidfplmgf@email.com', u'gender': u'F', u'socialSecurityNumber': u'795784949'}</msg>
<status status="PASS" endtime="20170525 08:11:34.277" starttime="20170525 08:11:34.276"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170525 08:11:34.278" level="INFO">${update_client_json} = {"id": "42", "name": "yfidfplmgf", "createDate": "1473633063279", "email": "yfidfplmgf@email.com", "gender": "F", "socialSecurityNumber": "795784949"}</msg>
<status status="PASS" endtime="20170525 08:11:34.278" starttime="20170525 08:11:34.277"></status>
</kw>
<msg timestamp="20170525 08:11:34.278" level="INFO">${request_body_new_client_data} = {"id": "42", "name": "yfidfplmgf", "createDate": "1473633063279", "email": "yfidfplmgf@email.com", "gender": "F", "socialSecurityNumber": "795784949"}</msg>
<status status="PASS" endtime="20170525 08:11:34.279" starttime="20170525 08:11:34.198"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe new client data is:\n${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.281" starttime="20170525 08:11:34.279"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.282" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.282" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.283" starttime="20170525 08:11:34.281"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.283" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.284" starttime="20170525 08:11:34.283"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.284" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.285" starttime="20170525 08:11:34.284"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.294" level="INFO">Request body set to "{"id": "42", "name": "yfidfplmgf", "createDate": "1473633063279", "email": "yfidfplmgf@email.com", "gender": "F", "socialSecurityNumber": "795784949"}".</msg>
<status status="PASS" endtime="20170525 08:11:34.294" starttime="20170525 08:11:34.294"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.313" starttime="20170525 08:11:34.298"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nUpdating client with data:\n${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.314" starttime="20170525 08:11:34.314"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.315" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.315" starttime="20170525 08:11:34.315"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.322" starttime="20170525 08:11:34.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.323" starttime="20170525 08:11:34.323"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.323" starttime="20170525 08:11:34.091"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.324" critical="yes" starttime="20170525 08:11:34.090"></status>
</test>
<test id="s1-s1-s1-t7" name="Get bedrooms">
<kw name="Get all bedrooms" library="bedroom_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.326" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.326" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.326" starttime="20170525 08:11:34.325"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.476" starttime="20170525 08:11:34.327"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.477" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.477" starttime="20170525 08:11:34.477"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170525 08:11:34.478" level="INFO">${response_body} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170525 08:11:34.478" starttime="20170525 08:11:34.477"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.480" starttime="20170525 08:11:34.479"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nShowing all bedrooms in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.481" starttime="20170525 08:11:34.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.482" starttime="20170525 08:11:34.481"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.482" starttime="20170525 08:11:34.325"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.482" critical="yes" starttime="20170525 08:11:34.324"></status>
</test>
<test id="s1-s1-s1-t8" name="Test create new bedroom">
<kw name="Create new bedroom" library="bedroom_operations">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${bedroom_json1}</arg>
<arg>${bedroom_json2}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20170525 08:11:34.485" level="INFO">${request_body} = {"id":100,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170525 08:11:34.485" starttime="20170525 08:11:34.484"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.486" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.486" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.490" starttime="20170525 08:11:34.485"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.494" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.495" starttime="20170525 08:11:34.490"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.496" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.496" starttime="20170525 08:11:34.495"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.497" level="INFO">Request body set to "{"id":100,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}".</msg>
<status status="PASS" endtime="20170525 08:11:34.497" starttime="20170525 08:11:34.497"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating bedroom with data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.499" starttime="20170525 08:11:34.498"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.538" starttime="20170525 08:11:34.499"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.539" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.544" starttime="20170525 08:11:34.538"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.546" starttime="20170525 08:11:34.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.547" starttime="20170525 08:11:34.547"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.548" starttime="20170525 08:11:34.484"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.548" critical="yes" starttime="20170525 08:11:34.483"></status>
</test>
<test id="s1-s1-s1-t9" name="Test get last bedroom from database">
<kw name="Get specific bedroom from id" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_last_bedroom_in_database}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.552" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.552" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.552" starttime="20170525 08:11:34.551"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.565" starttime="20170525 08:11:34.553"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.566" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.566" starttime="20170525 08:11:34.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.567" starttime="20170525 08:11:34.566"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.569" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170525 08:11:34.569" starttime="20170525 08:11:34.568"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.577" starttime="20170525 08:11:34.570"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.578" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.578" starttime="20170525 08:11:34.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.581" starttime="20170525 08:11:34.579"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.585" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170525 08:11:34.585" starttime="20170525 08:11:34.582"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.595" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170525 08:11:34.596" starttime="20170525 08:11:34.595"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.597" level="INFO">${json_id} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.597" starttime="20170525 08:11:34.596"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.598" starttime="20170525 08:11:34.597"></status>
</kw>
<msg timestamp="20170525 08:11:34.598" level="INFO">${id_last_bedroom_in_database} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.599" starttime="20170525 08:11:34.550"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.602" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.603" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.604" starttime="20170525 08:11:34.601"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_bedroom_endpoint}${id_last_bedroom_in_database}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.623" starttime="20170525 08:11:34.605"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.624" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.624" starttime="20170525 08:11:34.624"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170525 08:11:34.625" level="INFO">${response_body} = {"id":42,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170525 08:11:34.625" starttime="20170525 08:11:34.625"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.626" starttime="20170525 08:11:34.626"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nLast bedrooms in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.627" starttime="20170525 08:11:34.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.628" starttime="20170525 08:11:34.628"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.628" starttime="20170525 08:11:34.550"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.629" critical="yes" starttime="20170525 08:11:34.549"></status>
</test>
<test id="s1-s1-s1-t10" name="Test Update bedroom">
<kw name="Update previously created bedroom" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_of_last_created_bedroom}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.631" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.631" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.631" starttime="20170525 08:11:34.630"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.647" starttime="20170525 08:11:34.631"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.649" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.649" starttime="20170525 08:11:34.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.650" starttime="20170525 08:11:34.649"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.651" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170525 08:11:34.651" starttime="20170525 08:11:34.650"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.656" starttime="20170525 08:11:34.651"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.657" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.657" starttime="20170525 08:11:34.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.658" starttime="20170525 08:11:34.657"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.659" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170525 08:11:34.659" starttime="20170525 08:11:34.658"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.660" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170525 08:11:34.660" starttime="20170525 08:11:34.659"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.662" level="INFO">${json_id} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.662" starttime="20170525 08:11:34.661"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.663" starttime="20170525 08:11:34.662"></status>
</kw>
<msg timestamp="20170525 08:11:34.664" level="INFO">${id_of_last_created_bedroom} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.664" starttime="20170525 08:11:34.630"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>{"id":${id_of_last_created_bedroom},"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},</arg>
<arg>"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20170525 08:11:34.665" level="INFO">${request_body} = {"id":42,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170525 08:11:34.665" starttime="20170525 08:11:34.664"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.666" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.666" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.666" starttime="20170525 08:11:34.666"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.667" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.667" starttime="20170525 08:11:34.667"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.668" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.668" starttime="20170525 08:11:34.668"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.669" level="INFO">Request body set to "{"id":42,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}".</msg>
<status status="PASS" endtime="20170525 08:11:34.669" starttime="20170525 08:11:34.669"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.682" starttime="20170525 08:11:34.670"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nUpdating bedroom with data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.683" starttime="20170525 08:11:34.683"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.686" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.686" starttime="20170525 08:11:34.685"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.687" starttime="20170525 08:11:34.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.688" starttime="20170525 08:11:34.688"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.689" starttime="20170525 08:11:34.629"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.689" critical="yes" starttime="20170525 08:11:34.629"></status>
</test>
<test id="s1-s1-s1-t11" name="Test Delete last created bedroom">
<kw name="Delete bedroom" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_of_last_created_bedroom}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.692" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.692" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.692" starttime="20170525 08:11:34.691"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.705" starttime="20170525 08:11:34.693"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.707" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.707" starttime="20170525 08:11:34.706"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.709" starttime="20170525 08:11:34.708"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.710" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170525 08:11:34.710" starttime="20170525 08:11:34.709"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.723" starttime="20170525 08:11:34.711"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.725" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.725" starttime="20170525 08:11:34.724"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.726" starttime="20170525 08:11:34.725"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.727" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170525 08:11:34.727" starttime="20170525 08:11:34.726"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.732" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170525 08:11:34.733" starttime="20170525 08:11:34.732"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.734" level="INFO">${json_id} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.734" starttime="20170525 08:11:34.733"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.735" starttime="20170525 08:11:34.734"></status>
</kw>
<msg timestamp="20170525 08:11:34.736" level="INFO">${id_of_last_created_bedroom} = 42</msg>
<status status="PASS" endtime="20170525 08:11:34.736" starttime="20170525 08:11:34.691"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.737" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.737" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.737" starttime="20170525 08:11:34.736"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.738" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.738" starttime="20170525 08:11:34.738"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.739" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.739" starttime="20170525 08:11:34.739"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.748" starttime="20170525 08:11:34.739"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.749" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.750" starttime="20170525 08:11:34.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.751" starttime="20170525 08:11:34.750"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.752" level="INFO">${body_first_request} = {"id":42,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170525 08:11:34.752" starttime="20170525 08:11:34.751"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.770" starttime="20170525 08:11:34.752"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.771" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.772" starttime="20170525 08:11:34.771"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_that was deleted}</var>
</assign>
<msg timestamp="20170525 08:11:34.773" level="INFO">${bedroom_that was deleted} = </msg>
<status status="PASS" endtime="20170525 08:11:34.773" starttime="20170525 08:11:34.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.774" starttime="20170525 08:11:34.774"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe following bedroom was deleted:\n${body_first_request}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.776" starttime="20170525 08:11:34.775"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.776" starttime="20170525 08:11:34.690"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.777" critical="yes" starttime="20170525 08:11:34.690"></status>
</test>
<test id="s1-s1-s1-t12" name="Create user">
<kw name="Create user" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${new_client}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170525 08:11:34.784" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170525 08:11:34.785" starttime="20170525 08:11:34.783"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170525 08:11:34.787" level="INFO">${name} = dwoegbkqnw</msg>
<status status="PASS" endtime="20170525 08:11:34.788" starttime="20170525 08:11:34.786"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170525 08:11:34.791" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170525 08:11:34.792" starttime="20170525 08:11:34.790"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170525 08:11:34.794" level="INFO">${email} = dwoegbkqnw@email.com</msg>
<status status="PASS" endtime="20170525 08:11:34.794" starttime="20170525 08:11:34.793"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170525 08:11:34.796" level="INFO">${socialSecurityNumber} = 978472590</msg>
<status status="PASS" endtime="20170525 08:11:34.796" starttime="20170525 08:11:34.795"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170525 08:11:34.798" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170525 08:11:34.799" starttime="20170525 08:11:34.797"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170525 08:11:34.801" level="INFO">${dictionary} = {u'id': u'100', u'name': u'dwoegbkqnw', u'createDate': u'1473633063279', u'email': u'dwoegbkqnw@email.com', u'gender': u'F', u'socialSecurityNumber': u'978472590'}</msg>
<status status="PASS" endtime="20170525 08:11:34.801" starttime="20170525 08:11:34.800"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170525 08:11:34.802" level="INFO">${client_json} = {"id": "100", "name": "dwoegbkqnw", "createDate": "1473633063279", "email": "dwoegbkqnw@email.com", "gender": "F", "socialSecurityNumber": "978472590"}</msg>
<status status="PASS" endtime="20170525 08:11:34.802" starttime="20170525 08:11:34.801"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.803" starttime="20170525 08:11:34.802"></status>
</kw>
<msg timestamp="20170525 08:11:34.803" level="INFO">${new_client} = {"id": "100", "name": "dwoegbkqnw", "createDate": "1473633063279", "email": "dwoegbkqnw@email.com", "gender": "F", "socialSecurityNumber": "978472590"}</msg>
<status status="PASS" endtime="20170525 08:11:34.803" starttime="20170525 08:11:34.780"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.805" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.805" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.806" starttime="20170525 08:11:34.805"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.806" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.807" starttime="20170525 08:11:34.806"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.807" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.808" starttime="20170525 08:11:34.807"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${new_client}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.812" level="INFO">Request body set to "{"id": "100", "name": "dwoegbkqnw", "createDate": "1473633063279", "email": "dwoegbkqnw@email.com", "gender": "F", "socialSecurityNumber": "978472590"}".</msg>
<status status="PASS" endtime="20170525 08:11:34.813" starttime="20170525 08:11:34.812"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${new_client}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.813" starttime="20170525 08:11:34.813"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.826" starttime="20170525 08:11:34.814"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.827" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.827" starttime="20170525 08:11:34.826"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.829" starttime="20170525 08:11:34.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.830" starttime="20170525 08:11:34.829"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_last_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.831" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.832" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.832" starttime="20170525 08:11:34.831"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.845" starttime="20170525 08:11:34.833"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.846" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.846" starttime="20170525 08:11:34.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.847" starttime="20170525 08:11:34.847"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.849" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170525 08:11:34.849" starttime="20170525 08:11:34.848"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.869" starttime="20170525 08:11:34.850"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.870" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.870" starttime="20170525 08:11:34.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.871" starttime="20170525 08:11:34.870"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.871" level="INFO">${body_second_request} = 20</msg>
<status status="PASS" endtime="20170525 08:11:34.872" starttime="20170525 08:11:34.871"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.873" level="INFO">${last_index} = 19</msg>
<status status="PASS" endtime="20170525 08:11:34.873" starttime="20170525 08:11:34.872"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.874" level="INFO">${json_id} = 43</msg>
<status status="PASS" endtime="20170525 08:11:34.874" starttime="20170525 08:11:34.873"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.875" starttime="20170525 08:11:34.874"></status>
</kw>
<msg timestamp="20170525 08:11:34.875" level="INFO">${id_of_last_client} = 43</msg>
<status status="PASS" endtime="20170525 08:11:34.875" starttime="20170525 08:11:34.830"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>{"id": 100,"login": "DanielLogin","password": "asdf","typeUser": 2,"clientId":{"id": ${id_of_last_client}, "name": "ahewdawsww", "createDate": "1473633063279", "email": "ahewdawsww@email.com", "gender": "M", "socialSecurityNumber": "522201520"}</arg>
<arg>,"userStatusId": {"id": 1,"code": 1,"name": "ACTIVE"}}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20170525 08:11:34.876" level="INFO">${request_body} = {"id": 100,"login": "DanielLogin","password": "asdf","typeUser": 2,"clientId":{"id": 43, "name": "ahewdawsww", "createDate": "1473633063279", "email": "ahewdawsww@email.com", "gender": "M", "socialSec...</msg>
<status status="PASS" endtime="20170525 08:11:34.876" starttime="20170525 08:11:34.876"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.877" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.877" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.877" starttime="20170525 08:11:34.877"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.878" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:34.878" starttime="20170525 08:11:34.878"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.879" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:34.879" starttime="20170525 08:11:34.878"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.881" level="INFO">Request body set to "{"id": 100,"login": "DanielLogin","password": "asdf","typeUser": 2,"clientId":{"id": 43, "name": "ahewdawsww", "createDate": "1473633063279", "email": "ahewdawsww@email.com", "gender": "M", "socialSecurityNumber": "522201520"},"userStatusId": {"id": 1,"code": 1,"name": "ACTIVE"}}".</msg>
<status status="PASS" endtime="20170525 08:11:34.881" starttime="20170525 08:11:34.880"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating user with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.882" starttime="20170525 08:11:34.881"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>/hotel-rest/webresources/user/</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.910" starttime="20170525 08:11:34.882"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:34.911" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:34.911" starttime="20170525 08:11:34.910"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.912" starttime="20170525 08:11:34.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.913" starttime="20170525 08:11:34.913"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.914" starttime="20170525 08:11:34.778"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.914" critical="yes" starttime="20170525 08:11:34.777"></status>
</test>
<test id="s1-s1-s1-t13" name="Get id of last user">
<kw name="Get id of last created user" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.917" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.917" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.918" starttime="20170525 08:11:34.917"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/hotel-rest/webresources/user/</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.940" starttime="20170525 08:11:34.918"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.941" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.941" starttime="20170525 08:11:34.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.942" starttime="20170525 08:11:34.941"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.943" level="INFO">${body_first_request} = [{"id":13,"login":"Yanne","password":"1966e694bad90686516f99cdf432800fdca39290","typeUser":2,"clientId":{"id":5,"name":"YANNE","createDate":1473249124445,"email":"yanne_alencar@hotmail.com","gender":"...</msg>
<status status="PASS" endtime="20170525 08:11:34.943" starttime="20170525 08:11:34.942"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/hotel-rest/webresources/user/count</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.951" starttime="20170525 08:11:34.943"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.953" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.953" starttime="20170525 08:11:34.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.954" starttime="20170525 08:11:34.954"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.955" level="INFO">${body_second_request} = 6</msg>
<status status="PASS" endtime="20170525 08:11:34.956" starttime="20170525 08:11:34.955"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.957" level="INFO">${last_index} = 5</msg>
<status status="PASS" endtime="20170525 08:11:34.957" starttime="20170525 08:11:34.956"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.958" level="INFO">${json_id} = 49</msg>
<status status="PASS" endtime="20170525 08:11:34.958" starttime="20170525 08:11:34.957"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.959" starttime="20170525 08:11:34.959"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.960" starttime="20170525 08:11:34.916"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:34.960" critical="yes" starttime="20170525 08:11:34.914"></status>
</test>
<test id="s1-s1-s1-t14" name="Delete last user">
<kw name="Delete last user" library="client_operations">
<kw name="Get id of last created user" library="client_operations">
<assign>
<var>${id_of_created_user}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.963" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.963" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.963" starttime="20170525 08:11:34.962"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/hotel-rest/webresources/user/</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.979" starttime="20170525 08:11:34.964"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.980" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.981" starttime="20170525 08:11:34.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.981" starttime="20170525 08:11:34.981"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.983" level="INFO">${body_first_request} = [{"id":13,"login":"Yanne","password":"1966e694bad90686516f99cdf432800fdca39290","typeUser":2,"clientId":{"id":5,"name":"YANNE","createDate":1473249124445,"email":"yanne_alencar@hotmail.com","gender":"...</msg>
<status status="PASS" endtime="20170525 08:11:34.983" starttime="20170525 08:11:34.982"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>/hotel-rest/webresources/user/count</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.991" starttime="20170525 08:11:34.983"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.992" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170525 08:11:34.992" starttime="20170525 08:11:34.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.993" starttime="20170525 08:11:34.993"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170525 08:11:34.994" level="INFO">${body_second_request} = 6</msg>
<status status="PASS" endtime="20170525 08:11:34.994" starttime="20170525 08:11:34.994"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170525 08:11:34.995" level="INFO">${last_index} = 5</msg>
<status status="PASS" endtime="20170525 08:11:34.995" starttime="20170525 08:11:34.995"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170525 08:11:34.996" level="INFO">${json_id} = 49</msg>
<status status="PASS" endtime="20170525 08:11:34.996" starttime="20170525 08:11:34.996"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:34.997" starttime="20170525 08:11:34.997"></status>
</kw>
<msg timestamp="20170525 08:11:34.998" level="INFO">${id_of_created_user} = 49</msg>
<status status="PASS" endtime="20170525 08:11:34.998" starttime="20170525 08:11:34.962"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170525 08:11:34.999" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170525 08:11:34.999" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170525 08:11:34.999" starttime="20170525 08:11:34.998"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170525 08:11:35.000" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170525 08:11:35.005" starttime="20170525 08:11:34.999"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170525 08:11:35.010" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170525 08:11:35.010" starttime="20170525 08:11:35.009"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>/hotel-rest/webresources/user/${id_of_created_user}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:35.022" starttime="20170525 08:11:35.010"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170525 08:11:35.023" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170525 08:11:35.023" starttime="20170525 08:11:35.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:35.024" starttime="20170525 08:11:35.023"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:35.025" starttime="20170525 08:11:35.024"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nClient with id: ${id_of_created_user} was succesfully deleted!</arg>
</arguments>
<status status="PASS" endtime="20170525 08:11:35.026" starttime="20170525 08:11:35.025"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:35.026" starttime="20170525 08:11:34.961"></status>
</kw>
<status status="PASS" endtime="20170525 08:11:35.027" critical="yes" starttime="20170525 08:11:34.961"></status>
</test>
<status status="PASS" endtime="20170525 08:11:35.028" starttime="20170525 08:11:30.236"></status>
</suite>
<status status="PASS" endtime="20170525 08:11:35.032" starttime="20170525 08:11:30.233"></status>
</suite>
<status status="PASS" endtime="20170525 08:11:35.040" starttime="20170525 08:11:30.199"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="14">Critical Tests</stat>
<stat fail="0" pass="14">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="14">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="14">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="14">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
