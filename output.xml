<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170522 12:23:53.629" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test get total of clients">
<kw name="Get the total of clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.886" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:53.887" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:53.887" starttime="20170522 12:23:53.886"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.888" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 12:23:53.888" starttime="20170522 12:23:53.887"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.889" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 12:23:53.890" starttime="20170522 12:23:53.889"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.912" starttime="20170522 12:23:53.890"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:53.914" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:53.914" starttime="20170522 12:23:53.913"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${total_clients}</var>
</assign>
<msg timestamp="20170522 12:23:53.915" level="INFO">${total_clients} = 6</msg>
<status status="PASS" endtime="20170522 12:23:53.916" starttime="20170522 12:23:53.915"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Getting the total of clients:${total_clients}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.917" starttime="20170522 12:23:53.916"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.918" starttime="20170522 12:23:53.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.918" starttime="20170522 12:23:53.918"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:53.919" starttime="20170522 12:23:53.885"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:53.919" critical="yes" starttime="20170522 12:23:53.883"></status>
</test>
<test id="s1-s1-s1-t2" name="Test create a new client">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 12:23:53.922" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 12:23:53.923" starttime="20170522 12:23:53.922"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 12:23:53.924" level="INFO">${name} = rdsalmkyci</msg>
<status status="PASS" endtime="20170522 12:23:53.924" starttime="20170522 12:23:53.923"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 12:23:53.925" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 12:23:53.925" starttime="20170522 12:23:53.924"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 12:23:53.926" level="INFO">${email} = rdsalmkyci@email.com</msg>
<status status="PASS" endtime="20170522 12:23:53.926" starttime="20170522 12:23:53.926"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 12:23:53.927" level="INFO">${socialSecurityNumber} = 795962525</msg>
<status status="PASS" endtime="20170522 12:23:53.928" starttime="20170522 12:23:53.927"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 12:23:53.929" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170522 12:23:53.929" starttime="20170522 12:23:53.928"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 12:23:53.931" level="INFO">${dictionary} = {u'id': u'100', u'name': u'rdsalmkyci', u'createDate': u'1473633063279', u'email': u'rdsalmkyci@email.com', u'gender': u'F', u'socialSecurityNumber': u'795962525'}</msg>
<status status="PASS" endtime="20170522 12:23:53.931" starttime="20170522 12:23:53.930"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 12:23:53.933" level="INFO">${client_json} = {"id": "100", "name": "rdsalmkyci", "createDate": "1473633063279", "email": "rdsalmkyci@email.com", "gender": "F", "socialSecurityNumber": "795962525"}</msg>
<status status="PASS" endtime="20170522 12:23:53.933" starttime="20170522 12:23:53.932"></status>
</kw>
<msg timestamp="20170522 12:23:53.933" level="INFO">${request_body} = {"id": "100", "name": "rdsalmkyci", "createDate": "1473633063279", "email": "rdsalmkyci@email.com", "gender": "F", "socialSecurityNumber": "795962525"}</msg>
<status status="PASS" endtime="20170522 12:23:53.934" starttime="20170522 12:23:53.921"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.935" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:53.935" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:53.935" starttime="20170522 12:23:53.934"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.936" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 12:23:53.936" starttime="20170522 12:23:53.936"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.938" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 12:23:53.938" starttime="20170522 12:23:53.937"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.940" level="INFO">Request body set to "{"id": "100", "name": "rdsalmkyci", "createDate": "1473633063279", "email": "rdsalmkyci@email.com", "gender": "F", "socialSecurityNumber": "795962525"}".</msg>
<status status="PASS" endtime="20170522 12:23:53.940" starttime="20170522 12:23:53.939"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.941" starttime="20170522 12:23:53.941"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.954" starttime="20170522 12:23:53.942"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:53.956" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 12:23:53.956" starttime="20170522 12:23:53.955"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.959" starttime="20170522 12:23:53.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.960" starttime="20170522 12:23:53.959"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:53.960" starttime="20170522 12:23:53.921"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:53.961" critical="yes" starttime="20170522 12:23:53.920"></status>
</test>
<test id="s1-s1-s1-t3" name="Test get all clients">
<kw name="Get all clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:53.966" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:53.966" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:53.966" starttime="20170522 12:23:53.965"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.982" starttime="20170522 12:23:53.967"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:53.983" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:53.983" starttime="20170522 12:23:53.982"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 12:23:53.984" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 12:23:53.985" starttime="20170522 12:23:53.983"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:53.988" starttime="20170522 12:23:53.987"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.001" starttime="20170522 12:23:53.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.002" starttime="20170522 12:23:54.002"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.003" starttime="20170522 12:23:53.963"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.003" critical="yes" starttime="20170522 12:23:53.962"></status>
</test>
<test id="s1-s1-s1-t4" name="Test get id from last client">
<kw name="Get id of last created client" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.007" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.007" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.007" starttime="20170522 12:23:54.006"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.018" starttime="20170522 12:23:54.007"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.019" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.020" starttime="20170522 12:23:54.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.021" starttime="20170522 12:23:54.020"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.023" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 12:23:54.023" starttime="20170522 12:23:54.022"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.029" starttime="20170522 12:23:54.023"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.031" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.031" starttime="20170522 12:23:54.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.032" starttime="20170522 12:23:54.031"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.033" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 12:23:54.033" starttime="20170522 12:23:54.032"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 12:23:54.041" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 12:23:54.041" starttime="20170522 12:23:54.033"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 12:23:54.043" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170522 12:23:54.043" starttime="20170522 12:23:54.042"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.045" starttime="20170522 12:23:54.044"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.045" starttime="20170522 12:23:54.005"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.046" critical="yes" starttime="20170522 12:23:54.004"></status>
</test>
<test id="s1-s1-s1-t5" name="Test get specific client from id">
<kw name="Get specific client from id" library="client_operations">
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_to_get}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.050" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.050" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.050" starttime="20170522 12:23:54.049"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.059" starttime="20170522 12:23:54.050"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.060" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.060" starttime="20170522 12:23:54.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.061" starttime="20170522 12:23:54.061"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.063" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 12:23:54.063" starttime="20170522 12:23:54.062"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.077" starttime="20170522 12:23:54.063"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.079" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.079" starttime="20170522 12:23:54.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.080" starttime="20170522 12:23:54.079"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.081" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 12:23:54.081" starttime="20170522 12:23:54.080"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 12:23:54.082" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 12:23:54.082" starttime="20170522 12:23:54.081"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 12:23:54.084" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170522 12:23:54.084" starttime="20170522 12:23:54.083"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.085" starttime="20170522 12:23:54.084"></status>
</kw>
<msg timestamp="20170522 12:23:54.086" level="INFO">${id_to_get} = 11</msg>
<status status="PASS" endtime="20170522 12:23:54.086" starttime="20170522 12:23:54.048"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.087" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.087" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.087" starttime="20170522 12:23:54.086"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.088" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 12:23:54.089" starttime="20170522 12:23:54.088"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.089" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 12:23:54.090" starttime="20170522 12:23:54.089"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_client_endpoint}${id_to_get}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.095" starttime="20170522 12:23:54.090"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:54.097" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.097" starttime="20170522 12:23:54.096"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 12:23:54.098" level="INFO">${response_body} = {"id":11,"name":"rdsalmkyci","createDate":1473633063279,"email":"rdsalmkyci@email.com","gender":"F","socialSecurityNumber":"795962525"}</msg>
<status status="PASS" endtime="20170522 12:23:54.099" starttime="20170522 12:23:54.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.108" starttime="20170522 12:23:54.099"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.110" starttime="20170522 12:23:54.109"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.110" starttime="20170522 12:23:54.048"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.111" critical="yes" starttime="20170522 12:23:54.046"></status>
</test>
<test id="s1-s1-s1-t6" name="Test create and delete client">
<kw name="Delete client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 12:23:54.114" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 12:23:54.114" starttime="20170522 12:23:54.114"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 12:23:54.115" level="INFO">${name} = sjuyjokigq</msg>
<status status="PASS" endtime="20170522 12:23:54.115" starttime="20170522 12:23:54.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 12:23:54.117" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 12:23:54.118" starttime="20170522 12:23:54.116"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 12:23:54.119" level="INFO">${email} = sjuyjokigq@email.com</msg>
<status status="PASS" endtime="20170522 12:23:54.119" starttime="20170522 12:23:54.118"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 12:23:54.120" level="INFO">${socialSecurityNumber} = 941579974</msg>
<status status="PASS" endtime="20170522 12:23:54.121" starttime="20170522 12:23:54.120"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 12:23:54.122" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170522 12:23:54.122" starttime="20170522 12:23:54.121"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 12:23:54.123" level="INFO">${dictionary} = {u'id': u'100', u'name': u'sjuyjokigq', u'createDate': u'1473633063279', u'email': u'sjuyjokigq@email.com', u'gender': u'F', u'socialSecurityNumber': u'941579974'}</msg>
<status status="PASS" endtime="20170522 12:23:54.123" starttime="20170522 12:23:54.122"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 12:23:54.124" level="INFO">${client_json} = {"id": "100", "name": "sjuyjokigq", "createDate": "1473633063279", "email": "sjuyjokigq@email.com", "gender": "F", "socialSecurityNumber": "941579974"}</msg>
<status status="PASS" endtime="20170522 12:23:54.124" starttime="20170522 12:23:54.124"></status>
</kw>
<msg timestamp="20170522 12:23:54.125" level="INFO">${request_body} = {"id": "100", "name": "sjuyjokigq", "createDate": "1473633063279", "email": "sjuyjokigq@email.com", "gender": "F", "socialSecurityNumber": "941579974"}</msg>
<status status="PASS" endtime="20170522 12:23:54.125" starttime="20170522 12:23:54.113"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.126" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.126" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.126" starttime="20170522 12:23:54.126"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.127" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 12:23:54.127" starttime="20170522 12:23:54.127"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.129" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 12:23:54.129" starttime="20170522 12:23:54.128"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.130" level="INFO">Request body set to "{"id": "100", "name": "sjuyjokigq", "createDate": "1473633063279", "email": "sjuyjokigq@email.com", "gender": "F", "socialSecurityNumber": "941579974"}".</msg>
<status status="PASS" endtime="20170522 12:23:54.130" starttime="20170522 12:23:54.129"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.131" starttime="20170522 12:23:54.130"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.142" starttime="20170522 12:23:54.131"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:54.143" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 12:23:54.143" starttime="20170522 12:23:54.142"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.144" starttime="20170522 12:23:54.144"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.145" starttime="20170522 12:23:54.145"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.146" starttime="20170522 12:23:54.113"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.147" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.147" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.149" starttime="20170522 12:23:54.146"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.162" starttime="20170522 12:23:54.149"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.163" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.163" starttime="20170522 12:23:54.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.164" starttime="20170522 12:23:54.164"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.165" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 12:23:54.166" starttime="20170522 12:23:54.165"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.172" starttime="20170522 12:23:54.166"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.173" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.173" starttime="20170522 12:23:54.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.174" starttime="20170522 12:23:54.174"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.175" level="INFO">${body_second_request} = 8</msg>
<status status="PASS" endtime="20170522 12:23:54.175" starttime="20170522 12:23:54.175"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 12:23:54.176" level="INFO">${last_index} = 7</msg>
<status status="PASS" endtime="20170522 12:23:54.176" starttime="20170522 12:23:54.176"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 12:23:54.179" level="INFO">${json_id} = 12</msg>
<status status="PASS" endtime="20170522 12:23:54.180" starttime="20170522 12:23:54.177"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.181" starttime="20170522 12:23:54.181"></status>
</kw>
<msg timestamp="20170522 12:23:54.182" level="INFO">${id_of_created_client} = 12</msg>
<status status="PASS" endtime="20170522 12:23:54.182" starttime="20170522 12:23:54.146"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.183" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.183" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.183" starttime="20170522 12:23:54.182"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.184" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 12:23:54.184" starttime="20170522 12:23:54.183"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.185" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 12:23:54.185" starttime="20170522 12:23:54.184"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.197" starttime="20170522 12:23:54.185"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:54.198" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 12:23:54.198" starttime="20170522 12:23:54.197"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.200" starttime="20170522 12:23:54.199"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.200" starttime="20170522 12:23:54.112"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.200" critical="yes" starttime="20170522 12:23:54.111"></status>
</test>
<test id="s1-s1-s1-t7" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 12:23:54.203" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 12:23:54.203" starttime="20170522 12:23:54.203"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 12:23:54.204" level="INFO">${name} = rbzjawktte</msg>
<status status="PASS" endtime="20170522 12:23:54.204" starttime="20170522 12:23:54.204"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 12:23:54.205" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 12:23:54.205" starttime="20170522 12:23:54.205"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 12:23:54.225" level="INFO">${email} = rbzjawktte@email.com</msg>
<status status="PASS" endtime="20170522 12:23:54.226" starttime="20170522 12:23:54.205"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 12:23:54.227" level="INFO">${socialSecurityNumber} = 508071662</msg>
<status status="PASS" endtime="20170522 12:23:54.228" starttime="20170522 12:23:54.226"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 12:23:54.230" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 12:23:54.230" starttime="20170522 12:23:54.229"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 12:23:54.233" level="INFO">${dictionary} = {u'id': u'100', u'name': u'rbzjawktte', u'createDate': u'1473633063279', u'email': u'rbzjawktte@email.com', u'gender': u'M', u'socialSecurityNumber': u'508071662'}</msg>
<status status="PASS" endtime="20170522 12:23:54.233" starttime="20170522 12:23:54.231"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 12:23:54.235" level="INFO">${client_json} = {"id": "100", "name": "rbzjawktte", "createDate": "1473633063279", "email": "rbzjawktte@email.com", "gender": "M", "socialSecurityNumber": "508071662"}</msg>
<status status="PASS" endtime="20170522 12:23:54.235" starttime="20170522 12:23:54.234"></status>
</kw>
<msg timestamp="20170522 12:23:54.235" level="INFO">${request_body} = {"id": "100", "name": "rbzjawktte", "createDate": "1473633063279", "email": "rbzjawktte@email.com", "gender": "M", "socialSecurityNumber": "508071662"}</msg>
<status status="PASS" endtime="20170522 12:23:54.235" starttime="20170522 12:23:54.202"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.237" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.237" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.238" starttime="20170522 12:23:54.236"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.239" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 12:23:54.239" starttime="20170522 12:23:54.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.240" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 12:23:54.241" starttime="20170522 12:23:54.239"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.241" level="INFO">Request body set to "{"id": "100", "name": "rbzjawktte", "createDate": "1473633063279", "email": "rbzjawktte@email.com", "gender": "M", "socialSecurityNumber": "508071662"}".</msg>
<status status="PASS" endtime="20170522 12:23:54.242" starttime="20170522 12:23:54.241"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.243" starttime="20170522 12:23:54.242"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.255" starttime="20170522 12:23:54.243"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:54.257" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 12:23:54.257" starttime="20170522 12:23:54.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.258" starttime="20170522 12:23:54.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.259" starttime="20170522 12:23:54.258"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.259" starttime="20170522 12:23:54.202"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.260" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.261" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.261" starttime="20170522 12:23:54.260"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.269" starttime="20170522 12:23:54.261"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.271" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.271" starttime="20170522 12:23:54.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.272" starttime="20170522 12:23:54.271"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.273" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 12:23:54.274" starttime="20170522 12:23:54.273"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.280" starttime="20170522 12:23:54.274"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.282" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.282" starttime="20170522 12:23:54.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.283" starttime="20170522 12:23:54.282"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.284" level="INFO">${body_second_request} = 8</msg>
<status status="PASS" endtime="20170522 12:23:54.284" starttime="20170522 12:23:54.283"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 12:23:54.285" level="INFO">${last_index} = 7</msg>
<status status="PASS" endtime="20170522 12:23:54.285" starttime="20170522 12:23:54.284"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 12:23:54.286" level="INFO">${json_id} = 13</msg>
<status status="PASS" endtime="20170522 12:23:54.287" starttime="20170522 12:23:54.286"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.288" starttime="20170522 12:23:54.287"></status>
</kw>
<msg timestamp="20170522 12:23:54.288" level="INFO">${id_of_created_client} = 13</msg>
<status status="PASS" endtime="20170522 12:23:54.289" starttime="20170522 12:23:54.259"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.290" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.291" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.291" starttime="20170522 12:23:54.290"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.299" starttime="20170522 12:23:54.291"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.300" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.300" starttime="20170522 12:23:54.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.301" starttime="20170522 12:23:54.300"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.302" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 12:23:54.302" starttime="20170522 12:23:54.301"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.308" starttime="20170522 12:23:54.303"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.310" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.310" starttime="20170522 12:23:54.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.311" starttime="20170522 12:23:54.310"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 12:23:54.312" level="INFO">${body_second_request} = 8</msg>
<status status="PASS" endtime="20170522 12:23:54.312" starttime="20170522 12:23:54.311"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 12:23:54.313" level="INFO">${last_index} = 7</msg>
<status status="PASS" endtime="20170522 12:23:54.313" starttime="20170522 12:23:54.312"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 12:23:54.314" level="INFO">${json_id} = 13</msg>
<status status="PASS" endtime="20170522 12:23:54.314" starttime="20170522 12:23:54.313"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.316" starttime="20170522 12:23:54.315"></status>
</kw>
<msg timestamp="20170522 12:23:54.316" level="INFO">${id} = 13</msg>
<status status="PASS" endtime="20170522 12:23:54.316" starttime="20170522 12:23:54.289"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 12:23:54.318" level="INFO">${name} = oqijdgprbz</msg>
<status status="PASS" endtime="20170522 12:23:54.318" starttime="20170522 12:23:54.317"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 12:23:54.319" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 12:23:54.319" starttime="20170522 12:23:54.318"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 12:23:54.320" level="INFO">${email} = oqijdgprbz@email.com</msg>
<status status="PASS" endtime="20170522 12:23:54.321" starttime="20170522 12:23:54.320"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 12:23:54.322" level="INFO">${socialSecurityNumber} = 831000863</msg>
<status status="PASS" endtime="20170522 12:23:54.322" starttime="20170522 12:23:54.321"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 12:23:54.323" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 12:23:54.323" starttime="20170522 12:23:54.322"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 12:23:54.324" level="INFO">${dictionary} = {u'id': '13', u'name': u'oqijdgprbz', u'createDate': u'1473633063279', u'email': u'oqijdgprbz@email.com', u'gender': u'M', u'socialSecurityNumber': u'831000863'}</msg>
<status status="PASS" endtime="20170522 12:23:54.325" starttime="20170522 12:23:54.323"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170522 12:23:54.326" level="INFO">${update_client_json} = {"id": "13", "name": "oqijdgprbz", "createDate": "1473633063279", "email": "oqijdgprbz@email.com", "gender": "M", "socialSecurityNumber": "831000863"}</msg>
<status status="PASS" endtime="20170522 12:23:54.326" starttime="20170522 12:23:54.325"></status>
</kw>
<msg timestamp="20170522 12:23:54.326" level="INFO">${request_body_new_client_data} = {"id": "13", "name": "oqijdgprbz", "createDate": "1473633063279", "email": "oqijdgprbz@email.com", "gender": "M", "socialSecurityNumber": "831000863"}</msg>
<status status="PASS" endtime="20170522 12:23:54.326" starttime="20170522 12:23:54.289"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loggin this new user ${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.327" starttime="20170522 12:23:54.327"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.328" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.328" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.329" starttime="20170522 12:23:54.328"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.329" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 12:23:54.332" starttime="20170522 12:23:54.329"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.337" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 12:23:54.338" starttime="20170522 12:23:54.337"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.339" level="INFO">Request body set to "{"id": "13", "name": "oqijdgprbz", "createDate": "1473633063279", "email": "oqijdgprbz@email.com", "gender": "M", "socialSecurityNumber": "831000863"}".</msg>
<status status="PASS" endtime="20170522 12:23:54.339" starttime="20170522 12:23:54.338"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.341" starttime="20170522 12:23:54.340"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.351" starttime="20170522 12:23:54.341"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Updating client with data:${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.353" starttime="20170522 12:23:54.352"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:54.354" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 12:23:54.354" starttime="20170522 12:23:54.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.355" starttime="20170522 12:23:54.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.356" starttime="20170522 12:23:54.356"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.356" starttime="20170522 12:23:54.201"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.357" critical="yes" starttime="20170522 12:23:54.201"></status>
</test>
<test id="s1-s1-s1-t8" name="Get bedrooms">
<kw name="Get all bedrooms" library="bedroom_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 12:23:54.361" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 12:23:54.361" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 12:23:54.361" starttime="20170522 12:23:54.360"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.371" starttime="20170522 12:23:54.361"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 12:23:54.372" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 12:23:54.372" starttime="20170522 12:23:54.372"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 12:23:54.373" level="INFO">${response_body} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170522 12:23:54.373" starttime="20170522 12:23:54.373"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.374" starttime="20170522 12:23:54.374"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.375" starttime="20170522 12:23:54.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 12:23:54.376" starttime="20170522 12:23:54.376"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.376" starttime="20170522 12:23:54.359"></status>
</kw>
<status status="PASS" endtime="20170522 12:23:54.377" critical="yes" starttime="20170522 12:23:54.358"></status>
</test>
<status status="PASS" endtime="20170522 12:23:54.378" starttime="20170522 12:23:53.746"></status>
</suite>
<status status="PASS" endtime="20170522 12:23:54.380" starttime="20170522 12:23:53.744"></status>
</suite>
<status status="PASS" endtime="20170522 12:23:54.383" starttime="20170522 12:23:53.712"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="8">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="8">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="8">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
