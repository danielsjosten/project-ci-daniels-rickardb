<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170522 10:31:50.490" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test get total of clients">
<kw name="Get the total of clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:50.763" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:50.763" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:50.764" starttime="20170522 10:31:50.761"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:31:50.766" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:31:50.766" starttime="20170522 10:31:50.765"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:31:50.768" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:31:50.768" starttime="20170522 10:31:50.766"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:52.588" starttime="20170522 10:31:50.769"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:52.589" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:52.589" starttime="20170522 10:31:52.589"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${total_clients}</var>
</assign>
<msg timestamp="20170522 10:31:52.590" level="INFO">${total_clients} = 8</msg>
<status status="PASS" endtime="20170522 10:31:52.590" starttime="20170522 10:31:52.590"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Getting the total of clients:${total_clients}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:52.591" starttime="20170522 10:31:52.591"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:52.592" starttime="20170522 10:31:52.591"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:52.593" starttime="20170522 10:31:52.592"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:52.593" starttime="20170522 10:31:50.759"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:52.594" critical="yes" starttime="20170522 10:31:50.758"></status>
</test>
<test id="s1-s1-s1-t2" name="Test create a new client">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 10:31:52.596" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 10:31:52.596" starttime="20170522 10:31:52.596"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:31:52.599" level="INFO">${name} = zqscnomgvr</msg>
<status status="PASS" endtime="20170522 10:31:52.599" starttime="20170522 10:31:52.598"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:31:52.600" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:31:52.600" starttime="20170522 10:31:52.600"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:31:52.613" level="INFO">${email} = zqscnomgvr@email.com</msg>
<status status="PASS" endtime="20170522 10:31:52.613" starttime="20170522 10:31:52.612"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:31:52.614" level="INFO">${socialSecurityNumber} = 184891996</msg>
<status status="PASS" endtime="20170522 10:31:52.614" starttime="20170522 10:31:52.614"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:31:52.615" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 10:31:52.615" starttime="20170522 10:31:52.615"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:31:52.617" level="INFO">${dictionary} = {u'id': u'100', u'name': u'zqscnomgvr', u'createDate': u'1473633063279', u'email': u'zqscnomgvr@email.com', u'gender': u'M', u'socialSecurityNumber': u'184891996'}</msg>
<status status="PASS" endtime="20170522 10:31:52.617" starttime="20170522 10:31:52.616"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 10:31:52.618" level="INFO">${client_json} = {"id": "100", "name": "zqscnomgvr", "createDate": "1473633063279", "email": "zqscnomgvr@email.com", "gender": "M", "socialSecurityNumber": "184891996"}</msg>
<status status="PASS" endtime="20170522 10:31:52.618" starttime="20170522 10:31:52.617"></status>
</kw>
<msg timestamp="20170522 10:31:52.618" level="INFO">${request_body} = {"id": "100", "name": "zqscnomgvr", "createDate": "1473633063279", "email": "zqscnomgvr@email.com", "gender": "M", "socialSecurityNumber": "184891996"}</msg>
<status status="PASS" endtime="20170522 10:31:52.619" starttime="20170522 10:31:52.595"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:52.620" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:52.620" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:52.620" starttime="20170522 10:31:52.619"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:31:52.621" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:31:52.621" starttime="20170522 10:31:52.620"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:31:52.622" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:31:52.622" starttime="20170522 10:31:52.622"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 10:31:52.623" level="INFO">Request body set to "{"id": "100", "name": "zqscnomgvr", "createDate": "1473633063279", "email": "zqscnomgvr@email.com", "gender": "M", "socialSecurityNumber": "184891996"}".</msg>
<status status="PASS" endtime="20170522 10:31:52.624" starttime="20170522 10:31:52.623"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:52.625" starttime="20170522 10:31:52.624"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.019" starttime="20170522 10:31:52.626"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:53.020" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:31:53.021" starttime="20170522 10:31:53.020"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.022" starttime="20170522 10:31:53.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.022" starttime="20170522 10:31:53.022"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.023" starttime="20170522 10:31:52.595"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.023" critical="yes" starttime="20170522 10:31:52.594"></status>
</test>
<test id="s1-s1-s1-t3" name="Test get all clients">
<kw name="Get all clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.025" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.025" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.025" starttime="20170522 10:31:53.025"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.172" starttime="20170522 10:31:53.026"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:53.173" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.173" starttime="20170522 10:31:53.173"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 10:31:53.174" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:31:53.174" starttime="20170522 10:31:53.174"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.175" starttime="20170522 10:31:53.175"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.176" starttime="20170522 10:31:53.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.177" starttime="20170522 10:31:53.176"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.177" starttime="20170522 10:31:53.024"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.177" critical="yes" starttime="20170522 10:31:53.023"></status>
</test>
<test id="s1-s1-s1-t4" name="Test get id from last client">
<kw name="Get id of last created client" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.179" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.179" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.180" starttime="20170522 10:31:53.179"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.201" starttime="20170522 10:31:53.180"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.202" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.202" starttime="20170522 10:31:53.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.203" starttime="20170522 10:31:53.203"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.204" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:31:53.204" starttime="20170522 10:31:53.203"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.220" starttime="20170522 10:31:53.204"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.221" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.221" starttime="20170522 10:31:53.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.222" starttime="20170522 10:31:53.221"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.222" level="INFO">${body_second_request} = 9</msg>
<status status="PASS" endtime="20170522 10:31:53.223" starttime="20170522 10:31:53.222"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:31:53.224" level="INFO">${last_index} = 8</msg>
<status status="PASS" endtime="20170522 10:31:53.224" starttime="20170522 10:31:53.223"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:31:53.225" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170522 10:31:53.225" starttime="20170522 10:31:53.224"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.226" starttime="20170522 10:31:53.225"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.227" starttime="20170522 10:31:53.178"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.228" critical="yes" starttime="20170522 10:31:53.178"></status>
</test>
<test id="s1-s1-s1-t5" name="Test get specific client from id">
<kw name="Get specific client from id" library="client_operations">
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_to_get}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.235" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.235" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.235" starttime="20170522 10:31:53.234"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.253" starttime="20170522 10:31:53.236"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.254" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.254" starttime="20170522 10:31:53.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.254" starttime="20170522 10:31:53.254"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.257" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:31:53.257" starttime="20170522 10:31:53.256"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.264" starttime="20170522 10:31:53.257"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.265" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.265" starttime="20170522 10:31:53.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.266" starttime="20170522 10:31:53.266"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.267" level="INFO">${body_second_request} = 9</msg>
<status status="PASS" endtime="20170522 10:31:53.267" starttime="20170522 10:31:53.266"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:31:53.268" level="INFO">${last_index} = 8</msg>
<status status="PASS" endtime="20170522 10:31:53.268" starttime="20170522 10:31:53.267"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:31:53.269" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170522 10:31:53.269" starttime="20170522 10:31:53.268"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.269" starttime="20170522 10:31:53.269"></status>
</kw>
<msg timestamp="20170522 10:31:53.270" level="INFO">${id_to_get} = 11</msg>
<status status="PASS" endtime="20170522 10:31:53.270" starttime="20170522 10:31:53.233"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.271" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.271" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.271" starttime="20170522 10:31:53.270"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.272" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:31:53.272" starttime="20170522 10:31:53.271"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.272" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:31:53.273" starttime="20170522 10:31:53.272"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_client_endpoint}${id_to_get}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.287" starttime="20170522 10:31:53.273"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:53.288" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.288" starttime="20170522 10:31:53.287"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 10:31:53.289" level="INFO">${response_body} = {"id":11,"name":"zqscnomgvr","createDate":1473633063279,"email":"zqscnomgvr@email.com","gender":"M","socialSecurityNumber":"184891996"}</msg>
<status status="PASS" endtime="20170522 10:31:53.289" starttime="20170522 10:31:53.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.290" starttime="20170522 10:31:53.289"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.290" starttime="20170522 10:31:53.290"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.291" starttime="20170522 10:31:53.230"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.291" critical="yes" starttime="20170522 10:31:53.229"></status>
</test>
<test id="s1-s1-s1-t6" name="Test create and delete client">
<kw name="Delete client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 10:31:53.294" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 10:31:53.295" starttime="20170522 10:31:53.294"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:31:53.295" level="INFO">${name} = oanadyuvtj</msg>
<status status="PASS" endtime="20170522 10:31:53.295" starttime="20170522 10:31:53.295"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:31:53.296" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:31:53.296" starttime="20170522 10:31:53.296"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:31:53.297" level="INFO">${email} = oanadyuvtj@email.com</msg>
<status status="PASS" endtime="20170522 10:31:53.297" starttime="20170522 10:31:53.296"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:31:53.298" level="INFO">${socialSecurityNumber} = 970391774</msg>
<status status="PASS" endtime="20170522 10:31:53.298" starttime="20170522 10:31:53.297"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:31:53.299" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170522 10:31:53.299" starttime="20170522 10:31:53.298"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:31:53.300" level="INFO">${dictionary} = {u'id': u'100', u'name': u'oanadyuvtj', u'createDate': u'1473633063279', u'email': u'oanadyuvtj@email.com', u'gender': u'F', u'socialSecurityNumber': u'970391774'}</msg>
<status status="PASS" endtime="20170522 10:31:53.300" starttime="20170522 10:31:53.299"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 10:31:53.301" level="INFO">${client_json} = {"id": "100", "name": "oanadyuvtj", "createDate": "1473633063279", "email": "oanadyuvtj@email.com", "gender": "F", "socialSecurityNumber": "970391774"}</msg>
<status status="PASS" endtime="20170522 10:31:53.301" starttime="20170522 10:31:53.300"></status>
</kw>
<msg timestamp="20170522 10:31:53.301" level="INFO">${request_body} = {"id": "100", "name": "oanadyuvtj", "createDate": "1473633063279", "email": "oanadyuvtj@email.com", "gender": "F", "socialSecurityNumber": "970391774"}</msg>
<status status="PASS" endtime="20170522 10:31:53.302" starttime="20170522 10:31:53.294"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.302" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.302" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.302" starttime="20170522 10:31:53.302"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.303" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:31:53.303" starttime="20170522 10:31:53.303"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.304" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:31:53.304" starttime="20170522 10:31:53.304"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.305" level="INFO">Request body set to "{"id": "100", "name": "oanadyuvtj", "createDate": "1473633063279", "email": "oanadyuvtj@email.com", "gender": "F", "socialSecurityNumber": "970391774"}".</msg>
<status status="PASS" endtime="20170522 10:31:53.305" starttime="20170522 10:31:53.304"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.306" starttime="20170522 10:31:53.305"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.325" starttime="20170522 10:31:53.306"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:53.328" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:31:53.328" starttime="20170522 10:31:53.326"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.329" starttime="20170522 10:31:53.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.330" starttime="20170522 10:31:53.330"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.331" starttime="20170522 10:31:53.293"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.332" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.332" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.333" starttime="20170522 10:31:53.331"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.343" starttime="20170522 10:31:53.333"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.344" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.344" starttime="20170522 10:31:53.344"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.345" starttime="20170522 10:31:53.345"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.346" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:31:53.346" starttime="20170522 10:31:53.345"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.360" starttime="20170522 10:31:53.347"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.361" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.361" starttime="20170522 10:31:53.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.362" starttime="20170522 10:31:53.362"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.363" level="INFO">${body_second_request} = 10</msg>
<status status="PASS" endtime="20170522 10:31:53.363" starttime="20170522 10:31:53.363"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:31:53.374" level="INFO">${last_index} = 9</msg>
<status status="PASS" endtime="20170522 10:31:53.375" starttime="20170522 10:31:53.364"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:31:53.376" level="INFO">${json_id} = 12</msg>
<status status="PASS" endtime="20170522 10:31:53.376" starttime="20170522 10:31:53.375"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.377" starttime="20170522 10:31:53.376"></status>
</kw>
<msg timestamp="20170522 10:31:53.377" level="INFO">${id_of_created_client} = 12</msg>
<status status="PASS" endtime="20170522 10:31:53.378" starttime="20170522 10:31:53.331"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.379" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.379" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.379" starttime="20170522 10:31:53.378"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.380" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:31:53.380" starttime="20170522 10:31:53.379"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.381" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:31:53.382" starttime="20170522 10:31:53.380"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.425" starttime="20170522 10:31:53.382"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:53.426" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:31:53.426" starttime="20170522 10:31:53.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.427" starttime="20170522 10:31:53.426"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.427" starttime="20170522 10:31:53.292"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.427" critical="yes" starttime="20170522 10:31:53.292"></status>
</test>
<test id="s1-s1-s1-t7" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 10:31:53.431" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 10:31:53.431" starttime="20170522 10:31:53.431"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:31:53.432" level="INFO">${name} = lghaycwzwg</msg>
<status status="PASS" endtime="20170522 10:31:53.432" starttime="20170522 10:31:53.432"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:31:53.434" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:31:53.434" starttime="20170522 10:31:53.433"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:31:53.435" level="INFO">${email} = lghaycwzwg@email.com</msg>
<status status="PASS" endtime="20170522 10:31:53.435" starttime="20170522 10:31:53.435"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:31:53.436" level="INFO">${socialSecurityNumber} = 937310226</msg>
<status status="PASS" endtime="20170522 10:31:53.436" starttime="20170522 10:31:53.436"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:31:53.437" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 10:31:53.438" starttime="20170522 10:31:53.437"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:31:53.446" level="INFO">${dictionary} = {u'id': u'100', u'name': u'lghaycwzwg', u'createDate': u'1473633063279', u'email': u'lghaycwzwg@email.com', u'gender': u'M', u'socialSecurityNumber': u'937310226'}</msg>
<status status="PASS" endtime="20170522 10:31:53.446" starttime="20170522 10:31:53.438"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 10:31:53.449" level="INFO">${client_json} = {"id": "100", "name": "lghaycwzwg", "createDate": "1473633063279", "email": "lghaycwzwg@email.com", "gender": "M", "socialSecurityNumber": "937310226"}</msg>
<status status="PASS" endtime="20170522 10:31:53.450" starttime="20170522 10:31:53.446"></status>
</kw>
<msg timestamp="20170522 10:31:53.451" level="INFO">${request_body} = {"id": "100", "name": "lghaycwzwg", "createDate": "1473633063279", "email": "lghaycwzwg@email.com", "gender": "M", "socialSecurityNumber": "937310226"}</msg>
<status status="PASS" endtime="20170522 10:31:53.451" starttime="20170522 10:31:53.430"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.453" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.453" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.454" starttime="20170522 10:31:53.452"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.457" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:31:53.458" starttime="20170522 10:31:53.455"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.459" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:31:53.459" starttime="20170522 10:31:53.458"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.460" level="INFO">Request body set to "{"id": "100", "name": "lghaycwzwg", "createDate": "1473633063279", "email": "lghaycwzwg@email.com", "gender": "M", "socialSecurityNumber": "937310226"}".</msg>
<status status="PASS" endtime="20170522 10:31:53.460" starttime="20170522 10:31:53.459"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.474" starttime="20170522 10:31:53.474"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.490" starttime="20170522 10:31:53.475"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:53.491" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:31:53.491" starttime="20170522 10:31:53.490"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.492" starttime="20170522 10:31:53.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.492" starttime="20170522 10:31:53.492"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.493" starttime="20170522 10:31:53.429"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.495" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.495" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.496" starttime="20170522 10:31:53.494"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.507" starttime="20170522 10:31:53.496"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.508" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.508" starttime="20170522 10:31:53.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.509" starttime="20170522 10:31:53.508"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.510" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:31:53.510" starttime="20170522 10:31:53.509"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.523" starttime="20170522 10:31:53.511"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.524" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.524" starttime="20170522 10:31:53.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.525" starttime="20170522 10:31:53.525"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.526" level="INFO">${body_second_request} = 10</msg>
<status status="PASS" endtime="20170522 10:31:53.526" starttime="20170522 10:31:53.526"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:31:53.527" level="INFO">${last_index} = 9</msg>
<status status="PASS" endtime="20170522 10:31:53.527" starttime="20170522 10:31:53.527"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:31:53.528" level="INFO">${json_id} = 13</msg>
<status status="PASS" endtime="20170522 10:31:53.529" starttime="20170522 10:31:53.528"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.532" starttime="20170522 10:31:53.531"></status>
</kw>
<msg timestamp="20170522 10:31:53.532" level="INFO">${id_of_created_client} = 13</msg>
<status status="PASS" endtime="20170522 10:31:53.532" starttime="20170522 10:31:53.493"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.534" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.534" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.535" starttime="20170522 10:31:53.534"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.549" starttime="20170522 10:31:53.535"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.550" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.550" starttime="20170522 10:31:53.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.551" starttime="20170522 10:31:53.551"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.552" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:31:53.552" starttime="20170522 10:31:53.551"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.566" starttime="20170522 10:31:53.553"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.568" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:31:53.568" starttime="20170522 10:31:53.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.569" starttime="20170522 10:31:53.568"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:31:53.570" level="INFO">${body_second_request} = 10</msg>
<status status="PASS" endtime="20170522 10:31:53.570" starttime="20170522 10:31:53.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:31:53.570" level="INFO">${last_index} = 9</msg>
<status status="PASS" endtime="20170522 10:31:53.571" starttime="20170522 10:31:53.570"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:31:53.572" level="INFO">${json_id} = 13</msg>
<status status="PASS" endtime="20170522 10:31:53.572" starttime="20170522 10:31:53.571"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.575" starttime="20170522 10:31:53.572"></status>
</kw>
<msg timestamp="20170522 10:31:53.575" level="INFO">${id} = 13</msg>
<status status="PASS" endtime="20170522 10:31:53.575" starttime="20170522 10:31:53.533"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:31:53.576" level="INFO">${name} = dqzzysjptf</msg>
<status status="PASS" endtime="20170522 10:31:53.576" starttime="20170522 10:31:53.576"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:31:53.577" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:31:53.577" starttime="20170522 10:31:53.577"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:31:53.578" level="INFO">${email} = dqzzysjptf@email.com</msg>
<status status="PASS" endtime="20170522 10:31:53.578" starttime="20170522 10:31:53.577"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:31:53.579" level="INFO">${socialSecurityNumber} = 588349292</msg>
<status status="PASS" endtime="20170522 10:31:53.579" starttime="20170522 10:31:53.578"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:31:53.583" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170522 10:31:53.583" starttime="20170522 10:31:53.582"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:31:53.584" level="INFO">${dictionary} = {u'id': '13', u'name': u'dqzzysjptf', u'createDate': u'1473633063279', u'email': u'dqzzysjptf@email.com', u'gender': u'F', u'socialSecurityNumber': u'588349292'}</msg>
<status status="PASS" endtime="20170522 10:31:53.584" starttime="20170522 10:31:53.583"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170522 10:31:53.590" level="INFO">${update_client_json} = {"id": "13", "name": "dqzzysjptf", "createDate": "1473633063279", "email": "dqzzysjptf@email.com", "gender": "F", "socialSecurityNumber": "588349292"}</msg>
<status status="PASS" endtime="20170522 10:31:53.591" starttime="20170522 10:31:53.588"></status>
</kw>
<msg timestamp="20170522 10:31:53.591" level="INFO">${request_body_new_client_data} = {"id": "13", "name": "dqzzysjptf", "createDate": "1473633063279", "email": "dqzzysjptf@email.com", "gender": "F", "socialSecurityNumber": "588349292"}</msg>
<status status="PASS" endtime="20170522 10:31:53.592" starttime="20170522 10:31:53.533"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loggin this new user ${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.593" starttime="20170522 10:31:53.592"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.593" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:31:53.594" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:31:53.594" starttime="20170522 10:31:53.593"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.596" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:31:53.597" starttime="20170522 10:31:53.595"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.597" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:31:53.598" starttime="20170522 10:31:53.597"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170522 10:31:53.598" level="INFO">Request body set to "{"id": "13", "name": "dqzzysjptf", "createDate": "1473633063279", "email": "dqzzysjptf@email.com", "gender": "F", "socialSecurityNumber": "588349292"}".</msg>
<status status="PASS" endtime="20170522 10:31:53.599" starttime="20170522 10:31:53.598"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.599" starttime="20170522 10:31:53.599"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.614" starttime="20170522 10:31:53.600"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Updating client with data:${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.615" starttime="20170522 10:31:53.615"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:31:53.616" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:31:53.616" starttime="20170522 10:31:53.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.617" starttime="20170522 10:31:53.616"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:31:53.618" starttime="20170522 10:31:53.617"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.618" starttime="20170522 10:31:53.429"></status>
</kw>
<status status="PASS" endtime="20170522 10:31:53.619" critical="yes" starttime="20170522 10:31:53.428"></status>
</test>
<status status="PASS" endtime="20170522 10:31:53.620" starttime="20170522 10:31:50.621"></status>
</suite>
<status status="PASS" endtime="20170522 10:31:53.623" starttime="20170522 10:31:50.619"></status>
</suite>
<status status="PASS" endtime="20170522 10:31:53.629" starttime="20170522 10:31:50.574"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="7">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="7">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="7">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
