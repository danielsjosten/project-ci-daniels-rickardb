<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170523 20:51:19.244" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test get total of clients">
<kw name="Get the total of clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:21.180" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:21.181" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:21.181" starttime="20170523 20:51:21.180"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:21.182" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:21.182" starttime="20170523 20:51:21.181"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:21.183" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:21.183" starttime="20170523 20:51:21.182"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:23.762" starttime="20170523 20:51:21.183"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:23.763" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:23.764" starttime="20170523 20:51:23.763"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${total_clients}</var>
</assign>
<msg timestamp="20170523 20:51:23.771" level="INFO">${total_clients} = 7</msg>
<status status="PASS" endtime="20170523 20:51:23.772" starttime="20170523 20:51:23.764"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe total number of clients in database is: ${total_clients}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:23.776" starttime="20170523 20:51:23.772"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:23.777" starttime="20170523 20:51:23.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:23.778" starttime="20170523 20:51:23.778"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:23.779" starttime="20170523 20:51:21.178"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:23.779" critical="yes" starttime="20170523 20:51:21.175"></status>
</test>
<test id="s1-s1-s1-t2" name="Test create a new client">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170523 20:51:23.792" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170523 20:51:23.793" starttime="20170523 20:51:23.783"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170523 20:51:23.795" level="INFO">${name} = svnpifvnmr</msg>
<status status="PASS" endtime="20170523 20:51:23.795" starttime="20170523 20:51:23.793"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170523 20:51:23.801" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170523 20:51:23.801" starttime="20170523 20:51:23.801"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170523 20:51:23.802" level="INFO">${email} = svnpifvnmr@email.com</msg>
<status status="PASS" endtime="20170523 20:51:23.803" starttime="20170523 20:51:23.802"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170523 20:51:23.804" level="INFO">${socialSecurityNumber} = 320753722</msg>
<status status="PASS" endtime="20170523 20:51:23.804" starttime="20170523 20:51:23.803"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170523 20:51:23.805" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170523 20:51:23.805" starttime="20170523 20:51:23.804"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170523 20:51:23.809" level="INFO">${dictionary} = {u'id': u'100', u'name': u'svnpifvnmr', u'createDate': u'1473633063279', u'email': u'svnpifvnmr@email.com', u'gender': u'M', u'socialSecurityNumber': u'320753722'}</msg>
<status status="PASS" endtime="20170523 20:51:23.809" starttime="20170523 20:51:23.805"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170523 20:51:23.810" level="INFO">${client_json} = {"id": "100", "name": "svnpifvnmr", "createDate": "1473633063279", "email": "svnpifvnmr@email.com", "gender": "M", "socialSecurityNumber": "320753722"}</msg>
<status status="PASS" endtime="20170523 20:51:23.810" starttime="20170523 20:51:23.809"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:23.812" starttime="20170523 20:51:23.810"></status>
</kw>
<msg timestamp="20170523 20:51:23.812" level="INFO">${request_body} = {"id": "100", "name": "svnpifvnmr", "createDate": "1473633063279", "email": "svnpifvnmr@email.com", "gender": "M", "socialSecurityNumber": "320753722"}</msg>
<status status="PASS" endtime="20170523 20:51:23.812" starttime="20170523 20:51:23.782"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:23.813" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:23.814" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:23.814" starttime="20170523 20:51:23.813"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:23.816" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:23.817" starttime="20170523 20:51:23.815"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:23.818" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:23.818" starttime="20170523 20:51:23.818"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170523 20:51:23.819" level="INFO">Request body set to "{"id": "100", "name": "svnpifvnmr", "createDate": "1473633063279", "email": "svnpifvnmr@email.com", "gender": "M", "socialSecurityNumber": "320753722"}".</msg>
<status status="PASS" endtime="20170523 20:51:23.819" starttime="20170523 20:51:23.819"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:23.820" starttime="20170523 20:51:23.820"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.268" starttime="20170523 20:51:23.821"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:24.269" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:24.269" starttime="20170523 20:51:24.268"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.270" starttime="20170523 20:51:24.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.271" starttime="20170523 20:51:24.270"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.271" starttime="20170523 20:51:23.782"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.272" critical="yes" starttime="20170523 20:51:23.781"></status>
</test>
<test id="s1-s1-s1-t3" name="Test get all clients">
<kw name="Get all clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.274" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.274" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.274" starttime="20170523 20:51:24.273"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.476" starttime="20170523 20:51:24.278"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:24.477" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.477" starttime="20170523 20:51:24.477"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170523 20:51:24.478" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170523 20:51:24.478" starttime="20170523 20:51:24.478"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.481" starttime="20170523 20:51:24.480"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nShowing all clients in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.482" starttime="20170523 20:51:24.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.484" starttime="20170523 20:51:24.483"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.484" starttime="20170523 20:51:24.273"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.485" critical="yes" starttime="20170523 20:51:24.272"></status>
</test>
<test id="s1-s1-s1-t4" name="Test get specific client from id">
<kw name="Get specific client from id" library="client_operations">
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_to_get}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.497" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.497" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.497" starttime="20170523 20:51:24.495"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.539" starttime="20170523 20:51:24.498"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.541" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.542" starttime="20170523 20:51:24.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.544" starttime="20170523 20:51:24.543"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.546" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170523 20:51:24.546" starttime="20170523 20:51:24.544"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.565" starttime="20170523 20:51:24.547"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.567" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.567" starttime="20170523 20:51:24.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.568" starttime="20170523 20:51:24.568"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.570" level="INFO">${body_second_request} = 8</msg>
<status status="PASS" endtime="20170523 20:51:24.570" starttime="20170523 20:51:24.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170523 20:51:24.573" level="INFO">${last_index} = 7</msg>
<status status="PASS" endtime="20170523 20:51:24.574" starttime="20170523 20:51:24.571"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170523 20:51:24.583" level="INFO">${json_id} = 13</msg>
<status status="PASS" endtime="20170523 20:51:24.583" starttime="20170523 20:51:24.577"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.585" starttime="20170523 20:51:24.584"></status>
</kw>
<msg timestamp="20170523 20:51:24.586" level="INFO">${id_to_get} = 13</msg>
<status status="PASS" endtime="20170523 20:51:24.587" starttime="20170523 20:51:24.489"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.588" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.588" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.588" starttime="20170523 20:51:24.587"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.589" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:24.589" starttime="20170523 20:51:24.589"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.590" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:24.591" starttime="20170523 20:51:24.590"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_client_endpoint}${id_to_get}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.611" starttime="20170523 20:51:24.591"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:24.613" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.613" starttime="20170523 20:51:24.612"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170523 20:51:24.615" level="INFO">${response_body} = {"id":13,"name":"svnpifvnmr","createDate":1473633063279,"email":"svnpifvnmr@email.com","gender":"M","socialSecurityNumber":"320753722"}</msg>
<status status="PASS" endtime="20170523 20:51:24.616" starttime="20170523 20:51:24.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.617" starttime="20170523 20:51:24.616"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe last added client in the database is:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.619" starttime="20170523 20:51:24.618"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.619" starttime="20170523 20:51:24.488"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.620" critical="yes" starttime="20170523 20:51:24.486"></status>
</test>
<test id="s1-s1-s1-t5" name="Test create and delete client">
<kw name="Delete client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170523 20:51:24.629" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170523 20:51:24.630" starttime="20170523 20:51:24.629"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170523 20:51:24.631" level="INFO">${name} = arhuboagdt</msg>
<status status="PASS" endtime="20170523 20:51:24.631" starttime="20170523 20:51:24.630"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170523 20:51:24.647" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170523 20:51:24.647" starttime="20170523 20:51:24.633"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170523 20:51:24.651" level="INFO">${email} = arhuboagdt@email.com</msg>
<status status="PASS" endtime="20170523 20:51:24.651" starttime="20170523 20:51:24.648"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170523 20:51:24.653" level="INFO">${socialSecurityNumber} = 906069760</msg>
<status status="PASS" endtime="20170523 20:51:24.653" starttime="20170523 20:51:24.652"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170523 20:51:24.654" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170523 20:51:24.654" starttime="20170523 20:51:24.653"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170523 20:51:24.656" level="INFO">${dictionary} = {u'id': u'100', u'name': u'arhuboagdt', u'createDate': u'1473633063279', u'email': u'arhuboagdt@email.com', u'gender': u'F', u'socialSecurityNumber': u'906069760'}</msg>
<status status="PASS" endtime="20170523 20:51:24.656" starttime="20170523 20:51:24.655"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170523 20:51:24.658" level="INFO">${client_json} = {"id": "100", "name": "arhuboagdt", "createDate": "1473633063279", "email": "arhuboagdt@email.com", "gender": "F", "socialSecurityNumber": "906069760"}</msg>
<status status="PASS" endtime="20170523 20:51:24.658" starttime="20170523 20:51:24.657"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.659" starttime="20170523 20:51:24.658"></status>
</kw>
<msg timestamp="20170523 20:51:24.660" level="INFO">${request_body} = {"id": "100", "name": "arhuboagdt", "createDate": "1473633063279", "email": "arhuboagdt@email.com", "gender": "F", "socialSecurityNumber": "906069760"}</msg>
<status status="PASS" endtime="20170523 20:51:24.661" starttime="20170523 20:51:24.628"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.663" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.663" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.664" starttime="20170523 20:51:24.662"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.665" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:24.665" starttime="20170523 20:51:24.664"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.667" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:24.667" starttime="20170523 20:51:24.666"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.669" level="INFO">Request body set to "{"id": "100", "name": "arhuboagdt", "createDate": "1473633063279", "email": "arhuboagdt@email.com", "gender": "F", "socialSecurityNumber": "906069760"}".</msg>
<status status="PASS" endtime="20170523 20:51:24.670" starttime="20170523 20:51:24.668"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.671" starttime="20170523 20:51:24.670"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.693" starttime="20170523 20:51:24.672"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:24.694" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:24.694" starttime="20170523 20:51:24.694"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.696" starttime="20170523 20:51:24.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.697" starttime="20170523 20:51:24.696"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.697" starttime="20170523 20:51:24.623"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.699" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.699" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.699" starttime="20170523 20:51:24.698"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.712" starttime="20170523 20:51:24.699"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.713" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.713" starttime="20170523 20:51:24.712"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.714" starttime="20170523 20:51:24.714"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.715" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170523 20:51:24.716" starttime="20170523 20:51:24.715"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.729" starttime="20170523 20:51:24.716"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.731" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.731" starttime="20170523 20:51:24.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.732" starttime="20170523 20:51:24.732"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.734" level="INFO">${body_second_request} = 9</msg>
<status status="PASS" endtime="20170523 20:51:24.734" starttime="20170523 20:51:24.733"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170523 20:51:24.735" level="INFO">${last_index} = 8</msg>
<status status="PASS" endtime="20170523 20:51:24.735" starttime="20170523 20:51:24.734"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170523 20:51:24.740" level="INFO">${json_id} = 14</msg>
<status status="PASS" endtime="20170523 20:51:24.740" starttime="20170523 20:51:24.739"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.741" starttime="20170523 20:51:24.740"></status>
</kw>
<msg timestamp="20170523 20:51:24.742" level="INFO">${id_of_created_client} = 14</msg>
<status status="PASS" endtime="20170523 20:51:24.742" starttime="20170523 20:51:24.698"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.744" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.744" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.745" starttime="20170523 20:51:24.743"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.745" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:24.746" starttime="20170523 20:51:24.745"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.747" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:24.748" starttime="20170523 20:51:24.746"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.803" starttime="20170523 20:51:24.748"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:24.804" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:24.804" starttime="20170523 20:51:24.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.805" starttime="20170523 20:51:24.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.806" starttime="20170523 20:51:24.805"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nClient with id: ${id_of_created_client} was succesfully deleted!</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.807" starttime="20170523 20:51:24.807"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.807" starttime="20170523 20:51:24.622"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.808" critical="yes" starttime="20170523 20:51:24.621"></status>
</test>
<test id="s1-s1-s1-t6" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170523 20:51:24.815" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170523 20:51:24.832" starttime="20170523 20:51:24.814"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170523 20:51:24.833" level="INFO">${name} = sdhxdjtgun</msg>
<status status="PASS" endtime="20170523 20:51:24.833" starttime="20170523 20:51:24.832"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170523 20:51:24.834" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170523 20:51:24.834" starttime="20170523 20:51:24.834"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170523 20:51:24.835" level="INFO">${email} = sdhxdjtgun@email.com</msg>
<status status="PASS" endtime="20170523 20:51:24.835" starttime="20170523 20:51:24.835"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170523 20:51:24.836" level="INFO">${socialSecurityNumber} = 290624317</msg>
<status status="PASS" endtime="20170523 20:51:24.836" starttime="20170523 20:51:24.835"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170523 20:51:24.837" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170523 20:51:24.837" starttime="20170523 20:51:24.836"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170523 20:51:24.838" level="INFO">${dictionary} = {u'id': u'100', u'name': u'sdhxdjtgun', u'createDate': u'1473633063279', u'email': u'sdhxdjtgun@email.com', u'gender': u'M', u'socialSecurityNumber': u'290624317'}</msg>
<status status="PASS" endtime="20170523 20:51:24.839" starttime="20170523 20:51:24.837"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170523 20:51:24.839" level="INFO">${client_json} = {"id": "100", "name": "sdhxdjtgun", "createDate": "1473633063279", "email": "sdhxdjtgun@email.com", "gender": "M", "socialSecurityNumber": "290624317"}</msg>
<status status="PASS" endtime="20170523 20:51:24.839" starttime="20170523 20:51:24.839"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.840" starttime="20170523 20:51:24.840"></status>
</kw>
<msg timestamp="20170523 20:51:24.841" level="INFO">${request_body} = {"id": "100", "name": "sdhxdjtgun", "createDate": "1473633063279", "email": "sdhxdjtgun@email.com", "gender": "M", "socialSecurityNumber": "290624317"}</msg>
<status status="PASS" endtime="20170523 20:51:24.841" starttime="20170523 20:51:24.810"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.842" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.842" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.842" starttime="20170523 20:51:24.841"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.843" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:24.843" starttime="20170523 20:51:24.842"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.844" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:24.844" starttime="20170523 20:51:24.843"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.845" level="INFO">Request body set to "{"id": "100", "name": "sdhxdjtgun", "createDate": "1473633063279", "email": "sdhxdjtgun@email.com", "gender": "M", "socialSecurityNumber": "290624317"}".</msg>
<status status="PASS" endtime="20170523 20:51:24.845" starttime="20170523 20:51:24.844"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.846" starttime="20170523 20:51:24.845"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.859" starttime="20170523 20:51:24.846"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:24.860" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:24.860" starttime="20170523 20:51:24.860"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.861" starttime="20170523 20:51:24.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.862" starttime="20170523 20:51:24.862"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:24.862" starttime="20170523 20:51:24.809"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.866" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.866" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.866" starttime="20170523 20:51:24.865"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.885" starttime="20170523 20:51:24.867"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.886" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.886" starttime="20170523 20:51:24.885"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.891" starttime="20170523 20:51:24.887"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.893" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170523 20:51:24.893" starttime="20170523 20:51:24.892"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.907" starttime="20170523 20:51:24.894"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.908" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.909" starttime="20170523 20:51:24.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.911" starttime="20170523 20:51:24.910"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.912" level="INFO">${body_second_request} = 9</msg>
<status status="PASS" endtime="20170523 20:51:24.912" starttime="20170523 20:51:24.911"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170523 20:51:24.918" level="INFO">${last_index} = 8</msg>
<status status="PASS" endtime="20170523 20:51:24.918" starttime="20170523 20:51:24.916"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170523 20:51:24.921" level="INFO">${json_id} = 15</msg>
<status status="PASS" endtime="20170523 20:51:24.922" starttime="20170523 20:51:24.919"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.925" starttime="20170523 20:51:24.923"></status>
</kw>
<msg timestamp="20170523 20:51:24.926" level="INFO">${id_of_created_client} = 15</msg>
<status status="PASS" endtime="20170523 20:51:24.926" starttime="20170523 20:51:24.865"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:24.931" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:24.932" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:24.932" starttime="20170523 20:51:24.930"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.951" starttime="20170523 20:51:24.933"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.952" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.952" starttime="20170523 20:51:24.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.953" starttime="20170523 20:51:24.953"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.954" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170523 20:51:24.954" starttime="20170523 20:51:24.954"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.993" starttime="20170523 20:51:24.955"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.994" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:24.995" starttime="20170523 20:51:24.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:24.997" starttime="20170523 20:51:24.996"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:24.998" level="INFO">${body_second_request} = 9</msg>
<status status="PASS" endtime="20170523 20:51:24.998" starttime="20170523 20:51:24.997"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170523 20:51:24.999" level="INFO">${last_index} = 8</msg>
<status status="PASS" endtime="20170523 20:51:24.999" starttime="20170523 20:51:24.998"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170523 20:51:25.000" level="INFO">${json_id} = 15</msg>
<status status="PASS" endtime="20170523 20:51:25.000" starttime="20170523 20:51:24.999"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.001" starttime="20170523 20:51:25.001"></status>
</kw>
<msg timestamp="20170523 20:51:25.002" level="INFO">${id} = 15</msg>
<status status="PASS" endtime="20170523 20:51:25.002" starttime="20170523 20:51:24.929"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170523 20:51:25.003" level="INFO">${name} = ahoivodjys</msg>
<status status="PASS" endtime="20170523 20:51:25.005" starttime="20170523 20:51:25.003"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170523 20:51:25.007" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170523 20:51:25.007" starttime="20170523 20:51:25.006"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170523 20:51:25.008" level="INFO">${email} = ahoivodjys@email.com</msg>
<status status="PASS" endtime="20170523 20:51:25.009" starttime="20170523 20:51:25.008"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170523 20:51:25.010" level="INFO">${socialSecurityNumber} = 892498854</msg>
<status status="PASS" endtime="20170523 20:51:25.010" starttime="20170523 20:51:25.009"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170523 20:51:25.011" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170523 20:51:25.011" starttime="20170523 20:51:25.010"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170523 20:51:25.013" level="INFO">${dictionary} = {u'id': '15', u'name': u'ahoivodjys', u'createDate': u'1473633063279', u'email': u'ahoivodjys@email.com', u'gender': u'M', u'socialSecurityNumber': u'892498854'}</msg>
<status status="PASS" endtime="20170523 20:51:25.013" starttime="20170523 20:51:25.012"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170523 20:51:25.014" level="INFO">${update_client_json} = {"id": "15", "name": "ahoivodjys", "createDate": "1473633063279", "email": "ahoivodjys@email.com", "gender": "M", "socialSecurityNumber": "892498854"}</msg>
<status status="PASS" endtime="20170523 20:51:25.014" starttime="20170523 20:51:25.013"></status>
</kw>
<msg timestamp="20170523 20:51:25.015" level="INFO">${request_body_new_client_data} = {"id": "15", "name": "ahoivodjys", "createDate": "1473633063279", "email": "ahoivodjys@email.com", "gender": "M", "socialSecurityNumber": "892498854"}</msg>
<status status="PASS" endtime="20170523 20:51:25.015" starttime="20170523 20:51:24.928"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe new client data is:\n${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.016" starttime="20170523 20:51:25.015"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.017" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:25.017" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:25.018" starttime="20170523 20:51:25.017"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.019" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:25.019" starttime="20170523 20:51:25.018"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.019" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:25.020" starttime="20170523 20:51:25.019"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.020" level="INFO">Request body set to "{"id": "15", "name": "ahoivodjys", "createDate": "1473633063279", "email": "ahoivodjys@email.com", "gender": "M", "socialSecurityNumber": "892498854"}".</msg>
<status status="PASS" endtime="20170523 20:51:25.021" starttime="20170523 20:51:25.020"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.039" starttime="20170523 20:51:25.021"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nUpdating client with data:\n${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.041" starttime="20170523 20:51:25.040"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:25.042" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:25.042" starttime="20170523 20:51:25.041"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.045" starttime="20170523 20:51:25.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.047" starttime="20170523 20:51:25.046"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.051" starttime="20170523 20:51:24.809"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.052" critical="yes" starttime="20170523 20:51:24.808"></status>
</test>
<test id="s1-s1-s1-t7" name="Get bedrooms">
<kw name="Get all bedrooms" library="bedroom_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.055" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:25.055" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:25.055" starttime="20170523 20:51:25.054"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.201" starttime="20170523 20:51:25.056"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:25.202" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:25.202" starttime="20170523 20:51:25.201"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170523 20:51:25.206" level="INFO">${response_body} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170523 20:51:25.206" starttime="20170523 20:51:25.206"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.211" starttime="20170523 20:51:25.210"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nShowing all bedrooms in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.212" starttime="20170523 20:51:25.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.213" starttime="20170523 20:51:25.212"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.213" starttime="20170523 20:51:25.053"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.213" critical="yes" starttime="20170523 20:51:25.052"></status>
</test>
<test id="s1-s1-s1-t8" name="Test create new bedroom">
<kw name="Create new bedroom" library="bedroom_operations">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${bedroom_json1}</arg>
<arg>${bedroom_json2}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20170523 20:51:25.215" level="INFO">${request_body} = {"id":100,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170523 20:51:25.218" starttime="20170523 20:51:25.215"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.220" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:25.220" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:25.220" starttime="20170523 20:51:25.219"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.221" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:25.221" starttime="20170523 20:51:25.221"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.222" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:25.222" starttime="20170523 20:51:25.222"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.223" level="INFO">Request body set to "{"id":100,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}".</msg>
<status status="PASS" endtime="20170523 20:51:25.223" starttime="20170523 20:51:25.223"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating bedroom with data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.224" starttime="20170523 20:51:25.224"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.290" starttime="20170523 20:51:25.225"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:25.291" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:25.292" starttime="20170523 20:51:25.291"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.293" starttime="20170523 20:51:25.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.294" starttime="20170523 20:51:25.293"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.294" starttime="20170523 20:51:25.214"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.295" critical="yes" starttime="20170523 20:51:25.214"></status>
</test>
<test id="s1-s1-s1-t9" name="Test Update bedroom">
<kw name="Update previously created bedroom" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_of_last_created_bedroom}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.298" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:25.299" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:25.299" starttime="20170523 20:51:25.298"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.316" starttime="20170523 20:51:25.299"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.317" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:25.317" starttime="20170523 20:51:25.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.318" starttime="20170523 20:51:25.317"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.319" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170523 20:51:25.319" starttime="20170523 20:51:25.319"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.333" starttime="20170523 20:51:25.320"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.335" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:25.335" starttime="20170523 20:51:25.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.336" starttime="20170523 20:51:25.336"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.337" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170523 20:51:25.338" starttime="20170523 20:51:25.337"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170523 20:51:25.339" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170523 20:51:25.340" starttime="20170523 20:51:25.338"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170523 20:51:25.341" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170523 20:51:25.342" starttime="20170523 20:51:25.340"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.343" starttime="20170523 20:51:25.342"></status>
</kw>
<msg timestamp="20170523 20:51:25.344" level="INFO">${id_of_last_created_bedroom} = 11</msg>
<status status="PASS" endtime="20170523 20:51:25.345" starttime="20170523 20:51:25.297"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>{"id":${id_of_last_created_bedroom},"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},</arg>
<arg>"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20170523 20:51:25.346" level="INFO">${request_body} = {"id":11,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170523 20:51:25.349" starttime="20170523 20:51:25.346"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.355" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:25.355" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:25.355" starttime="20170523 20:51:25.350"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.356" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:25.357" starttime="20170523 20:51:25.356"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.362" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:25.363" starttime="20170523 20:51:25.357"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.364" level="INFO">Request body set to "{"id":11,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}".</msg>
<status status="PASS" endtime="20170523 20:51:25.364" starttime="20170523 20:51:25.363"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.400" starttime="20170523 20:51:25.364"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nUpdating bedroom with data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.410" starttime="20170523 20:51:25.408"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:25.411" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:25.412" starttime="20170523 20:51:25.411"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.415" starttime="20170523 20:51:25.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.421" starttime="20170523 20:51:25.416"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.422" starttime="20170523 20:51:25.296"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.422" critical="yes" starttime="20170523 20:51:25.296"></status>
</test>
<test id="s1-s1-s1-t10" name="Test Delete last created bedroom">
<kw name="Delete bedroom" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_of_last_created_bedroom}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.429" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:25.429" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:25.430" starttime="20170523 20:51:25.429"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.449" starttime="20170523 20:51:25.430"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.450" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:25.450" starttime="20170523 20:51:25.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.451" starttime="20170523 20:51:25.451"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.452" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170523 20:51:25.452" starttime="20170523 20:51:25.452"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.463" starttime="20170523 20:51:25.452"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.464" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:25.464" starttime="20170523 20:51:25.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.465" starttime="20170523 20:51:25.465"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.466" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170523 20:51:25.466" starttime="20170523 20:51:25.465"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170523 20:51:25.467" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170523 20:51:25.467" starttime="20170523 20:51:25.466"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170523 20:51:25.468" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170523 20:51:25.468" starttime="20170523 20:51:25.467"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.469" starttime="20170523 20:51:25.468"></status>
</kw>
<msg timestamp="20170523 20:51:25.469" level="INFO">${id_of_last_created_bedroom} = 11</msg>
<status status="PASS" endtime="20170523 20:51:25.469" starttime="20170523 20:51:25.428"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.470" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170523 20:51:25.470" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170523 20:51:25.470" starttime="20170523 20:51:25.469"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.471" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170523 20:51:25.471" starttime="20170523 20:51:25.471"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170523 20:51:25.472" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170523 20:51:25.472" starttime="20170523 20:51:25.472"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.484" starttime="20170523 20:51:25.473"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.486" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170523 20:51:25.487" starttime="20170523 20:51:25.484"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.488" starttime="20170523 20:51:25.487"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170523 20:51:25.489" level="INFO">${body_first_request} = {"id":11,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170523 20:51:25.490" starttime="20170523 20:51:25.489"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.506" starttime="20170523 20:51:25.490"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170523 20:51:25.509" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170523 20:51:25.510" starttime="20170523 20:51:25.508"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_that was deleted}</var>
</assign>
<msg timestamp="20170523 20:51:25.511" level="INFO">${bedroom_that was deleted} = </msg>
<status status="PASS" endtime="20170523 20:51:25.512" starttime="20170523 20:51:25.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.513" starttime="20170523 20:51:25.513"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe following bedroom was deleted:\n${body_first_request}</arg>
</arguments>
<status status="PASS" endtime="20170523 20:51:25.515" starttime="20170523 20:51:25.514"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.515" starttime="20170523 20:51:25.427"></status>
</kw>
<status status="PASS" endtime="20170523 20:51:25.516" critical="yes" starttime="20170523 20:51:25.423"></status>
</test>
<status status="PASS" endtime="20170523 20:51:25.517" starttime="20170523 20:51:20.608"></status>
</suite>
<status status="PASS" endtime="20170523 20:51:25.521" starttime="20170523 20:51:20.588"></status>
</suite>
<status status="PASS" endtime="20170523 20:51:25.525" starttime="20170523 20:51:20.492"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="10">Critical Tests</stat>
<stat fail="0" pass="10">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="10">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="10">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="10">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
