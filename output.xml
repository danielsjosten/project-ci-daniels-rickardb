<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170528 14:04:51.901" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Delete a user">
<kw name="Delete A User" library="user_operations">
<kw name="Get Last Created User Id" library="user_operations">
<assign>
<var>${last_user_id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170528 14:04:52.409" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170528 14:04:52.409" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170528 14:04:52.410" starttime="20170528 14:04:52.408"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_user_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170528 14:04:52.501" starttime="20170528 14:04:52.411"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status1}</var>
</assign>
<msg timestamp="20170528 14:04:52.511" level="INFO">${response_status1} = 200 OK</msg>
<status status="PASS" endtime="20170528 14:04:52.512" starttime="20170528 14:04:52.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status1}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170528 14:04:52.514" starttime="20170528 14:04:52.513"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${request_body1}</var>
</assign>
<msg timestamp="20170528 14:04:52.516" level="INFO">${request_body1} = [{"id":13,"login":"Yanne","password":"1966e694bad90686516f99cdf432800fdca39290","typeUser":2,"clientId":{"id":5,"name":"YANNE","createDate":1473249124445,"email":"yanne_alencar@hotmail.com","gender":"...</msg>
<status status="PASS" endtime="20170528 14:04:52.516" starttime="20170528 14:04:52.515"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_user_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170528 14:04:52.571" starttime="20170528 14:04:52.517"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status2}</var>
</assign>
<msg timestamp="20170528 14:04:52.573" level="INFO">${response_status2} = 200 OK</msg>
<status status="PASS" endtime="20170528 14:04:52.573" starttime="20170528 14:04:52.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status2}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170528 14:04:52.574" starttime="20170528 14:04:52.574"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${request_body2}</var>
</assign>
<msg timestamp="20170528 14:04:52.576" level="INFO">${request_body2} = 5</msg>
<status status="PASS" endtime="20170528 14:04:52.576" starttime="20170528 14:04:52.575"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${request_body2}-1</arg>
</arguments>
<assign>
<var>${last_created_user}</var>
</assign>
<msg timestamp="20170528 14:04:52.578" level="INFO">${last_created_user} = 4</msg>
<status status="PASS" endtime="20170528 14:04:52.578" starttime="20170528 14:04:52.577"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${request_body1}</arg>
<arg>/${last_created_user}/id</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170528 14:04:52.589" level="INFO">${user_id} = 31</msg>
<status status="PASS" endtime="20170528 14:04:52.591" starttime="20170528 14:04:52.585"></status>
</kw>
<msg timestamp="20170528 14:04:52.592" level="INFO">${last_user_id} = 31</msg>
<status status="PASS" endtime="20170528 14:04:52.592" starttime="20170528 14:04:52.408"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170528 14:04:52.593" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170528 14:04:52.593" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170528 14:04:52.594" starttime="20170528 14:04:52.593"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_user_endpoint}${last_user_id}</arg>
</arguments>
<status status="PASS" endtime="20170528 14:04:52.723" starttime="20170528 14:04:52.594"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170528 14:04:52.724" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170528 14:04:52.724" starttime="20170528 14:04:52.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170528 14:04:52.725" starttime="20170528 14:04:52.724"></status>
</kw>
<status status="PASS" endtime="20170528 14:04:52.725" starttime="20170528 14:04:52.407"></status>
</kw>
<status status="PASS" endtime="20170528 14:04:52.726" critical="yes" starttime="20170528 14:04:52.405"></status>
</test>
<status status="PASS" endtime="20170528 14:04:52.727" starttime="20170528 14:04:52.089"></status>
</suite>
<status status="PASS" endtime="20170528 14:04:52.730" starttime="20170528 14:04:52.086"></status>
</suite>
<status status="PASS" endtime="20170528 14:04:52.732" starttime="20170528 14:04:52.012"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="1">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="1">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="1">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
