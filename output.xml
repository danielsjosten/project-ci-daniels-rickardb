<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170522 10:15:44.533" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test get total of clients">
<kw name="Get the total of clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.770" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:44.770" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:44.770" starttime="20170522 10:15:44.769"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.771" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:44.771" starttime="20170522 10:15:44.771"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.772" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:44.773" starttime="20170522 10:15:44.772"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.796" starttime="20170522 10:15:44.773"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:44.797" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:44.797" starttime="20170522 10:15:44.796"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${total_clients}</var>
</assign>
<msg timestamp="20170522 10:15:44.798" level="INFO">${total_clients} = 5</msg>
<status status="PASS" endtime="20170522 10:15:44.798" starttime="20170522 10:15:44.797"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Getting the total of clients:${total_clients}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.799" starttime="20170522 10:15:44.798"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.800" starttime="20170522 10:15:44.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.801" starttime="20170522 10:15:44.800"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.802" starttime="20170522 10:15:44.769"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.802" critical="yes" starttime="20170522 10:15:44.768"></status>
</test>
<test id="s1-s1-s1-t2" name="Test create a new client">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 10:15:44.804" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 10:15:44.804" starttime="20170522 10:15:44.804"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:15:44.805" level="INFO">${name} = cfpzopvenm</msg>
<status status="PASS" endtime="20170522 10:15:44.805" starttime="20170522 10:15:44.805"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:15:44.806" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:15:44.806" starttime="20170522 10:15:44.806"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:15:44.807" level="INFO">${email} = cfpzopvenm@email.com</msg>
<status status="PASS" endtime="20170522 10:15:44.807" starttime="20170522 10:15:44.807"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:15:44.808" level="INFO">${socialSecurityNumber} = 388079693</msg>
<status status="PASS" endtime="20170522 10:15:44.808" starttime="20170522 10:15:44.808"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:15:44.809" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 10:15:44.809" starttime="20170522 10:15:44.808"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:15:44.810" level="INFO">${dictionary} = {u'id': u'100', u'name': u'cfpzopvenm', u'createDate': u'1473633063279', u'email': u'cfpzopvenm@email.com', u'gender': u'M', u'socialSecurityNumber': u'388079693'}</msg>
<status status="PASS" endtime="20170522 10:15:44.810" starttime="20170522 10:15:44.809"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 10:15:44.811" level="INFO">${client_json} = {"id": "100", "name": "cfpzopvenm", "createDate": "1473633063279", "email": "cfpzopvenm@email.com", "gender": "M", "socialSecurityNumber": "388079693"}</msg>
<status status="PASS" endtime="20170522 10:15:44.811" starttime="20170522 10:15:44.811"></status>
</kw>
<msg timestamp="20170522 10:15:44.812" level="INFO">${request_body} = {"id": "100", "name": "cfpzopvenm", "createDate": "1473633063279", "email": "cfpzopvenm@email.com", "gender": "M", "socialSecurityNumber": "388079693"}</msg>
<status status="PASS" endtime="20170522 10:15:44.812" starttime="20170522 10:15:44.804"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.813" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:44.813" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:44.813" starttime="20170522 10:15:44.812"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.814" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:44.814" starttime="20170522 10:15:44.813"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.814" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:44.815" starttime="20170522 10:15:44.814"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.815" level="INFO">Request body set to "{"id": "100", "name": "cfpzopvenm", "createDate": "1473633063279", "email": "cfpzopvenm@email.com", "gender": "M", "socialSecurityNumber": "388079693"}".</msg>
<status status="PASS" endtime="20170522 10:15:44.816" starttime="20170522 10:15:44.815"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.817" starttime="20170522 10:15:44.816"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.841" starttime="20170522 10:15:44.817"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:44.843" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:15:44.843" starttime="20170522 10:15:44.842"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.845" starttime="20170522 10:15:44.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.846" starttime="20170522 10:15:44.845"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.847" starttime="20170522 10:15:44.803"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.847" critical="yes" starttime="20170522 10:15:44.803"></status>
</test>
<test id="s1-s1-s1-t3" name="Test get all clients">
<kw name="Get all clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.850" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:44.850" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:44.850" starttime="20170522 10:15:44.849"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.865" starttime="20170522 10:15:44.851"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:44.868" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:44.868" starttime="20170522 10:15:44.866"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 10:15:44.869" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:15:44.869" starttime="20170522 10:15:44.868"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.870" starttime="20170522 10:15:44.870"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.872" starttime="20170522 10:15:44.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.872" starttime="20170522 10:15:44.872"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.873" starttime="20170522 10:15:44.848"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.873" critical="yes" starttime="20170522 10:15:44.848"></status>
</test>
<test id="s1-s1-s1-t4" name="Test get id from last client">
<kw name="Get id of last created client" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.876" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:44.882" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:44.883" starttime="20170522 10:15:44.875"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.893" starttime="20170522 10:15:44.885"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.895" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:44.895" starttime="20170522 10:15:44.894"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.897" starttime="20170522 10:15:44.896"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.898" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:15:44.898" starttime="20170522 10:15:44.897"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.907" starttime="20170522 10:15:44.899"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.909" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:44.909" starttime="20170522 10:15:44.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.910" starttime="20170522 10:15:44.909"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.911" level="INFO">${body_second_request} = 6</msg>
<status status="PASS" endtime="20170522 10:15:44.911" starttime="20170522 10:15:44.910"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:15:44.912" level="INFO">${last_index} = 5</msg>
<status status="PASS" endtime="20170522 10:15:44.912" starttime="20170522 10:15:44.912"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:15:44.914" level="INFO">${json_id} = 7</msg>
<status status="PASS" endtime="20170522 10:15:44.914" starttime="20170522 10:15:44.913"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.915" starttime="20170522 10:15:44.914"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.915" starttime="20170522 10:15:44.874"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.915" critical="yes" starttime="20170522 10:15:44.874"></status>
</test>
<test id="s1-s1-s1-t5" name="Test get specific client from id">
<kw name="Get specific client from id" library="client_operations">
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_to_get}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.918" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:44.919" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:44.919" starttime="20170522 10:15:44.918"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.926" starttime="20170522 10:15:44.919"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.927" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:44.927" starttime="20170522 10:15:44.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.928" starttime="20170522 10:15:44.928"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.929" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:15:44.929" starttime="20170522 10:15:44.929"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.937" starttime="20170522 10:15:44.930"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.938" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:44.938" starttime="20170522 10:15:44.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.939" starttime="20170522 10:15:44.939"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:44.941" level="INFO">${body_second_request} = 6</msg>
<status status="PASS" endtime="20170522 10:15:44.941" starttime="20170522 10:15:44.940"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:15:44.942" level="INFO">${last_index} = 5</msg>
<status status="PASS" endtime="20170522 10:15:44.943" starttime="20170522 10:15:44.942"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:15:44.944" level="INFO">${json_id} = 7</msg>
<status status="PASS" endtime="20170522 10:15:44.944" starttime="20170522 10:15:44.943"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.945" starttime="20170522 10:15:44.944"></status>
</kw>
<msg timestamp="20170522 10:15:44.945" level="INFO">${id_to_get} = 7</msg>
<status status="PASS" endtime="20170522 10:15:44.946" starttime="20170522 10:15:44.917"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.946" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:44.947" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:44.947" starttime="20170522 10:15:44.946"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.948" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:44.948" starttime="20170522 10:15:44.947"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.949" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:44.949" starttime="20170522 10:15:44.948"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_client_endpoint}${id_to_get}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.954" starttime="20170522 10:15:44.950"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:44.956" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:44.956" starttime="20170522 10:15:44.955"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 10:15:44.957" level="INFO">${response_body} = {"id":7,"name":"cfpzopvenm","createDate":1473633063279,"email":"cfpzopvenm@email.com","gender":"M","socialSecurityNumber":"388079693"}</msg>
<status status="PASS" endtime="20170522 10:15:44.958" starttime="20170522 10:15:44.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.959" starttime="20170522 10:15:44.958"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:44.960" starttime="20170522 10:15:44.959"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.960" starttime="20170522 10:15:44.917"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:44.960" critical="yes" starttime="20170522 10:15:44.916"></status>
</test>
<test id="s1-s1-s1-t6" name="Test create and delete client">
<kw name="Delete client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 10:15:44.970" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 10:15:44.970" starttime="20170522 10:15:44.966"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:15:44.972" level="INFO">${name} = rhxjtydolf</msg>
<status status="PASS" endtime="20170522 10:15:44.972" starttime="20170522 10:15:44.971"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:15:44.973" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:15:44.973" starttime="20170522 10:15:44.973"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:15:44.974" level="INFO">${email} = rhxjtydolf@email.com</msg>
<status status="PASS" endtime="20170522 10:15:44.975" starttime="20170522 10:15:44.974"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:15:44.976" level="INFO">${socialSecurityNumber} = 770160435</msg>
<status status="PASS" endtime="20170522 10:15:44.976" starttime="20170522 10:15:44.975"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:15:44.977" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170522 10:15:44.978" starttime="20170522 10:15:44.977"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:15:44.979" level="INFO">${dictionary} = {u'id': u'100', u'name': u'rhxjtydolf', u'createDate': u'1473633063279', u'email': u'rhxjtydolf@email.com', u'gender': u'F', u'socialSecurityNumber': u'770160435'}</msg>
<status status="PASS" endtime="20170522 10:15:44.980" starttime="20170522 10:15:44.978"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 10:15:44.981" level="INFO">${client_json} = {"id": "100", "name": "rhxjtydolf", "createDate": "1473633063279", "email": "rhxjtydolf@email.com", "gender": "F", "socialSecurityNumber": "770160435"}</msg>
<status status="PASS" endtime="20170522 10:15:44.981" starttime="20170522 10:15:44.980"></status>
</kw>
<msg timestamp="20170522 10:15:44.982" level="INFO">${request_body} = {"id": "100", "name": "rhxjtydolf", "createDate": "1473633063279", "email": "rhxjtydolf@email.com", "gender": "F", "socialSecurityNumber": "770160435"}</msg>
<status status="PASS" endtime="20170522 10:15:44.985" starttime="20170522 10:15:44.965"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:44.999" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:44.999" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.000" starttime="20170522 10:15:44.996"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.002" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:45.003" starttime="20170522 10:15:45.001"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.004" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:45.005" starttime="20170522 10:15:45.004"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.008" level="INFO">Request body set to "{"id": "100", "name": "rhxjtydolf", "createDate": "1473633063279", "email": "rhxjtydolf@email.com", "gender": "F", "socialSecurityNumber": "770160435"}".</msg>
<status status="PASS" endtime="20170522 10:15:45.008" starttime="20170522 10:15:45.007"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.010" starttime="20170522 10:15:45.009"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.029" starttime="20170522 10:15:45.010"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:45.030" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:15:45.030" starttime="20170522 10:15:45.029"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.032" starttime="20170522 10:15:45.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.033" starttime="20170522 10:15:45.032"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.033" starttime="20170522 10:15:44.964"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.035" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.036" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.036" starttime="20170522 10:15:45.035"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.045" starttime="20170522 10:15:45.036"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.047" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.048" starttime="20170522 10:15:45.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.049" starttime="20170522 10:15:45.048"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.050" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:15:45.050" starttime="20170522 10:15:45.049"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.065" starttime="20170522 10:15:45.050"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.066" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.066" starttime="20170522 10:15:45.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.068" starttime="20170522 10:15:45.067"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.069" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 10:15:45.069" starttime="20170522 10:15:45.068"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:15:45.070" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 10:15:45.070" starttime="20170522 10:15:45.069"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:15:45.071" level="INFO">${json_id} = 8</msg>
<status status="PASS" endtime="20170522 10:15:45.071" starttime="20170522 10:15:45.070"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.072" starttime="20170522 10:15:45.071"></status>
</kw>
<msg timestamp="20170522 10:15:45.072" level="INFO">${id_of_created_client} = 8</msg>
<status status="PASS" endtime="20170522 10:15:45.072" starttime="20170522 10:15:45.034"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.073" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.073" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.073" starttime="20170522 10:15:45.072"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.074" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:45.074" starttime="20170522 10:15:45.074"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.075" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:45.075" starttime="20170522 10:15:45.075"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.100" starttime="20170522 10:15:45.076"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:45.101" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:15:45.101" starttime="20170522 10:15:45.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.102" starttime="20170522 10:15:45.101"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.102" starttime="20170522 10:15:44.962"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.111" critical="yes" starttime="20170522 10:15:44.961"></status>
</test>
<test id="s1-s1-s1-t7" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 10:15:45.115" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 10:15:45.115" starttime="20170522 10:15:45.114"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:15:45.116" level="INFO">${name} = ikcvekrfej</msg>
<status status="PASS" endtime="20170522 10:15:45.116" starttime="20170522 10:15:45.115"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:15:45.117" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:15:45.117" starttime="20170522 10:15:45.116"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:15:45.118" level="INFO">${email} = ikcvekrfej@email.com</msg>
<status status="PASS" endtime="20170522 10:15:45.118" starttime="20170522 10:15:45.117"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:15:45.120" level="INFO">${socialSecurityNumber} = 752992402</msg>
<status status="PASS" endtime="20170522 10:15:45.120" starttime="20170522 10:15:45.119"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:15:45.121" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 10:15:45.121" starttime="20170522 10:15:45.120"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:15:45.125" level="INFO">${dictionary} = {u'id': u'100', u'name': u'ikcvekrfej', u'createDate': u'1473633063279', u'email': u'ikcvekrfej@email.com', u'gender': u'M', u'socialSecurityNumber': u'752992402'}</msg>
<status status="PASS" endtime="20170522 10:15:45.125" starttime="20170522 10:15:45.122"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 10:15:45.126" level="INFO">${client_json} = {"id": "100", "name": "ikcvekrfej", "createDate": "1473633063279", "email": "ikcvekrfej@email.com", "gender": "M", "socialSecurityNumber": "752992402"}</msg>
<status status="PASS" endtime="20170522 10:15:45.126" starttime="20170522 10:15:45.125"></status>
</kw>
<msg timestamp="20170522 10:15:45.127" level="INFO">${request_body} = {"id": "100", "name": "ikcvekrfej", "createDate": "1473633063279", "email": "ikcvekrfej@email.com", "gender": "M", "socialSecurityNumber": "752992402"}</msg>
<status status="PASS" endtime="20170522 10:15:45.127" starttime="20170522 10:15:45.113"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.128" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.128" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.128" starttime="20170522 10:15:45.127"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.129" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:45.129" starttime="20170522 10:15:45.128"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.130" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:45.130" starttime="20170522 10:15:45.129"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.131" level="INFO">Request body set to "{"id": "100", "name": "ikcvekrfej", "createDate": "1473633063279", "email": "ikcvekrfej@email.com", "gender": "M", "socialSecurityNumber": "752992402"}".</msg>
<status status="PASS" endtime="20170522 10:15:45.131" starttime="20170522 10:15:45.130"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.157" starttime="20170522 10:15:45.156"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.175" starttime="20170522 10:15:45.158"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:45.176" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:15:45.176" starttime="20170522 10:15:45.176"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.178" starttime="20170522 10:15:45.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.178" starttime="20170522 10:15:45.178"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.179" starttime="20170522 10:15:45.113"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.180" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.181" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.181" starttime="20170522 10:15:45.180"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.189" starttime="20170522 10:15:45.181"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.190" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.190" starttime="20170522 10:15:45.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.191" starttime="20170522 10:15:45.191"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.192" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:15:45.192" starttime="20170522 10:15:45.191"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.198" starttime="20170522 10:15:45.193"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.199" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.199" starttime="20170522 10:15:45.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.200" starttime="20170522 10:15:45.199"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.210" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 10:15:45.210" starttime="20170522 10:15:45.209"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:15:45.211" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 10:15:45.211" starttime="20170522 10:15:45.210"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:15:45.212" level="INFO">${json_id} = 9</msg>
<status status="PASS" endtime="20170522 10:15:45.212" starttime="20170522 10:15:45.211"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.213" starttime="20170522 10:15:45.212"></status>
</kw>
<msg timestamp="20170522 10:15:45.213" level="INFO">${id_of_created_client} = 9</msg>
<status status="PASS" endtime="20170522 10:15:45.213" starttime="20170522 10:15:45.179"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.215" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.216" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.216" starttime="20170522 10:15:45.215"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.226" starttime="20170522 10:15:45.217"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.227" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.227" starttime="20170522 10:15:45.227"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.228" starttime="20170522 10:15:45.227"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.229" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:15:45.229" starttime="20170522 10:15:45.228"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.247" starttime="20170522 10:15:45.237"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.248" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.248" starttime="20170522 10:15:45.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.249" starttime="20170522 10:15:45.248"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.250" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 10:15:45.250" starttime="20170522 10:15:45.249"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:15:45.251" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 10:15:45.251" starttime="20170522 10:15:45.250"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:15:45.252" level="INFO">${json_id} = 9</msg>
<status status="PASS" endtime="20170522 10:15:45.252" starttime="20170522 10:15:45.251"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.253" starttime="20170522 10:15:45.252"></status>
</kw>
<msg timestamp="20170522 10:15:45.253" level="INFO">${id} = 9</msg>
<status status="PASS" endtime="20170522 10:15:45.253" starttime="20170522 10:15:45.214"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:15:45.254" level="INFO">${name} = xwczgpnlgg</msg>
<status status="PASS" endtime="20170522 10:15:45.255" starttime="20170522 10:15:45.254"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:15:45.255" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:15:45.255" starttime="20170522 10:15:45.255"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:15:45.256" level="INFO">${email} = xwczgpnlgg@email.com</msg>
<status status="PASS" endtime="20170522 10:15:45.257" starttime="20170522 10:15:45.256"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:15:45.257" level="INFO">${socialSecurityNumber} = 091776735</msg>
<status status="PASS" endtime="20170522 10:15:45.257" starttime="20170522 10:15:45.257"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:15:45.258" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 10:15:45.258" starttime="20170522 10:15:45.258"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:15:45.260" level="INFO">${dictionary} = {u'id': '9', u'name': u'xwczgpnlgg', u'createDate': u'1473633063279', u'email': u'xwczgpnlgg@email.com', u'gender': u'M', u'socialSecurityNumber': u'091776735'}</msg>
<status status="PASS" endtime="20170522 10:15:45.260" starttime="20170522 10:15:45.259"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170522 10:15:45.261" level="INFO">${update_client_json} = {"id": "9", "name": "xwczgpnlgg", "createDate": "1473633063279", "email": "xwczgpnlgg@email.com", "gender": "M", "socialSecurityNumber": "091776735"}</msg>
<status status="PASS" endtime="20170522 10:15:45.261" starttime="20170522 10:15:45.260"></status>
</kw>
<msg timestamp="20170522 10:15:45.262" level="INFO">${request_body_new_client_data} = {"id": "9", "name": "xwczgpnlgg", "createDate": "1473633063279", "email": "xwczgpnlgg@email.com", "gender": "M", "socialSecurityNumber": "091776735"}</msg>
<status status="PASS" endtime="20170522 10:15:45.262" starttime="20170522 10:15:45.214"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loggin this new user ${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.263" starttime="20170522 10:15:45.262"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.264" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.264" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.264" starttime="20170522 10:15:45.263"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.265" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:45.265" starttime="20170522 10:15:45.264"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.266" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:45.266" starttime="20170522 10:15:45.265"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.266" level="INFO">Request body set to "{"id": "9", "name": "xwczgpnlgg", "createDate": "1473633063279", "email": "xwczgpnlgg@email.com", "gender": "M", "socialSecurityNumber": "091776735"}".</msg>
<status status="PASS" endtime="20170522 10:15:45.267" starttime="20170522 10:15:45.266"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.268" starttime="20170522 10:15:45.267"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.299" starttime="20170522 10:15:45.268"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Updating client with data:${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.300" starttime="20170522 10:15:45.299"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:45.301" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:15:45.301" starttime="20170522 10:15:45.300"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.302" starttime="20170522 10:15:45.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.302" starttime="20170522 10:15:45.302"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.303" starttime="20170522 10:15:45.112"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.303" critical="yes" starttime="20170522 10:15:45.111"></status>
</test>
<test id="s1-s1-s1-t8" name="Test">
<kw name="Create client for update" library="client_operations">
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.305" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.305" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.306" starttime="20170522 10:15:45.305"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.313" starttime="20170522 10:15:45.306"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.314" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.314" starttime="20170522 10:15:45.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.315" starttime="20170522 10:15:45.314"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.316" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 10:15:45.316" starttime="20170522 10:15:45.315"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.322" starttime="20170522 10:15:45.316"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.323" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 10:15:45.323" starttime="20170522 10:15:45.322"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.324" starttime="20170522 10:15:45.323"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 10:15:45.325" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 10:15:45.325" starttime="20170522 10:15:45.324"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 10:15:45.326" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 10:15:45.326" starttime="20170522 10:15:45.325"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 10:15:45.327" level="INFO">${json_id} = 9</msg>
<status status="PASS" endtime="20170522 10:15:45.327" starttime="20170522 10:15:45.326"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.328" starttime="20170522 10:15:45.327"></status>
</kw>
<msg timestamp="20170522 10:15:45.328" level="INFO">${id} = 9</msg>
<status status="PASS" endtime="20170522 10:15:45.328" starttime="20170522 10:15:45.305"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 10:15:45.329" level="INFO">${name} = ynznjravxx</msg>
<status status="PASS" endtime="20170522 10:15:45.329" starttime="20170522 10:15:45.329"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 10:15:45.330" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 10:15:45.330" starttime="20170522 10:15:45.329"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 10:15:45.331" level="INFO">${email} = ynznjravxx@email.com</msg>
<status status="PASS" endtime="20170522 10:15:45.331" starttime="20170522 10:15:45.330"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 10:15:45.332" level="INFO">${socialSecurityNumber} = 901124520</msg>
<status status="PASS" endtime="20170522 10:15:45.332" starttime="20170522 10:15:45.331"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 10:15:45.332" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 10:15:45.332" starttime="20170522 10:15:45.332"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 10:15:45.340" level="INFO">${dictionary} = {u'id': '9', u'name': u'ynznjravxx', u'createDate': u'1473633063279', u'email': u'ynznjravxx@email.com', u'gender': u'M', u'socialSecurityNumber': u'901124520'}</msg>
<status status="PASS" endtime="20170522 10:15:45.340" starttime="20170522 10:15:45.333"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170522 10:15:45.341" level="INFO">${update_client_json} = {"id": "9", "name": "ynznjravxx", "createDate": "1473633063279", "email": "ynznjravxx@email.com", "gender": "M", "socialSecurityNumber": "901124520"}</msg>
<status status="PASS" endtime="20170522 10:15:45.341" starttime="20170522 10:15:45.341"></status>
</kw>
<msg timestamp="20170522 10:15:45.342" level="INFO">${request_body} = {"id": "9", "name": "ynznjravxx", "createDate": "1473633063279", "email": "ynznjravxx@email.com", "gender": "M", "socialSecurityNumber": "901124520"}</msg>
<status status="PASS" endtime="20170522 10:15:45.342" starttime="20170522 10:15:45.304"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.343" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 10:15:45.343" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 10:15:45.343" starttime="20170522 10:15:45.342"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.344" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 10:15:45.344" starttime="20170522 10:15:45.343"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.345" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 10:15:45.345" starttime="20170522 10:15:45.345"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 10:15:45.346" level="INFO">Request body set to "{"id": "9", "name": "ynznjravxx", "createDate": "1473633063279", "email": "ynznjravxx@email.com", "gender": "M", "socialSecurityNumber": "901124520"}".</msg>
<status status="PASS" endtime="20170522 10:15:45.346" starttime="20170522 10:15:45.345"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.347" starttime="20170522 10:15:45.346"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.359" starttime="20170522 10:15:45.347"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 10:15:45.360" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 10:15:45.361" starttime="20170522 10:15:45.360"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.362" starttime="20170522 10:15:45.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 10:15:45.363" starttime="20170522 10:15:45.362"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.364" starttime="20170522 10:15:45.304"></status>
</kw>
<status status="PASS" endtime="20170522 10:15:45.365" critical="yes" starttime="20170522 10:15:45.303"></status>
</test>
<status status="PASS" endtime="20170522 10:15:45.366" starttime="20170522 10:15:44.644"></status>
</suite>
<status status="PASS" endtime="20170522 10:15:45.368" starttime="20170522 10:15:44.641"></status>
</suite>
<status status="PASS" endtime="20170522 10:15:45.380" starttime="20170522 10:15:44.606"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="8">Critical Tests</stat>
<stat fail="0" pass="8">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="8">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="8">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="8">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
