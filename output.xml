<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170522 11:14:35.220" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test get total of clients">
<kw name="Get the total of clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.411" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.411" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.412" starttime="20170522 11:14:36.411"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.412" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 11:14:36.413" starttime="20170522 11:14:36.412"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.414" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 11:14:36.414" starttime="20170522 11:14:36.413"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.440" starttime="20170522 11:14:36.415"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.441" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.441" starttime="20170522 11:14:36.441"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${total_clients}</var>
</assign>
<msg timestamp="20170522 11:14:36.442" level="INFO">${total_clients} = 5</msg>
<status status="PASS" endtime="20170522 11:14:36.442" starttime="20170522 11:14:36.442"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Getting the total of clients:${total_clients}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.446" starttime="20170522 11:14:36.446"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.450" starttime="20170522 11:14:36.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.452" starttime="20170522 11:14:36.451"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.453" starttime="20170522 11:14:36.410"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.454" critical="yes" starttime="20170522 11:14:36.409"></status>
</test>
<test id="s1-s1-s1-t2" name="Test create a new client">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 11:14:36.458" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 11:14:36.459" starttime="20170522 11:14:36.457"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 11:14:36.459" level="INFO">${name} = daavmrspqr</msg>
<status status="PASS" endtime="20170522 11:14:36.460" starttime="20170522 11:14:36.459"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 11:14:36.460" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 11:14:36.461" starttime="20170522 11:14:36.460"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 11:14:36.462" level="INFO">${email} = daavmrspqr@email.com</msg>
<status status="PASS" endtime="20170522 11:14:36.462" starttime="20170522 11:14:36.461"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 11:14:36.464" level="INFO">${socialSecurityNumber} = 260523221</msg>
<status status="PASS" endtime="20170522 11:14:36.464" starttime="20170522 11:14:36.464"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 11:14:36.465" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 11:14:36.465" starttime="20170522 11:14:36.465"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 11:14:36.467" level="INFO">${dictionary} = {u'id': u'100', u'name': u'daavmrspqr', u'createDate': u'1473633063279', u'email': u'daavmrspqr@email.com', u'gender': u'M', u'socialSecurityNumber': u'260523221'}</msg>
<status status="PASS" endtime="20170522 11:14:36.467" starttime="20170522 11:14:36.466"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 11:14:36.468" level="INFO">${client_json} = {"id": "100", "name": "daavmrspqr", "createDate": "1473633063279", "email": "daavmrspqr@email.com", "gender": "M", "socialSecurityNumber": "260523221"}</msg>
<status status="PASS" endtime="20170522 11:14:36.468" starttime="20170522 11:14:36.467"></status>
</kw>
<msg timestamp="20170522 11:14:36.468" level="INFO">${request_body} = {"id": "100", "name": "daavmrspqr", "createDate": "1473633063279", "email": "daavmrspqr@email.com", "gender": "M", "socialSecurityNumber": "260523221"}</msg>
<status status="PASS" endtime="20170522 11:14:36.468" starttime="20170522 11:14:36.457"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.469" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.469" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.470" starttime="20170522 11:14:36.469"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.470" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 11:14:36.471" starttime="20170522 11:14:36.470"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.471" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 11:14:36.471" starttime="20170522 11:14:36.471"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.472" level="INFO">Request body set to "{"id": "100", "name": "daavmrspqr", "createDate": "1473633063279", "email": "daavmrspqr@email.com", "gender": "M", "socialSecurityNumber": "260523221"}".</msg>
<status status="PASS" endtime="20170522 11:14:36.472" starttime="20170522 11:14:36.472"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.473" starttime="20170522 11:14:36.473"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.495" starttime="20170522 11:14:36.473"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.497" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 11:14:36.497" starttime="20170522 11:14:36.496"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.498" starttime="20170522 11:14:36.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.499" starttime="20170522 11:14:36.499"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.500" starttime="20170522 11:14:36.456"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.500" critical="yes" starttime="20170522 11:14:36.455"></status>
</test>
<test id="s1-s1-s1-t3" name="Test get all clients">
<kw name="Get all clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.508" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.508" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.509" starttime="20170522 11:14:36.507"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.520" starttime="20170522 11:14:36.510"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.521" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.521" starttime="20170522 11:14:36.521"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 11:14:36.522" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 11:14:36.522" starttime="20170522 11:14:36.522"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.523" starttime="20170522 11:14:36.523"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.525" starttime="20170522 11:14:36.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.526" starttime="20170522 11:14:36.526"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.527" starttime="20170522 11:14:36.507"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.527" critical="yes" starttime="20170522 11:14:36.501"></status>
</test>
<test id="s1-s1-s1-t4" name="Test get id from last client">
<kw name="Get id of last created client" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.529" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.529" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.529" starttime="20170522 11:14:36.528"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.548" starttime="20170522 11:14:36.530"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.550" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.551" starttime="20170522 11:14:36.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.554" starttime="20170522 11:14:36.552"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.556" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 11:14:36.557" starttime="20170522 11:14:36.555"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.566" starttime="20170522 11:14:36.558"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.567" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.567" starttime="20170522 11:14:36.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.568" starttime="20170522 11:14:36.568"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.569" level="INFO">${body_second_request} = 6</msg>
<status status="PASS" endtime="20170522 11:14:36.569" starttime="20170522 11:14:36.569"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 11:14:36.570" level="INFO">${last_index} = 5</msg>
<status status="PASS" endtime="20170522 11:14:36.571" starttime="20170522 11:14:36.570"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 11:14:36.572" level="INFO">${json_id} = 7</msg>
<status status="PASS" endtime="20170522 11:14:36.572" starttime="20170522 11:14:36.571"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.573" starttime="20170522 11:14:36.572"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.573" starttime="20170522 11:14:36.528"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.574" critical="yes" starttime="20170522 11:14:36.527"></status>
</test>
<test id="s1-s1-s1-t5" name="Test get specific client from id">
<kw name="Get specific client from id" library="client_operations">
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_to_get}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.577" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.577" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.578" starttime="20170522 11:14:36.576"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.591" starttime="20170522 11:14:36.578"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.592" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.593" starttime="20170522 11:14:36.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.594" starttime="20170522 11:14:36.593"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.595" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 11:14:36.596" starttime="20170522 11:14:36.595"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.603" starttime="20170522 11:14:36.596"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.605" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.605" starttime="20170522 11:14:36.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.606" starttime="20170522 11:14:36.605"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.607" level="INFO">${body_second_request} = 6</msg>
<status status="PASS" endtime="20170522 11:14:36.607" starttime="20170522 11:14:36.606"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 11:14:36.608" level="INFO">${last_index} = 5</msg>
<status status="PASS" endtime="20170522 11:14:36.608" starttime="20170522 11:14:36.607"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 11:14:36.609" level="INFO">${json_id} = 7</msg>
<status status="PASS" endtime="20170522 11:14:36.609" starttime="20170522 11:14:36.608"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.610" starttime="20170522 11:14:36.610"></status>
</kw>
<msg timestamp="20170522 11:14:36.611" level="INFO">${id_to_get} = 7</msg>
<status status="PASS" endtime="20170522 11:14:36.611" starttime="20170522 11:14:36.576"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.612" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.612" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.613" starttime="20170522 11:14:36.611"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.615" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 11:14:36.615" starttime="20170522 11:14:36.614"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.616" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 11:14:36.617" starttime="20170522 11:14:36.616"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_client_endpoint}${id_to_get}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.624" starttime="20170522 11:14:36.617"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.625" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.625" starttime="20170522 11:14:36.624"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170522 11:14:36.626" level="INFO">${response_body} = {"id":7,"name":"daavmrspqr","createDate":1473633063279,"email":"daavmrspqr@email.com","gender":"M","socialSecurityNumber":"260523221"}</msg>
<status status="PASS" endtime="20170522 11:14:36.626" starttime="20170522 11:14:36.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.627" starttime="20170522 11:14:36.626"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.628" starttime="20170522 11:14:36.627"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.628" starttime="20170522 11:14:36.575"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.628" critical="yes" starttime="20170522 11:14:36.574"></status>
</test>
<test id="s1-s1-s1-t6" name="Test create and delete client">
<kw name="Delete client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 11:14:36.633" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 11:14:36.633" starttime="20170522 11:14:36.632"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 11:14:36.634" level="INFO">${name} = dnndqrxwld</msg>
<status status="PASS" endtime="20170522 11:14:36.634" starttime="20170522 11:14:36.633"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 11:14:36.635" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 11:14:36.636" starttime="20170522 11:14:36.635"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 11:14:36.638" level="INFO">${email} = dnndqrxwld@email.com</msg>
<status status="PASS" endtime="20170522 11:14:36.638" starttime="20170522 11:14:36.636"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 11:14:36.639" level="INFO">${socialSecurityNumber} = 494997661</msg>
<status status="PASS" endtime="20170522 11:14:36.639" starttime="20170522 11:14:36.639"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 11:14:36.640" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170522 11:14:36.641" starttime="20170522 11:14:36.640"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 11:14:36.645" level="INFO">${dictionary} = {u'id': u'100', u'name': u'dnndqrxwld', u'createDate': u'1473633063279', u'email': u'dnndqrxwld@email.com', u'gender': u'F', u'socialSecurityNumber': u'494997661'}</msg>
<status status="PASS" endtime="20170522 11:14:36.646" starttime="20170522 11:14:36.642"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 11:14:36.647" level="INFO">${client_json} = {"id": "100", "name": "dnndqrxwld", "createDate": "1473633063279", "email": "dnndqrxwld@email.com", "gender": "F", "socialSecurityNumber": "494997661"}</msg>
<status status="PASS" endtime="20170522 11:14:36.647" starttime="20170522 11:14:36.646"></status>
</kw>
<msg timestamp="20170522 11:14:36.647" level="INFO">${request_body} = {"id": "100", "name": "dnndqrxwld", "createDate": "1473633063279", "email": "dnndqrxwld@email.com", "gender": "F", "socialSecurityNumber": "494997661"}</msg>
<status status="PASS" endtime="20170522 11:14:36.648" starttime="20170522 11:14:36.631"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.648" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.649" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.649" starttime="20170522 11:14:36.648"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.650" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 11:14:36.650" starttime="20170522 11:14:36.649"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.651" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 11:14:36.651" starttime="20170522 11:14:36.650"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.652" level="INFO">Request body set to "{"id": "100", "name": "dnndqrxwld", "createDate": "1473633063279", "email": "dnndqrxwld@email.com", "gender": "F", "socialSecurityNumber": "494997661"}".</msg>
<status status="PASS" endtime="20170522 11:14:36.652" starttime="20170522 11:14:36.651"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.653" starttime="20170522 11:14:36.652"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.675" starttime="20170522 11:14:36.653"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.676" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 11:14:36.676" starttime="20170522 11:14:36.675"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.684" starttime="20170522 11:14:36.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.685" starttime="20170522 11:14:36.685"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.686" starttime="20170522 11:14:36.631"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.687" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.688" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.688" starttime="20170522 11:14:36.687"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.702" starttime="20170522 11:14:36.689"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.703" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.703" starttime="20170522 11:14:36.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.705" starttime="20170522 11:14:36.704"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.706" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 11:14:36.706" starttime="20170522 11:14:36.705"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.714" starttime="20170522 11:14:36.707"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.715" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.715" starttime="20170522 11:14:36.714"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.716" starttime="20170522 11:14:36.715"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.717" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 11:14:36.717" starttime="20170522 11:14:36.716"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 11:14:36.718" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 11:14:36.718" starttime="20170522 11:14:36.717"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 11:14:36.719" level="INFO">${json_id} = 8</msg>
<status status="PASS" endtime="20170522 11:14:36.719" starttime="20170522 11:14:36.718"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.720" starttime="20170522 11:14:36.719"></status>
</kw>
<msg timestamp="20170522 11:14:36.720" level="INFO">${id_of_created_client} = 8</msg>
<status status="PASS" endtime="20170522 11:14:36.720" starttime="20170522 11:14:36.686"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.721" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.721" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.722" starttime="20170522 11:14:36.721"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.723" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 11:14:36.723" starttime="20170522 11:14:36.722"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.724" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 11:14:36.724" starttime="20170522 11:14:36.724"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.759" starttime="20170522 11:14:36.725"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.760" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 11:14:36.760" starttime="20170522 11:14:36.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.761" starttime="20170522 11:14:36.760"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.761" starttime="20170522 11:14:36.630"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.761" critical="yes" starttime="20170522 11:14:36.629"></status>
</test>
<test id="s1-s1-s1-t7" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 11:14:36.764" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 11:14:36.764" starttime="20170522 11:14:36.764"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 11:14:36.765" level="INFO">${name} = sojnpkrpfk</msg>
<status status="PASS" endtime="20170522 11:14:36.765" starttime="20170522 11:14:36.765"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 11:14:36.766" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 11:14:36.766" starttime="20170522 11:14:36.766"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 11:14:36.767" level="INFO">${email} = sojnpkrpfk@email.com</msg>
<status status="PASS" endtime="20170522 11:14:36.767" starttime="20170522 11:14:36.766"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 11:14:36.768" level="INFO">${socialSecurityNumber} = 383889267</msg>
<status status="PASS" endtime="20170522 11:14:36.768" starttime="20170522 11:14:36.767"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 11:14:36.777" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 11:14:36.777" starttime="20170522 11:14:36.768"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 11:14:36.786" level="INFO">${dictionary} = {u'id': u'100', u'name': u'sojnpkrpfk', u'createDate': u'1473633063279', u'email': u'sojnpkrpfk@email.com', u'gender': u'M', u'socialSecurityNumber': u'383889267'}</msg>
<status status="PASS" endtime="20170522 11:14:36.786" starttime="20170522 11:14:36.785"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 11:14:36.787" level="INFO">${client_json} = {"id": "100", "name": "sojnpkrpfk", "createDate": "1473633063279", "email": "sojnpkrpfk@email.com", "gender": "M", "socialSecurityNumber": "383889267"}</msg>
<status status="PASS" endtime="20170522 11:14:36.787" starttime="20170522 11:14:36.787"></status>
</kw>
<msg timestamp="20170522 11:14:36.788" level="INFO">${request_body} = {"id": "100", "name": "sojnpkrpfk", "createDate": "1473633063279", "email": "sojnpkrpfk@email.com", "gender": "M", "socialSecurityNumber": "383889267"}</msg>
<status status="PASS" endtime="20170522 11:14:36.788" starttime="20170522 11:14:36.763"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.788" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.789" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.789" starttime="20170522 11:14:36.788"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.790" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 11:14:36.790" starttime="20170522 11:14:36.789"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.790" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 11:14:36.793" starttime="20170522 11:14:36.790"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.794" level="INFO">Request body set to "{"id": "100", "name": "sojnpkrpfk", "createDate": "1473633063279", "email": "sojnpkrpfk@email.com", "gender": "M", "socialSecurityNumber": "383889267"}".</msg>
<status status="PASS" endtime="20170522 11:14:36.794" starttime="20170522 11:14:36.794"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.809" starttime="20170522 11:14:36.808"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.821" starttime="20170522 11:14:36.809"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.822" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 11:14:36.822" starttime="20170522 11:14:36.822"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.823" starttime="20170522 11:14:36.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.824" starttime="20170522 11:14:36.823"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.824" starttime="20170522 11:14:36.763"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.825" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.825" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.825" starttime="20170522 11:14:36.825"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.854" starttime="20170522 11:14:36.826"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.854" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.854" starttime="20170522 11:14:36.854"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.855" starttime="20170522 11:14:36.855"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.856" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 11:14:36.856" starttime="20170522 11:14:36.855"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.875" starttime="20170522 11:14:36.857"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.878" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.878" starttime="20170522 11:14:36.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.881" starttime="20170522 11:14:36.879"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.882" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 11:14:36.882" starttime="20170522 11:14:36.881"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 11:14:36.883" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 11:14:36.883" starttime="20170522 11:14:36.882"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 11:14:36.884" level="INFO">${json_id} = 9</msg>
<status status="PASS" endtime="20170522 11:14:36.884" starttime="20170522 11:14:36.883"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.885" starttime="20170522 11:14:36.885"></status>
</kw>
<msg timestamp="20170522 11:14:36.886" level="INFO">${id_of_created_client} = 9</msg>
<status status="PASS" endtime="20170522 11:14:36.886" starttime="20170522 11:14:36.824"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.888" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.888" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.888" starttime="20170522 11:14:36.887"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.899" starttime="20170522 11:14:36.889"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.900" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.900" starttime="20170522 11:14:36.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.901" starttime="20170522 11:14:36.900"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.902" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 11:14:36.902" starttime="20170522 11:14:36.901"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.909" starttime="20170522 11:14:36.903"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.910" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 11:14:36.911" starttime="20170522 11:14:36.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.911" starttime="20170522 11:14:36.911"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 11:14:36.912" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170522 11:14:36.912" starttime="20170522 11:14:36.912"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 11:14:36.913" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170522 11:14:36.914" starttime="20170522 11:14:36.913"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 11:14:36.915" level="INFO">${json_id} = 9</msg>
<status status="PASS" endtime="20170522 11:14:36.915" starttime="20170522 11:14:36.914"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.915" starttime="20170522 11:14:36.915"></status>
</kw>
<msg timestamp="20170522 11:14:36.916" level="INFO">${id} = 9</msg>
<status status="PASS" endtime="20170522 11:14:36.916" starttime="20170522 11:14:36.887"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 11:14:36.917" level="INFO">${name} = gpykujqyqa</msg>
<status status="PASS" endtime="20170522 11:14:36.917" starttime="20170522 11:14:36.916"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 11:14:36.918" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 11:14:36.918" starttime="20170522 11:14:36.918"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 11:14:36.920" level="INFO">${email} = gpykujqyqa@email.com</msg>
<status status="PASS" endtime="20170522 11:14:36.921" starttime="20170522 11:14:36.919"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 11:14:36.921" level="INFO">${socialSecurityNumber} = 810520226</msg>
<status status="PASS" endtime="20170522 11:14:36.922" starttime="20170522 11:14:36.921"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 11:14:36.922" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 11:14:36.923" starttime="20170522 11:14:36.922"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 11:14:36.924" level="INFO">${dictionary} = {u'id': '9', u'name': u'gpykujqyqa', u'createDate': u'1473633063279', u'email': u'gpykujqyqa@email.com', u'gender': u'M', u'socialSecurityNumber': u'810520226'}</msg>
<status status="PASS" endtime="20170522 11:14:36.924" starttime="20170522 11:14:36.923"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170522 11:14:36.925" level="INFO">${update_client_json} = {"id": "9", "name": "gpykujqyqa", "createDate": "1473633063279", "email": "gpykujqyqa@email.com", "gender": "M", "socialSecurityNumber": "810520226"}</msg>
<status status="PASS" endtime="20170522 11:14:36.925" starttime="20170522 11:14:36.924"></status>
</kw>
<msg timestamp="20170522 11:14:36.925" level="INFO">${request_body_new_client_data} = {"id": "9", "name": "gpykujqyqa", "createDate": "1473633063279", "email": "gpykujqyqa@email.com", "gender": "M", "socialSecurityNumber": "810520226"}</msg>
<status status="PASS" endtime="20170522 11:14:36.925" starttime="20170522 11:14:36.886"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loggin this new user ${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.926" starttime="20170522 11:14:36.926"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.927" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 11:14:36.927" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 11:14:36.927" starttime="20170522 11:14:36.927"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.928" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 11:14:36.928" starttime="20170522 11:14:36.928"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.929" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 11:14:36.929" starttime="20170522 11:14:36.929"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170522 11:14:36.930" level="INFO">Request body set to "{"id": "9", "name": "gpykujqyqa", "createDate": "1473633063279", "email": "gpykujqyqa@email.com", "gender": "M", "socialSecurityNumber": "810520226"}".</msg>
<status status="PASS" endtime="20170522 11:14:36.930" starttime="20170522 11:14:36.930"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.931" starttime="20170522 11:14:36.931"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.944" starttime="20170522 11:14:36.931"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Updating client with data:${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.945" starttime="20170522 11:14:36.945"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 11:14:36.947" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 11:14:36.947" starttime="20170522 11:14:36.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.948" starttime="20170522 11:14:36.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 11:14:36.949" starttime="20170522 11:14:36.948"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.949" starttime="20170522 11:14:36.763"></status>
</kw>
<status status="PASS" endtime="20170522 11:14:36.949" critical="yes" starttime="20170522 11:14:36.762"></status>
</test>
<status status="PASS" endtime="20170522 11:14:36.950" starttime="20170522 11:14:36.278"></status>
</suite>
<status status="PASS" endtime="20170522 11:14:36.952" starttime="20170522 11:14:36.274"></status>
</suite>
<status status="PASS" endtime="20170522 11:14:36.954" starttime="20170522 11:14:36.239"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="7">Critical Tests</stat>
<stat fail="0" pass="7">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="7">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="7">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="7">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
