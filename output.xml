<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170529 08:52:01.919" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test get total of clients">
<kw name="Get the total of clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.201" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.201" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.201" starttime="20170529 08:52:02.200"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.202" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.203" starttime="20170529 08:52:02.202"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.204" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.204" starttime="20170529 08:52:02.203"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.215" starttime="20170529 08:52:02.204"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.216" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.217" starttime="20170529 08:52:02.216"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${total_clients}</var>
</assign>
<msg timestamp="20170529 08:52:02.218" level="INFO">${total_clients} = 19</msg>
<status status="PASS" endtime="20170529 08:52:02.218" starttime="20170529 08:52:02.217"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe total number of clients in database is: ${total_clients}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.220" starttime="20170529 08:52:02.219"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.220" starttime="20170529 08:52:02.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.221" starttime="20170529 08:52:02.221"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.222" starttime="20170529 08:52:02.199"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.222" critical="yes" starttime="20170529 08:52:02.197"></status>
</test>
<test id="s1-s1-s1-t2" name="Test create a new client">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170529 08:52:02.225" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170529 08:52:02.225" starttime="20170529 08:52:02.224"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170529 08:52:02.226" level="INFO">${name} = sewwhyslvh</msg>
<status status="PASS" endtime="20170529 08:52:02.226" starttime="20170529 08:52:02.225"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170529 08:52:02.227" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170529 08:52:02.227" starttime="20170529 08:52:02.226"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170529 08:52:02.228" level="INFO">${email} = sewwhyslvh@email.com</msg>
<status status="PASS" endtime="20170529 08:52:02.228" starttime="20170529 08:52:02.227"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170529 08:52:02.229" level="INFO">${socialSecurityNumber} = 681219735</msg>
<status status="PASS" endtime="20170529 08:52:02.229" starttime="20170529 08:52:02.229"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170529 08:52:02.230" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170529 08:52:02.230" starttime="20170529 08:52:02.230"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170529 08:52:02.232" level="INFO">${dictionary} = {u'id': u'100', u'name': u'sewwhyslvh', u'createDate': u'1473633063279', u'email': u'sewwhyslvh@email.com', u'gender': u'F', u'socialSecurityNumber': u'681219735'}</msg>
<status status="PASS" endtime="20170529 08:52:02.232" starttime="20170529 08:52:02.231"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170529 08:52:02.233" level="INFO">${client_json} = {"id": "100", "name": "sewwhyslvh", "createDate": "1473633063279", "email": "sewwhyslvh@email.com", "gender": "F", "socialSecurityNumber": "681219735"}</msg>
<status status="PASS" endtime="20170529 08:52:02.234" starttime="20170529 08:52:02.233"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.235" starttime="20170529 08:52:02.234"></status>
</kw>
<msg timestamp="20170529 08:52:02.236" level="INFO">${request_body} = {"id": "100", "name": "sewwhyslvh", "createDate": "1473633063279", "email": "sewwhyslvh@email.com", "gender": "F", "socialSecurityNumber": "681219735"}</msg>
<status status="PASS" endtime="20170529 08:52:02.237" starttime="20170529 08:52:02.224"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.239" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.239" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.239" starttime="20170529 08:52:02.238"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.240" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.240" starttime="20170529 08:52:02.240"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.241" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.241" starttime="20170529 08:52:02.241"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.243" level="INFO">Request body set to "{"id": "100", "name": "sewwhyslvh", "createDate": "1473633063279", "email": "sewwhyslvh@email.com", "gender": "F", "socialSecurityNumber": "681219735"}".</msg>
<status status="PASS" endtime="20170529 08:52:02.243" starttime="20170529 08:52:02.242"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.245" starttime="20170529 08:52:02.243"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.255" starttime="20170529 08:52:02.245"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.256" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.256" starttime="20170529 08:52:02.255"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.258" starttime="20170529 08:52:02.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.258" starttime="20170529 08:52:02.258"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.259" starttime="20170529 08:52:02.223"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.259" critical="yes" starttime="20170529 08:52:02.223"></status>
</test>
<test id="s1-s1-s1-t3" name="Test get all clients">
<kw name="Get all clients" library="client_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.261" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.262" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.262" starttime="20170529 08:52:02.261"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.267" starttime="20170529 08:52:02.262"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.269" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.269" starttime="20170529 08:52:02.268"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.271" level="INFO">${response_body} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170529 08:52:02.271" starttime="20170529 08:52:02.269"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.272" starttime="20170529 08:52:02.271"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nShowing all clients in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.273" starttime="20170529 08:52:02.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.275" starttime="20170529 08:52:02.274"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.275" starttime="20170529 08:52:02.260"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.276" critical="yes" starttime="20170529 08:52:02.260"></status>
</test>
<test id="s1-s1-s1-t4" name="Test get specific client from id">
<kw name="Get specific client from id" library="client_operations">
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_to_get}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.279" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.280" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.280" starttime="20170529 08:52:02.278"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.286" starttime="20170529 08:52:02.281"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.287" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.287" starttime="20170529 08:52:02.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.288" starttime="20170529 08:52:02.288"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.289" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170529 08:52:02.290" starttime="20170529 08:52:02.288"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.294" starttime="20170529 08:52:02.290"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.295" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.296" starttime="20170529 08:52:02.295"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.297" starttime="20170529 08:52:02.296"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.299" level="INFO">${body_second_request} = 20</msg>
<status status="PASS" endtime="20170529 08:52:02.299" starttime="20170529 08:52:02.297"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.300" level="INFO">${last_index} = 19</msg>
<status status="PASS" endtime="20170529 08:52:02.300" starttime="20170529 08:52:02.300"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.302" level="INFO">${json_id} = 28</msg>
<status status="PASS" endtime="20170529 08:52:02.302" starttime="20170529 08:52:02.301"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.304" starttime="20170529 08:52:02.303"></status>
</kw>
<msg timestamp="20170529 08:52:02.304" level="INFO">${id_to_get} = 28</msg>
<status status="PASS" endtime="20170529 08:52:02.305" starttime="20170529 08:52:02.278"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.305" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.306" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.306" starttime="20170529 08:52:02.305"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.307" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.307" starttime="20170529 08:52:02.306"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.308" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.308" starttime="20170529 08:52:02.307"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_client_endpoint}${id_to_get}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.311" starttime="20170529 08:52:02.308"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.312" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.313" starttime="20170529 08:52:02.312"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.313" level="INFO">${response_body} = {"id":28,"name":"sewwhyslvh","createDate":1473633063279,"email":"sewwhyslvh@email.com","gender":"F","socialSecurityNumber":"681219735"}</msg>
<status status="PASS" endtime="20170529 08:52:02.313" starttime="20170529 08:52:02.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.314" starttime="20170529 08:52:02.314"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe last added client in the database is:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.316" starttime="20170529 08:52:02.315"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.317" starttime="20170529 08:52:02.277"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.322" critical="yes" starttime="20170529 08:52:02.276"></status>
</test>
<test id="s1-s1-s1-t5" name="Test create and delete client">
<kw name="Delete client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170529 08:52:02.327" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170529 08:52:02.327" starttime="20170529 08:52:02.326"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170529 08:52:02.327" level="INFO">${name} = iwuowskffn</msg>
<status status="PASS" endtime="20170529 08:52:02.328" starttime="20170529 08:52:02.327"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170529 08:52:02.328" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170529 08:52:02.329" starttime="20170529 08:52:02.328"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170529 08:52:02.330" level="INFO">${email} = iwuowskffn@email.com</msg>
<status status="PASS" endtime="20170529 08:52:02.331" starttime="20170529 08:52:02.329"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170529 08:52:02.332" level="INFO">${socialSecurityNumber} = 506092092</msg>
<status status="PASS" endtime="20170529 08:52:02.332" starttime="20170529 08:52:02.331"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170529 08:52:02.334" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170529 08:52:02.334" starttime="20170529 08:52:02.333"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170529 08:52:02.335" level="INFO">${dictionary} = {u'id': u'100', u'name': u'iwuowskffn', u'createDate': u'1473633063279', u'email': u'iwuowskffn@email.com', u'gender': u'F', u'socialSecurityNumber': u'506092092'}</msg>
<status status="PASS" endtime="20170529 08:52:02.335" starttime="20170529 08:52:02.334"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170529 08:52:02.337" level="INFO">${client_json} = {"id": "100", "name": "iwuowskffn", "createDate": "1473633063279", "email": "iwuowskffn@email.com", "gender": "F", "socialSecurityNumber": "506092092"}</msg>
<status status="PASS" endtime="20170529 08:52:02.337" starttime="20170529 08:52:02.336"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.338" starttime="20170529 08:52:02.337"></status>
</kw>
<msg timestamp="20170529 08:52:02.339" level="INFO">${request_body} = {"id": "100", "name": "iwuowskffn", "createDate": "1473633063279", "email": "iwuowskffn@email.com", "gender": "F", "socialSecurityNumber": "506092092"}</msg>
<status status="PASS" endtime="20170529 08:52:02.339" starttime="20170529 08:52:02.325"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.340" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.340" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.340" starttime="20170529 08:52:02.340"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.342" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.342" starttime="20170529 08:52:02.341"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.343" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.343" starttime="20170529 08:52:02.342"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.349" level="INFO">Request body set to "{"id": "100", "name": "iwuowskffn", "createDate": "1473633063279", "email": "iwuowskffn@email.com", "gender": "F", "socialSecurityNumber": "506092092"}".</msg>
<status status="PASS" endtime="20170529 08:52:02.349" starttime="20170529 08:52:02.344"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.351" starttime="20170529 08:52:02.350"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.358" starttime="20170529 08:52:02.351"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.360" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.361" starttime="20170529 08:52:02.359"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.362" starttime="20170529 08:52:02.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.363" starttime="20170529 08:52:02.362"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.383" starttime="20170529 08:52:02.325"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.384" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.384" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.385" starttime="20170529 08:52:02.384"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.391" starttime="20170529 08:52:02.385"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.392" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.392" starttime="20170529 08:52:02.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.393" starttime="20170529 08:52:02.393"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.395" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170529 08:52:02.395" starttime="20170529 08:52:02.394"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.401" starttime="20170529 08:52:02.396"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.408" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.409" starttime="20170529 08:52:02.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.410" starttime="20170529 08:52:02.409"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.411" level="INFO">${body_second_request} = 21</msg>
<status status="PASS" endtime="20170529 08:52:02.412" starttime="20170529 08:52:02.411"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.413" level="INFO">${last_index} = 20</msg>
<status status="PASS" endtime="20170529 08:52:02.413" starttime="20170529 08:52:02.412"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.414" level="INFO">${json_id} = 29</msg>
<status status="PASS" endtime="20170529 08:52:02.415" starttime="20170529 08:52:02.413"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.416" starttime="20170529 08:52:02.415"></status>
</kw>
<msg timestamp="20170529 08:52:02.417" level="INFO">${id_of_created_client} = 29</msg>
<status status="PASS" endtime="20170529 08:52:02.418" starttime="20170529 08:52:02.383"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.420" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.420" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.420" starttime="20170529 08:52:02.418"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.421" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.421" starttime="20170529 08:52:02.421"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.422" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.423" starttime="20170529 08:52:02.422"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.428" starttime="20170529 08:52:02.423"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.430" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.430" starttime="20170529 08:52:02.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.436" starttime="20170529 08:52:02.435"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.439" starttime="20170529 08:52:02.437"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nClient with id: ${id_of_created_client} was succesfully deleted!</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.440" starttime="20170529 08:52:02.439"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.440" starttime="20170529 08:52:02.323"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.441" critical="yes" starttime="20170529 08:52:02.322"></status>
</test>
<test id="s1-s1-s1-t6" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170529 08:52:02.446" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170529 08:52:02.446" starttime="20170529 08:52:02.445"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170529 08:52:02.447" level="INFO">${name} = ginpgxluks</msg>
<status status="PASS" endtime="20170529 08:52:02.447" starttime="20170529 08:52:02.446"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170529 08:52:02.448" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170529 08:52:02.448" starttime="20170529 08:52:02.447"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170529 08:52:02.449" level="INFO">${email} = ginpgxluks@email.com</msg>
<status status="PASS" endtime="20170529 08:52:02.449" starttime="20170529 08:52:02.448"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170529 08:52:02.450" level="INFO">${socialSecurityNumber} = 248497927</msg>
<status status="PASS" endtime="20170529 08:52:02.450" starttime="20170529 08:52:02.449"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170529 08:52:02.451" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170529 08:52:02.451" starttime="20170529 08:52:02.451"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170529 08:52:02.452" level="INFO">${dictionary} = {u'id': u'100', u'name': u'ginpgxluks', u'createDate': u'1473633063279', u'email': u'ginpgxluks@email.com', u'gender': u'M', u'socialSecurityNumber': u'248497927'}</msg>
<status status="PASS" endtime="20170529 08:52:02.453" starttime="20170529 08:52:02.451"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170529 08:52:02.454" level="INFO">${client_json} = {"id": "100", "name": "ginpgxluks", "createDate": "1473633063279", "email": "ginpgxluks@email.com", "gender": "M", "socialSecurityNumber": "248497927"}</msg>
<status status="PASS" endtime="20170529 08:52:02.454" starttime="20170529 08:52:02.453"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nRandomly generated client Json:\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.455" starttime="20170529 08:52:02.454"></status>
</kw>
<msg timestamp="20170529 08:52:02.455" level="INFO">${request_body} = {"id": "100", "name": "ginpgxluks", "createDate": "1473633063279", "email": "ginpgxluks@email.com", "gender": "M", "socialSecurityNumber": "248497927"}</msg>
<status status="PASS" endtime="20170529 08:52:02.456" starttime="20170529 08:52:02.444"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.457" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.458" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.458" starttime="20170529 08:52:02.456"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.465" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.466" starttime="20170529 08:52:02.465"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.471" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.471" starttime="20170529 08:52:02.466"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.472" level="INFO">Request body set to "{"id": "100", "name": "ginpgxluks", "createDate": "1473633063279", "email": "ginpgxluks@email.com", "gender": "M", "socialSecurityNumber": "248497927"}".</msg>
<status status="PASS" endtime="20170529 08:52:02.475" starttime="20170529 08:52:02.472"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nCreating client with the randomized data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.476" starttime="20170529 08:52:02.476"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.489" starttime="20170529 08:52:02.477"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.490" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.490" starttime="20170529 08:52:02.489"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.491" starttime="20170529 08:52:02.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.492" starttime="20170529 08:52:02.492"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.493" starttime="20170529 08:52:02.443"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.494" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.494" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.494" starttime="20170529 08:52:02.494"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.499" starttime="20170529 08:52:02.495"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.500" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.501" starttime="20170529 08:52:02.500"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.502" starttime="20170529 08:52:02.501"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.504" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170529 08:52:02.504" starttime="20170529 08:52:02.502"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.509" starttime="20170529 08:52:02.504"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.511" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.511" starttime="20170529 08:52:02.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.512" starttime="20170529 08:52:02.511"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.512" level="INFO">${body_second_request} = 21</msg>
<status status="PASS" endtime="20170529 08:52:02.512" starttime="20170529 08:52:02.512"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.513" level="INFO">${last_index} = 20</msg>
<status status="PASS" endtime="20170529 08:52:02.514" starttime="20170529 08:52:02.513"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.515" level="INFO">${json_id} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.515" starttime="20170529 08:52:02.514"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.516" starttime="20170529 08:52:02.515"></status>
</kw>
<msg timestamp="20170529 08:52:02.516" level="INFO">${id_of_created_client} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.516" starttime="20170529 08:52:02.493"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.519" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.519" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.519" starttime="20170529 08:52:02.518"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.530" starttime="20170529 08:52:02.520"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.531" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.531" starttime="20170529 08:52:02.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.532" starttime="20170529 08:52:02.531"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.534" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170529 08:52:02.534" starttime="20170529 08:52:02.532"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.538" starttime="20170529 08:52:02.534"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.540" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.540" starttime="20170529 08:52:02.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.541" starttime="20170529 08:52:02.541"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.542" level="INFO">${body_second_request} = 21</msg>
<status status="PASS" endtime="20170529 08:52:02.543" starttime="20170529 08:52:02.542"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.544" level="INFO">${last_index} = 20</msg>
<status status="PASS" endtime="20170529 08:52:02.544" starttime="20170529 08:52:02.543"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.546" level="INFO">${json_id} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.546" starttime="20170529 08:52:02.545"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.547" starttime="20170529 08:52:02.546"></status>
</kw>
<msg timestamp="20170529 08:52:02.547" level="INFO">${id} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.547" starttime="20170529 08:52:02.517"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170529 08:52:02.548" level="INFO">${name} = enafitpfal</msg>
<status status="PASS" endtime="20170529 08:52:02.548" starttime="20170529 08:52:02.548"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170529 08:52:02.549" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170529 08:52:02.549" starttime="20170529 08:52:02.549"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170529 08:52:02.550" level="INFO">${email} = enafitpfal@email.com</msg>
<status status="PASS" endtime="20170529 08:52:02.551" starttime="20170529 08:52:02.550"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170529 08:52:02.551" level="INFO">${socialSecurityNumber} = 537129654</msg>
<status status="PASS" endtime="20170529 08:52:02.551" starttime="20170529 08:52:02.551"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170529 08:52:02.552" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170529 08:52:02.552" starttime="20170529 08:52:02.552"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170529 08:52:02.554" level="INFO">${dictionary} = {u'id': '30', u'name': u'enafitpfal', u'createDate': u'1473633063279', u'email': u'enafitpfal@email.com', u'gender': u'M', u'socialSecurityNumber': u'537129654'}</msg>
<status status="PASS" endtime="20170529 08:52:02.554" starttime="20170529 08:52:02.553"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170529 08:52:02.555" level="INFO">${update_client_json} = {"id": "30", "name": "enafitpfal", "createDate": "1473633063279", "email": "enafitpfal@email.com", "gender": "M", "socialSecurityNumber": "537129654"}</msg>
<status status="PASS" endtime="20170529 08:52:02.555" starttime="20170529 08:52:02.554"></status>
</kw>
<msg timestamp="20170529 08:52:02.561" level="INFO">${request_body_new_client_data} = {"id": "30", "name": "enafitpfal", "createDate": "1473633063279", "email": "enafitpfal@email.com", "gender": "M", "socialSecurityNumber": "537129654"}</msg>
<status status="PASS" endtime="20170529 08:52:02.561" starttime="20170529 08:52:02.517"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe new client data is:\n${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.563" starttime="20170529 08:52:02.562"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.564" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.564" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.564" starttime="20170529 08:52:02.563"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.566" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.566" starttime="20170529 08:52:02.565"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.570" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.571" starttime="20170529 08:52:02.568"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.572" level="INFO">Request body set to "{"id": "30", "name": "enafitpfal", "createDate": "1473633063279", "email": "enafitpfal@email.com", "gender": "M", "socialSecurityNumber": "537129654"}".</msg>
<status status="PASS" endtime="20170529 08:52:02.572" starttime="20170529 08:52:02.571"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.578" starttime="20170529 08:52:02.573"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nUpdating client with data:\n${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.580" starttime="20170529 08:52:02.579"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.581" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.582" starttime="20170529 08:52:02.581"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.583" starttime="20170529 08:52:02.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.583" starttime="20170529 08:52:02.583"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.584" starttime="20170529 08:52:02.442"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.584" critical="yes" starttime="20170529 08:52:02.441"></status>
</test>
<test id="s1-s1-s1-t7" name="Get bedrooms">
<kw name="Get all bedrooms" library="bedroom_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.587" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.587" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.588" starttime="20170529 08:52:02.587"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.592" starttime="20170529 08:52:02.588"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.593" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.594" starttime="20170529 08:52:02.593"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.595" level="INFO">${response_body} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170529 08:52:02.595" starttime="20170529 08:52:02.594"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.596" starttime="20170529 08:52:02.595"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nShowing all bedrooms in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.597" starttime="20170529 08:52:02.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.599" starttime="20170529 08:52:02.598"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.599" starttime="20170529 08:52:02.585"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.600" critical="yes" starttime="20170529 08:52:02.585"></status>
</test>
<test id="s1-s1-s1-t8" name="Test create new bedroom">
<kw name="Create new bedroom" library="bedroom_operations">
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${bedroom_json1}</arg>
<arg>${bedroom_json2}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.603" level="INFO">${request_body} = {"id":100,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170529 08:52:02.603" starttime="20170529 08:52:02.602"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.604" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.604" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.605" starttime="20170529 08:52:02.603"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.605" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.606" starttime="20170529 08:52:02.605"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.607" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.607" starttime="20170529 08:52:02.606"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.608" level="INFO">Request body set to "{"id":100,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}".</msg>
<status status="PASS" endtime="20170529 08:52:02.609" starttime="20170529 08:52:02.607"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating bedroom with data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.610" starttime="20170529 08:52:02.609"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.618" starttime="20170529 08:52:02.611"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.620" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.620" starttime="20170529 08:52:02.619"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.621" starttime="20170529 08:52:02.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.622" starttime="20170529 08:52:02.622"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.622" starttime="20170529 08:52:02.601"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.623" critical="yes" starttime="20170529 08:52:02.600"></status>
</test>
<test id="s1-s1-s1-t9" name="Test get last bedroom from database">
<kw name="Get specific bedroom from id" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_last_bedroom_in_database}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.626" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.626" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.627" starttime="20170529 08:52:02.626"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.631" starttime="20170529 08:52:02.627"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.632" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.632" starttime="20170529 08:52:02.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.633" starttime="20170529 08:52:02.633"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.634" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170529 08:52:02.634" starttime="20170529 08:52:02.634"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.639" starttime="20170529 08:52:02.635"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.640" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.641" starttime="20170529 08:52:02.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.642" starttime="20170529 08:52:02.641"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.643" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170529 08:52:02.644" starttime="20170529 08:52:02.642"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.645" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170529 08:52:02.645" starttime="20170529 08:52:02.644"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.646" level="INFO">${json_id} = 16</msg>
<status status="PASS" endtime="20170529 08:52:02.646" starttime="20170529 08:52:02.645"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.647" starttime="20170529 08:52:02.647"></status>
</kw>
<msg timestamp="20170529 08:52:02.648" level="INFO">${id_last_bedroom_in_database} = 16</msg>
<status status="PASS" endtime="20170529 08:52:02.648" starttime="20170529 08:52:02.625"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.649" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.649" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.649" starttime="20170529 08:52:02.648"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_bedroom_endpoint}${id_last_bedroom_in_database}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.653" starttime="20170529 08:52:02.650"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.654" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.654" starttime="20170529 08:52:02.653"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.655" level="INFO">${response_body} = {"id":16,"description":"testroom","floor":2,"number":501,"priceDaily":300,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170529 08:52:02.655" starttime="20170529 08:52:02.654"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nResponse status:\n${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.656" starttime="20170529 08:52:02.655"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nLast bedrooms in database:\n${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.657" starttime="20170529 08:52:02.656"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.658" starttime="20170529 08:52:02.657"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.659" starttime="20170529 08:52:02.624"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.659" critical="yes" starttime="20170529 08:52:02.623"></status>
</test>
<test id="s1-s1-s1-t10" name="Test Update bedroom">
<kw name="Update previously created bedroom" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_of_last_created_bedroom}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.662" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.662" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.663" starttime="20170529 08:52:02.662"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.667" starttime="20170529 08:52:02.663"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.669" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.669" starttime="20170529 08:52:02.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.670" starttime="20170529 08:52:02.669"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.671" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170529 08:52:02.671" starttime="20170529 08:52:02.671"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.675" starttime="20170529 08:52:02.672"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.677" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.677" starttime="20170529 08:52:02.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.678" starttime="20170529 08:52:02.677"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.679" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170529 08:52:02.679" starttime="20170529 08:52:02.678"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.680" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170529 08:52:02.681" starttime="20170529 08:52:02.680"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.682" level="INFO">${json_id} = 16</msg>
<status status="PASS" endtime="20170529 08:52:02.682" starttime="20170529 08:52:02.681"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.683" starttime="20170529 08:52:02.682"></status>
</kw>
<msg timestamp="20170529 08:52:02.683" level="INFO">${id_of_last_created_bedroom} = 16</msg>
<status status="PASS" endtime="20170529 08:52:02.683" starttime="20170529 08:52:02.661"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>{"id":${id_of_last_created_bedroom},"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},</arg>
<arg>"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.684" level="INFO">${request_body} = {"id":16,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170529 08:52:02.685" starttime="20170529 08:52:02.684"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.686" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.686" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.686" starttime="20170529 08:52:02.685"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.687" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.687" starttime="20170529 08:52:02.687"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.688" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.688" starttime="20170529 08:52:02.687"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.689" level="INFO">Request body set to "{"id":16,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}".</msg>
<status status="PASS" endtime="20170529 08:52:02.689" starttime="20170529 08:52:02.689"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.696" starttime="20170529 08:52:02.690"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nUpdating bedroom with data:\n${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.699" starttime="20170529 08:52:02.697"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.700" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.700" starttime="20170529 08:52:02.699"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.701" starttime="20170529 08:52:02.700"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.703" starttime="20170529 08:52:02.702"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.703" starttime="20170529 08:52:02.660"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.704" critical="yes" starttime="20170529 08:52:02.660"></status>
</test>
<test id="s1-s1-s1-t11" name="Test Delete last created bedroom">
<kw name="Delete bedroom" library="bedroom_operations">
<kw name="Get id of last created bedroom" library="bedroom_operations">
<assign>
<var>${id_of_last_created_bedroom}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.707" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.707" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.707" starttime="20170529 08:52:02.706"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_bedroom_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.711" starttime="20170529 08:52:02.707"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.712" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.712" starttime="20170529 08:52:02.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.713" starttime="20170529 08:52:02.712"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.714" level="INFO">${body_first_request} = [{"id":2,"description":"BEDROOM ACCESSIBLE","floor":1,"number":200,"priceDaily":250.00,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":6,"name":"WHEELCHAIR ACCESS"}},{"id":5,...</msg>
<status status="PASS" endtime="20170529 08:52:02.714" starttime="20170529 08:52:02.713"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_bedroom_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.717" starttime="20170529 08:52:02.714"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.727" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.727" starttime="20170529 08:52:02.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.730" starttime="20170529 08:52:02.728"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.732" level="INFO">${body_second_request} = 7</msg>
<status status="PASS" endtime="20170529 08:52:02.732" starttime="20170529 08:52:02.731"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.733" level="INFO">${last_index} = 6</msg>
<status status="PASS" endtime="20170529 08:52:02.733" starttime="20170529 08:52:02.733"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.734" level="INFO">${json_id} = 16</msg>
<status status="PASS" endtime="20170529 08:52:02.734" starttime="20170529 08:52:02.734"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}ID of last bedroom is: ${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.736" starttime="20170529 08:52:02.735"></status>
</kw>
<msg timestamp="20170529 08:52:02.736" level="INFO">${id_of_last_created_bedroom} = 16</msg>
<status status="PASS" endtime="20170529 08:52:02.736" starttime="20170529 08:52:02.706"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.737" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.737" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.737" starttime="20170529 08:52:02.736"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.738" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.739" starttime="20170529 08:52:02.738"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.740" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.740" starttime="20170529 08:52:02.739"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_specific_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.746" starttime="20170529 08:52:02.741"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.753" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.753" starttime="20170529 08:52:02.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.754" starttime="20170529 08:52:02.754"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.757" level="INFO">${body_first_request} = {"id":16,"description":"testroom","floor":2,"number":401,"priceDaily":500,"bedroomStatusId":{"id":1,"code":0,"name":"VACANT"},"typeBedroomId":{"id":5,"name":"TOP BED KING"}}</msg>
<status status="PASS" endtime="20170529 08:52:02.757" starttime="20170529 08:52:02.756"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_bedroom_endpoint}${id_of_last_created_bedroom}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.763" starttime="20170529 08:52:02.757"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.764" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.764" starttime="20170529 08:52:02.764"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${bedroom_that was deleted}</var>
</assign>
<msg timestamp="20170529 08:52:02.765" level="INFO">${bedroom_that was deleted} = </msg>
<status status="PASS" endtime="20170529 08:52:02.765" starttime="20170529 08:52:02.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.767" starttime="20170529 08:52:02.765"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\nThe following bedroom was deleted:\n${body_first_request}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.768" starttime="20170529 08:52:02.768"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.771" starttime="20170529 08:52:02.705"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.771" critical="yes" starttime="20170529 08:52:02.704"></status>
</test>
<test id="s1-s1-s1-t12" name="Get all users">
<kw name="Get All Users" library="user_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.774" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.774" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.774" starttime="20170529 08:52:02.773"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_user_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.779" starttime="20170529 08:52:02.774"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.780" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.781" starttime="20170529 08:52:02.780"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.782" level="INFO">${response_body} = [{"id":13,"login":"Yanne","password":"1966e694bad90686516f99cdf432800fdca39290","typeUser":2,"clientId":{"id":5,"name":"YANNE","createDate":1473249124445,"email":"yanne_alencar@hotmail.com","gender":"...</msg>
<status status="PASS" endtime="20170529 08:52:02.782" starttime="20170529 08:52:02.781"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.783" starttime="20170529 08:52:02.783"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.784" starttime="20170529 08:52:02.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.785" starttime="20170529 08:52:02.784"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.786" starttime="20170529 08:52:02.773"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.786" critical="yes" starttime="20170529 08:52:02.772"></status>
</test>
<test id="s1-s1-s1-t13" name="Get total of users">
<kw name="Get Total Of Users" library="user_operations">
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.789" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.789" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.789" starttime="20170529 08:52:02.788"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_user_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.793" starttime="20170529 08:52:02.789"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.794" level="INFO">${response_status} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.794" starttime="20170529 08:52:02.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.795" starttime="20170529 08:52:02.794"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${response_body}</var>
</assign>
<msg timestamp="20170529 08:52:02.795" level="INFO">${response_body} = 5</msg>
<status status="PASS" endtime="20170529 08:52:02.796" starttime="20170529 08:52:02.795"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>Total number of users:</arg>
</arguments>
<assign>
<var>${info_text}</var>
</assign>
<msg timestamp="20170529 08:52:02.796" level="INFO">${info_text} = Total number of users:</msg>
<status status="PASS" endtime="20170529 08:52:02.796" starttime="20170529 08:52:02.796"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n${info_text}${response_body}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.802" starttime="20170529 08:52:02.801"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.802" starttime="20170529 08:52:02.787"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.804" critical="yes" starttime="20170529 08:52:02.786"></status>
</test>
<test id="s1-s1-s1-t14" name="Create a user">
<kw name="Create A User" library="user_operations">
<kw name="Generate Random User and Client Data" library="user_operations">
<assign>
<var>${client_json}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>50</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170529 08:52:02.807" level="INFO">${id} = 50</msg>
<status status="PASS" endtime="20170529 08:52:02.808" starttime="20170529 08:52:02.807"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${login}</var>
</assign>
<msg timestamp="20170529 08:52:02.808" level="INFO">${login} = znnqisvyds</msg>
<status status="PASS" endtime="20170529 08:52:02.809" starttime="20170529 08:52:02.808"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20170529 08:52:02.809" level="INFO">${password} = 7617946269</msg>
<status status="PASS" endtime="20170529 08:52:02.810" starttime="20170529 08:52:02.809"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${typeUser}</var>
</assign>
<msg timestamp="20170529 08:52:02.810" level="INFO">${typeUser} = 2</msg>
<status status="PASS" endtime="20170529 08:52:02.810" starttime="20170529 08:52:02.810"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.812" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.812" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.812" starttime="20170529 08:52:02.811"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.830" starttime="20170529 08:52:02.812"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.831" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.831" starttime="20170529 08:52:02.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.832" starttime="20170529 08:52:02.831"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.833" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170529 08:52:02.833" starttime="20170529 08:52:02.832"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.838" starttime="20170529 08:52:02.834"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.840" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.840" starttime="20170529 08:52:02.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.842" starttime="20170529 08:52:02.841"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.843" level="INFO">${body_second_request} = 21</msg>
<status status="PASS" endtime="20170529 08:52:02.843" starttime="20170529 08:52:02.842"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.845" level="INFO">${last_index} = 20</msg>
<status status="PASS" endtime="20170529 08:52:02.845" starttime="20170529 08:52:02.844"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.847" level="INFO">${json_id} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.847" starttime="20170529 08:52:02.845"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.848" starttime="20170529 08:52:02.848"></status>
</kw>
<msg timestamp="20170529 08:52:02.849" level="INFO">${clientId} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.849" starttime="20170529 08:52:02.811"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170529 08:52:02.850" level="INFO">${name} = HOGKE</msg>
<status status="PASS" endtime="20170529 08:52:02.850" starttime="20170529 08:52:02.849"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170529 08:52:02.851" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170529 08:52:02.851" starttime="20170529 08:52:02.850"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${login}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170529 08:52:02.852" level="INFO">${email} = znnqisvyds@email.com</msg>
<status status="PASS" endtime="20170529 08:52:02.852" starttime="20170529 08:52:02.851"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170529 08:52:02.853" level="INFO">${gender} = F</msg>
<status status="PASS" endtime="20170529 08:52:02.853" starttime="20170529 08:52:02.852"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170529 08:52:02.854" level="INFO">${socialSecurityNumber} = 0080844019</msg>
<status status="PASS" endtime="20170529 08:52:02.854" starttime="20170529 08:52:02.853"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1</arg>
</arguments>
<assign>
<var>${userStatusId}</var>
</assign>
<msg timestamp="20170529 08:52:02.855" level="INFO">${userStatusId} = 1</msg>
<status status="PASS" endtime="20170529 08:52:02.855" starttime="20170529 08:52:02.854"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>20</arg>
</arguments>
<assign>
<var>${code}</var>
</assign>
<msg timestamp="20170529 08:52:02.856" level="INFO">${code} = 2</msg>
<status status="PASS" endtime="20170529 08:52:02.856" starttime="20170529 08:52:02.855"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ACTIVE</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170529 08:52:02.856" level="INFO">${statusName} = ACTIVE</msg>
<status status="PASS" endtime="20170529 08:52:02.857" starttime="20170529 08:52:02.856"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${clientId}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary_first}</var>
</assign>
<msg timestamp="20170529 08:52:02.858" level="INFO">${dictionary_first} = {u'id': '30', u'name': u'HOGKE', u'createDate': u'1473633063279', u'email': u'znnqisvyds@email.com', u'gender': u'F', u'socialSecurityNumber': u'0080844019'}</msg>
<status status="PASS" endtime="20170529 08:52:02.858" starttime="20170529 08:52:02.857"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${userStatusId}</arg>
<arg>code=${code}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_second}</var>
</assign>
<msg timestamp="20170529 08:52:02.859" level="INFO">${dictionary_second} = {u'id': u'1', u'code': u'2', u'name': u'ACTIVE'}</msg>
<status status="PASS" endtime="20170529 08:52:02.860" starttime="20170529 08:52:02.859"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>login=${login}</arg>
<arg>password=${password}</arg>
<arg>typeUser=${typeUser}</arg>
<arg>clientId=${dictionary_first}</arg>
<arg>userStatusId=${dictionary_second}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170529 08:52:02.867" level="INFO">${dictionary} = {u'id': u'50', u'login': u'znnqisvyds', u'password': u'7617946269', u'typeUser': u'2', u'clientId': {u'name': u'HOGKE', u'gender': u'F', u'createDate': u'1473633063279', u'id': '30', u'socialSecurityN...</msg>
<status status="PASS" endtime="20170529 08:52:02.867" starttime="20170529 08:52:02.860"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${user_json}</var>
</assign>
<msg timestamp="20170529 08:52:02.868" level="INFO">${user_json} = {"id": "50", "login": "znnqisvyds", "password": "7617946269", "typeUser": "2", "clientId": {"id": "30", "name": "HOGKE", "createDate": "1473633063279", "email": "znnqisvyds@email.com", "gender": "F", ...</msg>
<status status="PASS" endtime="20170529 08:52:02.868" starttime="20170529 08:52:02.867"></status>
</kw>
<msg timestamp="20170529 08:52:02.868" level="INFO">${client_json} = {"id": "50", "login": "znnqisvyds", "password": "7617946269", "typeUser": "2", "clientId": {"id": "30", "name": "HOGKE", "createDate": "1473633063279", "email": "znnqisvyds@email.com", "gender": "F", ...</msg>
<status status="PASS" endtime="20170529 08:52:02.869" starttime="20170529 08:52:02.806"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.869" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.870" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.870" starttime="20170529 08:52:02.869"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.871" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.871" starttime="20170529 08:52:02.870"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.871" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.872" starttime="20170529 08:52:02.871"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${client_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.872" level="INFO">Request body set to "{"id": "50", "login": "znnqisvyds", "password": "7617946269", "typeUser": "2", "clientId": {"id": "30", "name": "HOGKE", "createDate": "1473633063279", "email": "znnqisvyds@email.com", "gender": "F", "socialSecurityNumber": "0080844019"}, "userStatusId": {"id": "1", "code": "2", "name": "ACTIVE"}}".</msg>
<status status="PASS" endtime="20170529 08:52:02.872" starttime="20170529 08:52:02.872"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>\n${client_json}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.873" starttime="20170529 08:52:02.873"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_user_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.881" starttime="20170529 08:52:02.874"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.882" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.882" starttime="20170529 08:52:02.881"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.882" starttime="20170529 08:52:02.882"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.883" starttime="20170529 08:52:02.883"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.884" starttime="20170529 08:52:02.806"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.884" critical="yes" starttime="20170529 08:52:02.805"></status>
</test>
<test id="s1-s1-s1-t15" name="Update a user">
<kw name="Update A User" library="user_operations">
<kw name="Get Last Created User Id" library="user_operations">
<assign>
<var>${last_user_id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.886" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.887" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.887" starttime="20170529 08:52:02.886"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_user_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.898" starttime="20170529 08:52:02.887"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status1}</var>
</assign>
<msg timestamp="20170529 08:52:02.899" level="INFO">${response_status1} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.899" starttime="20170529 08:52:02.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status1}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.900" starttime="20170529 08:52:02.900"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${request_body1}</var>
</assign>
<msg timestamp="20170529 08:52:02.901" level="INFO">${request_body1} = [{"id":13,"login":"Yanne","password":"1966e694bad90686516f99cdf432800fdca39290","typeUser":2,"clientId":{"id":5,"name":"YANNE","createDate":1473249124445,"email":"yanne_alencar@hotmail.com","gender":"...</msg>
<status status="PASS" endtime="20170529 08:52:02.902" starttime="20170529 08:52:02.900"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_user_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.909" starttime="20170529 08:52:02.902"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status2}</var>
</assign>
<msg timestamp="20170529 08:52:02.910" level="INFO">${response_status2} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.911" starttime="20170529 08:52:02.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status2}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.912" starttime="20170529 08:52:02.912"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${request_body2}</var>
</assign>
<msg timestamp="20170529 08:52:02.913" level="INFO">${request_body2} = 6</msg>
<status status="PASS" endtime="20170529 08:52:02.913" starttime="20170529 08:52:02.913"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${request_body2}-1</arg>
</arguments>
<assign>
<var>${last_created_user}</var>
</assign>
<msg timestamp="20170529 08:52:02.914" level="INFO">${last_created_user} = 5</msg>
<status status="PASS" endtime="20170529 08:52:02.914" starttime="20170529 08:52:02.913"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${request_body1}</arg>
<arg>/${last_created_user}/id</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.915" level="INFO">${user_id} = 24</msg>
<status status="PASS" endtime="20170529 08:52:02.915" starttime="20170529 08:52:02.914"></status>
</kw>
<msg timestamp="20170529 08:52:02.915" level="INFO">${last_user_id} = 24</msg>
<status status="PASS" endtime="20170529 08:52:02.916" starttime="20170529 08:52:02.885"></status>
</kw>
<kw name="Modify User and Client Data" library="user_operations">
<arguments>
<arg>${last_user_id}</arg>
</arguments>
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>${last_created_user_id}</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170529 08:52:02.917" level="INFO">${id} = 24</msg>
<status status="PASS" endtime="20170529 08:52:02.917" starttime="20170529 08:52:02.916"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${login}</var>
</assign>
<msg timestamp="20170529 08:52:02.918" level="INFO">${login} = jzrumwyklj</msg>
<status status="PASS" endtime="20170529 08:52:02.918" starttime="20170529 08:52:02.917"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${password}</var>
</assign>
<msg timestamp="20170529 08:52:02.919" level="INFO">${password} = 1849363186</msg>
<status status="PASS" endtime="20170529 08:52:02.919" starttime="20170529 08:52:02.918"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>2</arg>
</arguments>
<assign>
<var>${typeUser}</var>
</assign>
<msg timestamp="20170529 08:52:02.920" level="INFO">${typeUser} = 2</msg>
<status status="PASS" endtime="20170529 08:52:02.920" starttime="20170529 08:52:02.920"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${clientId}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.921" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.921" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.922" starttime="20170529 08:52:02.921"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.926" starttime="20170529 08:52:02.922"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.927" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.927" starttime="20170529 08:52:02.927"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.928" starttime="20170529 08:52:02.928"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.929" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170529 08:52:02.930" starttime="20170529 08:52:02.928"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.941" starttime="20170529 08:52:02.930"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.942" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:02.942" starttime="20170529 08:52:02.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.943" starttime="20170529 08:52:02.943"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170529 08:52:02.944" level="INFO">${body_second_request} = 21</msg>
<status status="PASS" endtime="20170529 08:52:02.944" starttime="20170529 08:52:02.944"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170529 08:52:02.946" level="INFO">${last_index} = 20</msg>
<status status="PASS" endtime="20170529 08:52:02.946" starttime="20170529 08:52:02.945"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170529 08:52:02.947" level="INFO">${json_id} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.947" starttime="20170529 08:52:02.946"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.948" starttime="20170529 08:52:02.947"></status>
</kw>
<msg timestamp="20170529 08:52:02.948" level="INFO">${clientId} = 30</msg>
<status status="PASS" endtime="20170529 08:52:02.949" starttime="20170529 08:52:02.920"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>5</arg>
<arg>[UPPER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170529 08:52:02.950" level="INFO">${name} = VFDJO</msg>
<status status="PASS" endtime="20170529 08:52:02.950" starttime="20170529 08:52:02.950"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170529 08:52:02.951" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170529 08:52:02.951" starttime="20170529 08:52:02.951"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${login}@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170529 08:52:02.952" level="INFO">${email} = jzrumwyklj@email.com</msg>
<status status="PASS" endtime="20170529 08:52:02.952" starttime="20170529 08:52:02.951"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170529 08:52:02.953" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170529 08:52:02.953" starttime="20170529 08:52:02.952"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170529 08:52:02.954" level="INFO">${socialSecurityNumber} = 4904135764</msg>
<status status="PASS" endtime="20170529 08:52:02.954" starttime="20170529 08:52:02.953"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>20</arg>
</arguments>
<assign>
<var>${userStatusId}</var>
</assign>
<msg timestamp="20170529 08:52:02.955" level="INFO">${userStatusId} = 2</msg>
<status status="PASS" endtime="20170529 08:52:02.955" starttime="20170529 08:52:02.954"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>20</arg>
</arguments>
<assign>
<var>${code}</var>
</assign>
<msg timestamp="20170529 08:52:02.955" level="INFO">${code} = 0</msg>
<status status="PASS" endtime="20170529 08:52:02.955" starttime="20170529 08:52:02.955"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>ACTIVE</arg>
</arguments>
<assign>
<var>${statusName}</var>
</assign>
<msg timestamp="20170529 08:52:02.956" level="INFO">${statusName} = ACTIVE</msg>
<status status="PASS" endtime="20170529 08:52:02.956" starttime="20170529 08:52:02.956"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${clientId}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary_first}</var>
</assign>
<msg timestamp="20170529 08:52:02.963" level="INFO">${dictionary_first} = {u'id': '30', u'name': u'VFDJO', u'createDate': u'1473633063279', u'email': u'jzrumwyklj@email.com', u'gender': u'M', u'socialSecurityNumber': u'4904135764'}</msg>
<status status="PASS" endtime="20170529 08:52:02.963" starttime="20170529 08:52:02.957"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${userStatusId}</arg>
<arg>code=${code}</arg>
<arg>name=${statusName}</arg>
</arguments>
<assign>
<var>${dictionary_second}</var>
</assign>
<msg timestamp="20170529 08:52:02.964" level="INFO">${dictionary_second} = {u'id': u'2', u'code': u'0', u'name': u'ACTIVE'}</msg>
<status status="PASS" endtime="20170529 08:52:02.965" starttime="20170529 08:52:02.964"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>login=${login}</arg>
<arg>password=${password}</arg>
<arg>typeUser=${typeUser}</arg>
<arg>clientId=${dictionary_first}</arg>
<arg>userStatusId=${dictionary_second}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170529 08:52:02.967" level="INFO">${dictionary} = {u'id': '24', u'login': u'jzrumwyklj', u'password': u'1849363186', u'typeUser': u'2', u'clientId': {u'name': u'VFDJO', u'gender': u'M', u'createDate': u'1473633063279', u'id': '30', u'socialSecurityNu...</msg>
<status status="PASS" endtime="20170529 08:52:02.967" starttime="20170529 08:52:02.965"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${user_json}</var>
</assign>
<msg timestamp="20170529 08:52:02.968" level="INFO">${user_json} = {"id": "24", "login": "jzrumwyklj", "password": "1849363186", "typeUser": "2", "clientId": {"id": "30", "name": "VFDJO", "createDate": "1473633063279", "email": "jzrumwyklj@email.com", "gender": "M", ...</msg>
<status status="PASS" endtime="20170529 08:52:02.968" starttime="20170529 08:52:02.968"></status>
</kw>
<msg timestamp="20170529 08:52:02.969" level="INFO">${request_body} = {"id": "24", "login": "jzrumwyklj", "password": "1849363186", "typeUser": "2", "clientId": {"id": "30", "name": "VFDJO", "createDate": "1473633063279", "email": "jzrumwyklj@email.com", "gender": "M", ...</msg>
<status status="PASS" endtime="20170529 08:52:02.969" starttime="20170529 08:52:02.916"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.971" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.971" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.971" starttime="20170529 08:52:02.970"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.973" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170529 08:52:02.973" starttime="20170529 08:52:02.972"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.974" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170529 08:52:02.974" starttime="20170529 08:52:02.973"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.974" level="INFO">Request body set to "{"id": "24", "login": "jzrumwyklj", "password": "1849363186", "typeUser": "2", "clientId": {"id": "30", "name": "VFDJO", "createDate": "1473633063279", "email": "jzrumwyklj@email.com", "gender": "M", "socialSecurityNumber": "4904135764"}, "userStatusId": {"id": "2", "code": "0", "name": "ACTIVE"}}".</msg>
<status status="PASS" endtime="20170529 08:52:02.975" starttime="20170529 08:52:02.974"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_user_endpoint}${last_user_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.981" starttime="20170529 08:52:02.975"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:02.983" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:02.983" starttime="20170529 08:52:02.982"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.984" starttime="20170529 08:52:02.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:02.985" starttime="20170529 08:52:02.984"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.986" starttime="20170529 08:52:02.885"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:02.992" critical="yes" starttime="20170529 08:52:02.884"></status>
</test>
<test id="s1-s1-s1-t16" name="Delete a user">
<kw name="Delete A User" library="user_operations">
<kw name="Get Last Created User Id" library="user_operations">
<assign>
<var>${last_user_id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:02.995" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:02.995" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:02.995" starttime="20170529 08:52:02.995"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_user_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:03.003" starttime="20170529 08:52:02.996"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status1}</var>
</assign>
<msg timestamp="20170529 08:52:03.004" level="INFO">${response_status1} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:03.004" starttime="20170529 08:52:03.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status1}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:03.005" starttime="20170529 08:52:03.005"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${request_body1}</var>
</assign>
<msg timestamp="20170529 08:52:03.006" level="INFO">${request_body1} = [{"id":13,"login":"Yanne","password":"1966e694bad90686516f99cdf432800fdca39290","typeUser":2,"clientId":{"id":5,"name":"YANNE","createDate":1473249124445,"email":"yanne_alencar@hotmail.com","gender":"...</msg>
<status status="PASS" endtime="20170529 08:52:03.006" starttime="20170529 08:52:03.005"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_user_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:03.014" starttime="20170529 08:52:03.007"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status2}</var>
</assign>
<msg timestamp="20170529 08:52:03.015" level="INFO">${response_status2} = 200 OK</msg>
<status status="PASS" endtime="20170529 08:52:03.015" starttime="20170529 08:52:03.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status2}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:03.016" starttime="20170529 08:52:03.016"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${request_body2}</var>
</assign>
<msg timestamp="20170529 08:52:03.017" level="INFO">${request_body2} = 6</msg>
<status status="PASS" endtime="20170529 08:52:03.017" starttime="20170529 08:52:03.016"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${request_body2}-1</arg>
</arguments>
<assign>
<var>${last_created_user}</var>
</assign>
<msg timestamp="20170529 08:52:03.018" level="INFO">${last_created_user} = 5</msg>
<status status="PASS" endtime="20170529 08:52:03.019" starttime="20170529 08:52:03.017"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${request_body1}</arg>
<arg>/${last_created_user}/id</arg>
</arguments>
<assign>
<var>${user_id}</var>
</assign>
<msg timestamp="20170529 08:52:03.020" level="INFO">${user_id} = 24</msg>
<status status="PASS" endtime="20170529 08:52:03.020" starttime="20170529 08:52:03.019"></status>
</kw>
<msg timestamp="20170529 08:52:03.021" level="INFO">${last_user_id} = 24</msg>
<status status="PASS" endtime="20170529 08:52:03.021" starttime="20170529 08:52:02.994"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170529 08:52:03.022" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170529 08:52:03.026" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170529 08:52:03.027" starttime="20170529 08:52:03.021"></status>
</kw>
<kw name="DELETE" library="HttpLibrary.HTTP">
<doc>Issues a HTTP DELETE request.</doc>
<arguments>
<arg>${delete_a_user_endpoint}${last_user_id}</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:03.032" starttime="20170529 08:52:03.027"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170529 08:52:03.033" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170529 08:52:03.033" starttime="20170529 08:52:03.033"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170529 08:52:03.037" starttime="20170529 08:52:03.034"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:03.038" starttime="20170529 08:52:02.994"></status>
</kw>
<status status="PASS" endtime="20170529 08:52:03.039" critical="yes" starttime="20170529 08:52:02.993"></status>
</test>
<status status="PASS" endtime="20170529 08:52:03.049" starttime="20170529 08:52:02.043"></status>
</suite>
<status status="PASS" endtime="20170529 08:52:03.060" starttime="20170529 08:52:02.032"></status>
</suite>
<status status="PASS" endtime="20170529 08:52:03.063" starttime="20170529 08:52:01.989"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="16">Critical Tests</stat>
<stat fail="0" pass="16">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="16">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="16">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="16">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
