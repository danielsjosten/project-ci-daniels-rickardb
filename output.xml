<?xml version="1.0" encoding="UTF-8"?>
<robot generated="20170522 09:25:43.986" generator="Robot 3.0.2 (Python 2.7.12 on linux2)">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb" id="s1" name="Project-Ci-Daniels-Rickardb">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend" id="s1-s1" name="Robotframework-Backend">
<suite source="/home/robot/workspace/project-ci-daniels-rickardb/robotframework-backend/00_Regression_tests.robot" id="s1-s1-s1" name="00 Regression tests">
<test id="s1-s1-s1-t1" name="Test create and update client">
<kw name="Update client" library="client_operations">
<kw name="Create a client" library="client_operations">
<kw name="Generate a random client" library="client_operations">
<assign>
<var>${request_body}</var>
</assign>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>100</arg>
</arguments>
<assign>
<var>${id}</var>
</assign>
<msg timestamp="20170522 09:25:44.206" level="INFO">${id} = 100</msg>
<status status="PASS" endtime="20170522 09:25:44.206" starttime="20170522 09:25:44.205"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 09:25:44.207" level="INFO">${name} = kypybmpyhh</msg>
<status status="PASS" endtime="20170522 09:25:44.208" starttime="20170522 09:25:44.207"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 09:25:44.209" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 09:25:44.209" starttime="20170522 09:25:44.208"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 09:25:44.210" level="INFO">${email} = kypybmpyhh@email.com</msg>
<status status="PASS" endtime="20170522 09:25:44.210" starttime="20170522 09:25:44.209"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 09:25:44.211" level="INFO">${socialSecurityNumber} = 540669377</msg>
<status status="PASS" endtime="20170522 09:25:44.211" starttime="20170522 09:25:44.210"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 09:25:44.212" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 09:25:44.212" starttime="20170522 09:25:44.211"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 09:25:44.214" level="INFO">${dictionary} = {u'id': u'100', u'name': u'kypybmpyhh', u'createDate': u'1473633063279', u'email': u'kypybmpyhh@email.com', u'gender': u'M', u'socialSecurityNumber': u'540669377'}</msg>
<status status="PASS" endtime="20170522 09:25:44.214" starttime="20170522 09:25:44.212"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${client_json}</var>
</assign>
<msg timestamp="20170522 09:25:44.215" level="INFO">${client_json} = {"id": "100", "name": "kypybmpyhh", "createDate": "1473633063279", "email": "kypybmpyhh@email.com", "gender": "M", "socialSecurityNumber": "540669377"}</msg>
<status status="PASS" endtime="20170522 09:25:44.215" starttime="20170522 09:25:44.215"></status>
</kw>
<msg timestamp="20170522 09:25:44.216" level="INFO">${request_body} = {"id": "100", "name": "kypybmpyhh", "createDate": "1473633063279", "email": "kypybmpyhh@email.com", "gender": "M", "socialSecurityNumber": "540669377"}</msg>
<status status="PASS" endtime="20170522 09:25:44.216" starttime="20170522 09:25:44.205"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.217" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 09:25:44.217" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 09:25:44.217" starttime="20170522 09:25:44.216"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.218" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 09:25:44.218" starttime="20170522 09:25:44.217"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.219" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 09:25:44.219" starttime="20170522 09:25:44.219"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.220" level="INFO">Request body set to "{"id": "100", "name": "kypybmpyhh", "createDate": "1473633063279", "email": "kypybmpyhh@email.com", "gender": "M", "socialSecurityNumber": "540669377"}".</msg>
<status status="PASS" endtime="20170522 09:25:44.221" starttime="20170522 09:25:44.220"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Creating client:${request_body}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.221" starttime="20170522 09:25:44.221"></status>
</kw>
<kw name="POST" library="HttpLibrary.HTTP">
<doc>Issues a HTTP POST request.</doc>
<arguments>
<arg>${create_a_client_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.256" starttime="20170522 09:25:44.222"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 09:25:44.257" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 09:25:44.257" starttime="20170522 09:25:44.256"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.258" starttime="20170522 09:25:44.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.259" starttime="20170522 09:25:44.258"></status>
</kw>
<status status="PASS" endtime="20170522 09:25:44.260" starttime="20170522 09:25:44.204"></status>
</kw>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id_of_created_client}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.263" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 09:25:44.264" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 09:25:44.264" starttime="20170522 09:25:44.260"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.272" starttime="20170522 09:25:44.264"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.273" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 09:25:44.274" starttime="20170522 09:25:44.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.275" starttime="20170522 09:25:44.274"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.277" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 09:25:44.277" starttime="20170522 09:25:44.275"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.284" starttime="20170522 09:25:44.277"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.285" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 09:25:44.285" starttime="20170522 09:25:44.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.286" starttime="20170522 09:25:44.285"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.287" level="INFO">${body_second_request} = 9</msg>
<status status="PASS" endtime="20170522 09:25:44.287" starttime="20170522 09:25:44.286"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 09:25:44.288" level="INFO">${last_index} = 8</msg>
<status status="PASS" endtime="20170522 09:25:44.288" starttime="20170522 09:25:44.288"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 09:25:44.290" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170522 09:25:44.290" starttime="20170522 09:25:44.289"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.291" starttime="20170522 09:25:44.291"></status>
</kw>
<msg timestamp="20170522 09:25:44.292" level="INFO">${id_of_created_client} = 11</msg>
<status status="PASS" endtime="20170522 09:25:44.292" starttime="20170522 09:25:44.260"></status>
</kw>
<kw name="Generate a random client for update" library="client_operations">
<assign>
<var>${request_body_new_client_data}</var>
</assign>
<kw name="Get id of last created client" library="client_operations">
<assign>
<var>${id}</var>
</assign>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.294" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 09:25:44.294" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 09:25:44.295" starttime="20170522 09:25:44.293"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_all_clients_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.305" starttime="20170522 09:25:44.296"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_first_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.306" level="INFO">${response_status_first_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 09:25:44.307" starttime="20170522 09:25:44.306"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_first_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.308" starttime="20170522 09:25:44.308"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_first_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.310" level="INFO">${body_first_request} = [{"id":1,"name":"JO\xc3\x83O PAULO","createDate":1451602800000,"email":"JP.ALENCAR@HOTMAIL.COM","gender":"M","socialSecurityNumber":"14190842"},{"id":4,"name":"THALLYS","createDate":1451602800000,"ema...</msg>
<status status="PASS" endtime="20170522 09:25:44.310" starttime="20170522 09:25:44.309"></status>
</kw>
<kw name="GET" library="HttpLibrary.HTTP">
<doc>Issues a HTTP GET request.</doc>
<arguments>
<arg>${get_clients_counter_endpoint}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.319" starttime="20170522 09:25:44.310"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status_second_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.320" level="INFO">${response_status_second_request} = 200 OK</msg>
<status status="PASS" endtime="20170522 09:25:44.320" starttime="20170522 09:25:44.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status_second_request}</arg>
<arg>200</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.321" starttime="20170522 09:25:44.321"></status>
</kw>
<kw name="Get Response Body" library="HttpLibrary.HTTP">
<doc>Get the response body.</doc>
<assign>
<var>${body_second_request}</var>
</assign>
<msg timestamp="20170522 09:25:44.322" level="INFO">${body_second_request} = 9</msg>
<status status="PASS" endtime="20170522 09:25:44.322" starttime="20170522 09:25:44.321"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>${body_second_request}-1</arg>
</arguments>
<assign>
<var>${last_index}</var>
</assign>
<msg timestamp="20170522 09:25:44.323" level="INFO">${last_index} = 8</msg>
<status status="PASS" endtime="20170522 09:25:44.324" starttime="20170522 09:25:44.323"></status>
</kw>
<kw name="Get Json Value" library="HttpLibrary.HTTP">
<doc>Get the target node of the JSON document `json_string` specified by `json_pointer`.</doc>
<arguments>
<arg>${body_first_request}</arg>
<arg>/${last_index}/id</arg>
</arguments>
<assign>
<var>${json_id}</var>
</assign>
<msg timestamp="20170522 09:25:44.325" level="INFO">${json_id} = 11</msg>
<status status="PASS" endtime="20170522 09:25:44.325" starttime="20170522 09:25:44.324"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${json_id}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.326" starttime="20170522 09:25:44.325"></status>
</kw>
<msg timestamp="20170522 09:25:44.326" level="INFO">${id} = 11</msg>
<status status="PASS" endtime="20170522 09:25:44.326" starttime="20170522 09:25:44.293"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>10</arg>
<arg>[LOWER]</arg>
</arguments>
<assign>
<var>${name}</var>
</assign>
<msg timestamp="20170522 09:25:44.328" level="INFO">${name} = mfplgynouk</msg>
<status status="PASS" endtime="20170522 09:25:44.328" starttime="20170522 09:25:44.327"></status>
</kw>
<kw name="Set Variable" library="BuiltIn">
<doc>Returns the given values which can then be assigned to a variables.</doc>
<arguments>
<arg>1473633063279</arg>
</arguments>
<assign>
<var>${createDate}</var>
</assign>
<msg timestamp="20170522 09:25:44.329" level="INFO">${createDate} = 1473633063279</msg>
<status status="PASS" endtime="20170522 09:25:44.329" starttime="20170522 09:25:44.328"></status>
</kw>
<kw name="Catenate" library="BuiltIn">
<doc>Catenates the given items together and returns the resulted string.</doc>
<arguments>
<arg>SEPARATOR=</arg>
<arg>${name}</arg>
<arg>@email.com</arg>
</arguments>
<assign>
<var>${email}</var>
</assign>
<msg timestamp="20170522 09:25:44.330" level="INFO">${email} = mfplgynouk@email.com</msg>
<status status="PASS" endtime="20170522 09:25:44.334" starttime="20170522 09:25:44.329"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>9</arg>
<arg>[NUMBERS]</arg>
</arguments>
<assign>
<var>${socialSecurityNumber}</var>
</assign>
<msg timestamp="20170522 09:25:44.335" level="INFO">${socialSecurityNumber} = 105168288</msg>
<status status="PASS" endtime="20170522 09:25:44.335" starttime="20170522 09:25:44.334"></status>
</kw>
<kw name="Generate Random String" library="String">
<doc>Generates a string with a desired ``length`` from the given ``chars``.</doc>
<arguments>
<arg>1</arg>
<arg>MF</arg>
</arguments>
<assign>
<var>${gender}</var>
</assign>
<msg timestamp="20170522 09:25:44.336" level="INFO">${gender} = M</msg>
<status status="PASS" endtime="20170522 09:25:44.337" starttime="20170522 09:25:44.336"></status>
</kw>
<kw name="Create Dictionary" library="BuiltIn">
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<arguments>
<arg>id=${id}</arg>
<arg>name=${name}</arg>
<arg>createDate=${createDate}</arg>
<arg>email=${email}</arg>
<arg>gender=${gender}</arg>
<arg>socialSecurityNumber=${socialSecurityNumber}</arg>
</arguments>
<assign>
<var>${dictionary}</var>
</assign>
<msg timestamp="20170522 09:25:44.338" level="INFO">${dictionary} = {u'id': '11', u'name': u'mfplgynouk', u'createDate': u'1473633063279', u'email': u'mfplgynouk@email.com', u'gender': u'M', u'socialSecurityNumber': u'105168288'}</msg>
<status status="PASS" endtime="20170522 09:25:44.338" starttime="20170522 09:25:44.337"></status>
</kw>
<kw name="Stringify Json" library="HttpLibrary.HTTP">
<doc>Converts the data structure to a string containing its JSON string representation</doc>
<arguments>
<arg>${dictionary}</arg>
</arguments>
<assign>
<var>${update_client_json}</var>
</assign>
<msg timestamp="20170522 09:25:44.339" level="INFO">${update_client_json} = {"id": "11", "name": "mfplgynouk", "createDate": "1473633063279", "email": "mfplgynouk@email.com", "gender": "M", "socialSecurityNumber": "105168288"}</msg>
<status status="PASS" endtime="20170522 09:25:44.339" starttime="20170522 09:25:44.339"></status>
</kw>
<msg timestamp="20170522 09:25:44.340" level="INFO">${request_body_new_client_data} = {"id": "11", "name": "mfplgynouk", "createDate": "1473633063279", "email": "mfplgynouk@email.com", "gender": "M", "socialSecurityNumber": "105168288"}</msg>
<status status="PASS" endtime="20170522 09:25:44.340" starttime="20170522 09:25:44.292"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Loggin this new user ${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.348" starttime="20170522 09:25:44.341"></status>
</kw>
<kw name="Create Http Context" library="HttpLibrary.HTTP">
<doc>Sets the HTTP host to use for future requests. You must call this</doc>
<arguments>
<arg>${http_context}</arg>
<arg>${http_variable}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.349" level="INFO">Host for next HTTP request set to 'localhost:8080'</msg>
<msg timestamp="20170522 09:25:44.349" level="INFO">Scheme for next HTTP request set to 'http'</msg>
<status status="PASS" endtime="20170522 09:25:44.349" starttime="20170522 09:25:44.348"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Content-Type</arg>
<arg>${header_content_json}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.350" level="INFO">Set request header "Content-Type" to "application/json"</msg>
<status status="PASS" endtime="20170522 09:25:44.350" starttime="20170522 09:25:44.349"></status>
</kw>
<kw name="Set Request Header" library="HttpLibrary.HTTP">
<doc>Sets a request header for the next request.</doc>
<arguments>
<arg>Accept</arg>
<arg>${header_accept_all}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.351" level="INFO">Set request header "Accept" to "*/*"</msg>
<status status="PASS" endtime="20170522 09:25:44.351" starttime="20170522 09:25:44.350"></status>
</kw>
<kw name="Set Request Body" library="HttpLibrary.HTTP">
<doc>Set the request body for the next HTTP request.</doc>
<arguments>
<arg>${request_body_new_client_data}</arg>
</arguments>
<msg timestamp="20170522 09:25:44.352" level="INFO">Request body set to "{"id": "11", "name": "mfplgynouk", "createDate": "1473633063279", "email": "mfplgynouk@email.com", "gender": "M", "socialSecurityNumber": "105168288"}".</msg>
<status status="PASS" endtime="20170522 09:25:44.352" starttime="20170522 09:25:44.351"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.353" starttime="20170522 09:25:44.352"></status>
</kw>
<kw name="PUT" library="HttpLibrary.HTTP">
<doc>Issues a HTTP PUT request.</doc>
<arguments>
<arg>${edit_a_client_endpoint}${id_of_created_client}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.367" starttime="20170522 09:25:44.353"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>Updating client with data:${request_body_new_client_data}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.368" starttime="20170522 09:25:44.368"></status>
</kw>
<kw name="Get Response Status" library="HttpLibrary.HTTP">
<doc>Returns the response status line (e.g. "200 OK" or "404 Not found")</doc>
<assign>
<var>${response_status}</var>
</assign>
<msg timestamp="20170522 09:25:44.370" level="INFO">${response_status} = 204 No Content</msg>
<status status="PASS" endtime="20170522 09:25:44.370" starttime="20170522 09:25:44.369"></status>
</kw>
<kw name="Log To Console" library="BuiltIn">
<doc>Logs the given message to the console.</doc>
<arguments>
<arg>${\n}Status code:${response_status}</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.371" starttime="20170522 09:25:44.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${response_status}</arg>
<arg>204</arg>
</arguments>
<status status="PASS" endtime="20170522 09:25:44.372" starttime="20170522 09:25:44.371"></status>
</kw>
<status status="PASS" endtime="20170522 09:25:44.372" starttime="20170522 09:25:44.204"></status>
</kw>
<status status="PASS" endtime="20170522 09:25:44.372" critical="yes" starttime="20170522 09:25:44.203"></status>
</test>
<status status="PASS" endtime="20170522 09:25:44.373" starttime="20170522 09:25:44.090"></status>
</suite>
<status status="PASS" endtime="20170522 09:25:44.374" starttime="20170522 09:25:44.088"></status>
</suite>
<status status="PASS" endtime="20170522 09:25:44.375" starttime="20170522 09:25:44.059"></status>
</suite>
<statistics>
<total>
<stat fail="0" pass="1">Critical Tests</stat>
<stat fail="0" pass="1">All Tests</stat>
</total>
<tag>
</tag>
<suite>
<stat fail="0" id="s1" name="Project-Ci-Daniels-Rickardb" pass="1">Project-Ci-Daniels-Rickardb</stat>
<stat fail="0" id="s1-s1" name="Robotframework-Backend" pass="1">Project-Ci-Daniels-Rickardb.Robotframework-Backend</stat>
<stat fail="0" id="s1-s1-s1" name="00 Regression tests" pass="1">Project-Ci-Daniels-Rickardb.Robotframework-Backend.00 Regression tests</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
